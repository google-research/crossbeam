{
    "num_tasks": 89,
    "num_tasks_solved": 61,
    "results": [
        {
            "elapsed_time": 0.09595640300540254,
            "num_unique_values": 117,
            "num_values_explored": 251,
            "solution": "Left(Concatenate(var_0, '125'), Minus(Len(var_0), 3))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Ducati100', 'Honda125', 'Ducati250', 'Honda250', 'Honda550', 'Ducati125']},\n    outputs=['Ducati', 'Honda', 'Ducati', 'Honda', 'Honda', 'Ducati'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.396890932985116,
            "num_unique_values": 783,
            "num_values_explored": 5093,
            "solution": "Left(Concatenate(Trim('Dr. '), Concatenate(' ', Left(var_0, Add(3, 3)))), Add(3, Find(' ', var_0)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Nancy FreeHafer', 'Andrew Cencici', 'Jan Kotas', 'Mariya Sergienko']},\n    outputs=['Dr. Nancy', 'Dr. Andrew', 'Dr. Jan', 'Dr. Mariya'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.03861414099810645,
            "num_unique_values": 59,
            "num_values_explored": 109,
            "solution": "Trim(Left(var_0, Find(' ', var_0)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Nancy FreeHafer', 'Andrew Cencici', 'Jan Kotas', 'Mariya Sergienko']},\n    outputs=['Nancy', 'Andrew', 'Jan', 'Mariya'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 36.31871224503266,
            "num_unique_values": 1533,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['Nancy FreeHafer', 'Andrew Cencici', 'Jan Kotas', 'Mariya Sergienko']},\n    outputs=['N.F.', 'A.C.', 'J.K.', 'M.S.'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.03675947501324117,
            "num_unique_values": 66,
            "num_values_explored": 100,
            "solution": "Right(var_0, Minus(Len(var_0), Find(' ', var_0)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Nancy FreeHafer', 'Andrew Cencici', 'Jan Kotas', 'Mariya Sergienko']},\n    outputs=['FreeHafer', 'Cencici', 'Kotas', 'Sergienko'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 35.81284923898056,
            "num_unique_values": 1547,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['Nancy', 'Andrew', 'Jan', 'Mariya'], 'var_1': ['FreeHafer', 'Cencici', 'Kotas', 'Sergienko']},\n    outputs=['Nancy F.', 'Andrew C.', 'Jan K.', 'Mariya S.'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.07803496002452448,
            "num_unique_values": 129,
            "num_values_explored": 224,
            "solution": "Concatenate(Left(var_0, 1), Concatenate('. ', var_1))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Launa', 'Lakenya', 'Brendan', 'Bradford', 'Rudolf', 'Lara'], 'var_1': ['Withers', 'Edison', 'Hage', 'Lango', 'Akiyama', 'Constable']},\n    outputs=['L. Withers', 'L. Edison', 'B. Hage', 'B. Lango', 'R. Akiyama', 'L. Constable'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.22732718498446047,
            "num_unique_values": 231,
            "num_values_explored": 661,
            "solution": "Concatenate(Concatenate(var_1, ','), Concatenate(' ', Concatenate(Left(var_0, 1), '.')))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Launa', 'Lakenya', 'Brendan', 'Bradford', 'Rudolf'], 'var_1': ['Withers', 'Edison', 'Hage', 'Lango', 'Akiyama']},\n    outputs=['Withers, L.', 'Edison, L.', 'Hage, B.', 'Lango, B.', 'Akiyama, R.'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08199013501871377,
            "num_unique_values": 131,
            "num_values_explored": 228,
            "solution": "Concatenate(var_0, Concatenate(' ', var_1))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Launa', 'Lakenya', 'Brendan', 'Bradford', 'Rudolf', 'Lara'], 'var_1': ['Withers', 'Edison', 'Hage', 'Lango', 'Akiyama', 'Constable']},\n    outputs=['Launa Withers', 'Lakenya Edison', 'Brendan Hage', 'Bradford Lango', 'Rudolf Akiyama', 'Lara Constable'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.024434465973172337,
            "num_unique_values": 42,
            "num_values_explored": 68,
            "solution": "Mid(var_0, Add(2, 3), 3)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['938-242-504', '308-916-545', '623-599-749', '981-424-843', '118-980-214', '244-655-094']},\n    outputs=['242', '916', '599', '424', '980', '655'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 49.141877834976185,
            "num_unique_values": 2798,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['+106 769-858-438', '+83 973-757-831', '+62 647-787-775', '+172 027-507-632', '+72 001-050-856', '+95 310-537-401', '+6 775-969-238']},\n    outputs=['+106 (769) 858-438', '+83 (973) 757-831', '+62 (647) 787-775', '+172 (027) 507-632', '+72 (001) 050-856', '+95 (310) 537-401', '+6 (775) 969-238'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.037105012976098806,
            "num_unique_values": 60,
            "num_values_explored": 94,
            "solution": "Right(Replace(var_0, 1, 2, '98'), 3)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['938-242-504', '308-916-545', '623-599-749', '981-424-843', '118-980-214', '244-655-094']},\n    outputs=['504', '545', '749', '843', '214', '094'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.561799004964996,
            "num_unique_values": 613,
            "num_values_explored": 8361,
            "solution": "Concatenate(Left(Concatenate('(', var_0), Len('8) 9')), Concatenate(') ', Mid(Replace(var_0, 2, 3, '-'), 3, 99)))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['938-242-504', '308-916-545', '623-599-749', '981-424-843', '118-980-214', '244-655-094', '830-941-991']},\n    outputs=['(938) 242-504', '(308) 916-545', '(623) 599-749', '(981) 424-843', '(118) 980-214', '(244) 655-094', '(830) 941-991'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.05023668904323131,
            "num_unique_values": 79,
            "num_values_explored": 159,
            "solution": "Substitute(var_0, '-', '.')",
            "solution_weight": 4,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['938-242-504', '308-916-545', '623-599-749', '981-424-843', '118-980-214', '244-655-094']},\n    outputs=['938.242.504', '308.916.545', '623.599.749', '981.424.843', '118.980.214', '244.655.094'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08690922503592446,
            "num_unique_values": 130,
            "num_values_explored": 258,
            "solution": "Left(Mid(var_0, 2, 3), Minus(Find(' ', var_0), 2))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['+106 769-858-438', '+83 973-757-831', '+62 647-787-775', '+172 027-507-632', '+72 001-050-856', '+95 310-537-401', '+6 775-969-238']},\n    outputs=['106', '83', '62', '172', '72', '95', '6'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2555345289874822,
            "num_unique_values": 266,
            "num_values_explored": 700,
            "solution": "Left(Trim(Mid(var_0, Find(' ', var_0), Len(var_0))), 3)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['+106 769-858-438', '+83 973-757-831', '+62 647-787-775', '+172 027-507-632', '+72 001-050-856', '+95 310-537-401', '+6 775-969-238']},\n    outputs=['769', '973', '647', '027', '001', '310', '775'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17537185200490057,
            "num_unique_values": 201,
            "num_values_explored": 480,
            "solution": "Left(Right(var_0, Len(Concatenate('72 0', '6 7'))), 3)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['+106 769-858-438', '+83 973-757-831', '+62 647-787-775', '+172 027-507-632', '+72 001-050-856', '+95 310-537-401', '+6 775-969-238']},\n    outputs=['858', '757', '787', '507', '050', '537', '969'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.03949246997945011,
            "num_unique_values": 67,
            "num_values_explored": 91,
            "solution": "Right(Mid(var_0, Find(' ', var_0), 99), 3)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['+106 769-858-438', '+83 973-757-831', '+62 647-787-775', '+172 027-507-632', '+72 001-050-856', '+95 310-537-401', '+6 775-969-238']},\n    outputs=['438', '831', '775', '632', '856', '401', '238'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 43.35200416704174,
            "num_unique_values": 2427,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['+106 769-858-438', '+83 973-757-831', '+62 647-787-775', '+172 027-507-632', '+72 001-050-856', '+95 310-537-401', '+6 775-969-238']},\n    outputs=['106.769.858.438', '83.973.757.831', '62.647.787.775', '172.027.507.632', '72.001.050.856', '95.310.537.401', '6.775.969.238'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.018461210012901574,
            "num_unique_values": 31,
            "num_values_explored": 50,
            "solution": "Left(var_0, 3)",
            "solution_weight": 3,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['938-242-504', '308-916-545', '623-599-749', '981-424-843', '118-980-214', '244-655-094']},\n    outputs=['938', '308', '623', '981', '118', '244'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.07737012294819579,
            "num_unique_values": 141,
            "num_values_explored": 229,
            "solution": "Concatenate(var_1, Concatenate(' ', var_0))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Launa', 'Lakenya', 'Brendan', 'Bradford', 'Rudolf', 'Lara'], 'var_1': ['Withers', 'Edison', 'Hage', 'Lango', 'Akiyama', 'Constable']},\n    outputs=['Withers Launa', 'Edison Lakenya', 'Hage Brendan', 'Lango Bradford', 'Akiyama Rudolf', 'Constable Lara'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08299158496083692,
            "num_unique_values": 152,
            "num_values_explored": 229,
            "solution": "Concatenate(var_0, Concatenate(', ', var_1))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['University of Pennsylvania', 'Cornell University', 'University of Maryland College Park', 'University of Michigan', 'Yale University', 'Columbia University'], 'var_1': ['Phialdelphia, PA, USA', 'Ithaca, New York, USA', 'College Park, MD', 'Ann Arbor, MI, USA', 'New Haven, CT, USA', 'New York, NY, USA']},\n    outputs=['University of Pennsylvania, Phialdelphia, PA, USA', 'Cornell University, Ithaca, New York, USA', 'University of Maryland College Park, College Park, MD', 'University of Michigan, Ann Arbor, MI, USA', 'Yale University, New Haven, CT, USA', 'Columbia University, New York, NY, USA'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 52.6129041230306,
            "num_unique_values": 2862,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['University of Pennsylvania', 'UCLA', 'Cornell University', 'Penn', 'University of Maryland College Park', 'University of Michigan'], 'var_1': ['Phialdelphia, PA, USA', 'Los Angeles, CA', 'Ithaca, New York, USA', 'Philadelphia, PA, USA', 'College Park, MD', 'Ann Arbor, MI, USA']},\n    outputs=['University of Pennsylvania, Phialdelphia, PA, USA', 'UCLA, Los Angeles, CA, USA', 'Cornell University, Ithaca, New York, USA', 'Penn, Philadelphia, PA, USA', 'University of Maryland College Park, College Park, MD, USA', 'University of Michigan, Ann Arbor, MI, USA'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 58.15954610903282,
            "num_unique_values": 3133,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['University of Pennsylvania', 'UCLA', 'Cornell University', 'Penn', 'University of Maryland College Park', 'University of Michigan'], 'var_1': ['Phialdelphia, PA, USA', 'Los Angeles, CA', 'Ithaca, New York, USA', 'Philadelphia, PA, USA', 'College Park, MD', 'Ann Arbor, MI, USA']},\n    outputs=['Phialdelphia, PA, USA', 'Los Angeles, CA, USA', 'Ithaca, New York, USA', 'Philadelphia, PA, USA', 'College Park, MD, USA', 'Ann Arbor, MI, USA'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 59.5608067229623,
            "num_unique_values": 3907,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['University of Pennsylvania', 'UCLA', 'Cornell University', 'Penn', 'University of Maryland College Park', 'University of Michigan', 'Columbia University', 'NYU'], 'var_1': ['Phialdelphia, PA, USA', 'Los Angeles, CA', 'Ithaca, New York, USA', 'Philadelphia, PA, USA', 'College Park, MD', 'Ann Arbor, MI, USA', 'New York, NY, USA', 'New York, New York, USA']},\n    outputs=['Phialdelphia, PA, USA', 'Los Angeles, CA, USA', 'Ithaca, NY, USA', 'Philadelphia, PA, USA', 'College Park, MD, USA', 'Ann Arbor, MI, USA', 'New York, NY, USA', 'New York, NY, USA'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 62.58604317699792,
            "num_unique_values": 4075,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['University of Pennsylvania', 'UCLA', 'Cornell University', 'Penn', 'University of Maryland College Park', 'University of Michigan', 'Columbia University', 'NYU'], 'var_1': ['Phialdelphia, PA, USA', 'Los Angeles, CA', 'Ithaca, New York, USA', 'Philadelphia, PA, USA', 'College Park, MD', 'Ann Arbor, MI, USA', 'New York, NY, USA', 'New York, New York, USA']},\n    outputs=['Phialdelphia, PA, USA', 'Los Angeles, CA, USA', 'Ithaca, NY, USA', 'Philadelphia, PA, USA', 'College Park, MD, USA', 'Ann Arbor, MI, USA', 'New York, NY, USA', 'New York, NY, USA'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 60.77153669798281,
            "num_unique_values": 4007,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['University of Pennsylvania', 'UCLA', 'Cornell University', 'Penn', 'University of Maryland College Park', 'University of Michigan', 'Columbia University', 'NYU'], 'var_1': ['Phialdelphia, PA, USA', 'Los Angeles, CA', 'Ithaca, New York, USA', 'Philadelphia, PA, USA', 'College Park, MD', 'Ann Arbor, MI, USA', 'New York, NY, USA', 'New York, New York, USA']},\n    outputs=['Phialdelphia, PA, USA', 'Los Angeles, CA, USA', 'Ithaca, NY, USA', 'Philadelphia, PA, USA', 'College Park, MD, USA', 'Ann Arbor, MI, USA', 'New York, NY, USA', 'New York, NY, USA'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 9.970328972034622,
            "num_unique_values": 1583,
            "num_values_explored": 15672,
            "solution": "Mid(Concatenate('.', var_0), Find('.', var_0), 3)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['AIX 5.1', 'VMware ESX Server 3.5.0 build-110268', 'Linux Linux 2.6 Linux', 'Red Hat Enterprise AS 4 <2.6-78.0.13.ELlargesmp>', 'Microsoft <R> Windows <R> 2000 Advanced Server 1.0', 'Microsoft Windows XP Win2008R2 6.1.7601']},\n    outputs=['5.1', '3.5', '2.6', '2.6', '1.0', '6.1'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.03639769001165405,
            "num_unique_values": 53,
            "num_values_explored": 83,
            "solution": "Replace(var_0, 3, 3, '')",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['01/15/2013', '03/07/2011', '05/09/2009']},\n    outputs=['01/2013', '03/2011', '05/2009'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.04152183199767023,
            "num_unique_values": 68,
            "num_values_explored": 110,
            "solution": "Trim(Replace(var_0, 2, Add(2, 2), ' '))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['John Doe', 'Mayur Naik', 'Nimit Singh']},\n    outputs=['J Doe', 'M Naik', 'N Singh'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 44.28656349697849,
            "num_unique_values": 2263,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['Adf_ROCLeader_BAN_728x90_CPM_STD _BRD _NRT_DCK', 'MMC_ContextualLarRec_BAN_336x280_CPM_STD _LDS _RTG_DCK', 'Adf_ROC_DLBD_728x90_CPM_STD_DRS_NRT_NOR_DCK']},\n    outputs=['Adf_ROCLeader_BAN_728x90_CPM_STD _Branding _NRT_DCK', 'MMC_ContextualLarRec_BAN_336x280_CPM_STD _Leads _RTG_DCK', 'Adf_ROC_DLBD_728x90_CPM_STD_Direct Response_NRT_NOR_DCK'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.09846143599133939,
            "num_unique_values": 164,
            "num_values_explored": 253,
            "solution": "Left(Substitute(var_0, '0', '', 2), Minus(Find('-', var_0), 2))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Dec 2, 2014, 11=23 PM - +91 90000 80000= loren ipsum', 'Dec 2, 2014, 11=24 PM - +91 90000 80000= loren']},\n    outputs=['Dec 2, 2014, 11=23 PM', 'Dec 2, 2014, 11=24 PM'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 43.605354530969635,
            "num_unique_values": 2082,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['TL-18273982| 10MM', 'TL-288762| 76DK', 'CT-576', 'N/A']},\n    outputs=['TL-18273982', 'TL-288762', 'CT-576', 'N/A'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 64.94828241603682,
            "num_unique_values": 3694,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['Tire Pressure ABC123873 Monitor', 'Oil Life ABC849999999021 gauge', 'Air conditioner GHF211 maintenance']},\n    outputs=['ABC123873', 'ABC849999999021', 'GHF211'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 64.43253412697231,
            "num_unique_values": 3672,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['General Electric', 'General Electric Inc', 'General Electric Company', 'Microsoft', 'Microsoft Corporation', 'Nintendo', 'Nintendo Enterprises']},\n    outputs=['General Electric', 'General Electric', 'General Electric', 'Microsoft', 'Microsoft', 'Nintendo', 'Nintendo'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.04321169602917507,
            "num_unique_values": 67,
            "num_values_explored": 100,
            "solution": "Right(var_0, Minus(Len(var_0), Find(' ', var_0)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Name= ABC Retailers', 'ame= XYZ Suppliers']},\n    outputs=['ABC Retailers', 'XYZ Suppliers'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.0503753189696,
            "num_unique_values": 732,
            "num_values_explored": 4542,
            "solution": "Substitute(If(Exact('dd', var_0), var_1, var_0), Lower(var_0), var_1)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['C0abc', 'aabc', 'C0dd', 'dd'], 'var_1': ['def', 'def', 'qwe', 'qwe']},\n    outputs=['C0abc', 'def', 'C0dd', 'qwe'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 42.782944992999546,
            "num_unique_values": 2024,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['http=//www.apple.com/uk/mac', 'https=//www.microsoft.com/en-gb/windows', 'https=//www.microsoft.com/']},\n    outputs=['mac', 'windows', 'microsoft'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.035164964967407286,
            "num_unique_values": 67,
            "num_values_explored": 91,
            "solution": "Right(Mid(var_0, Len('ABCDE/FGHI/JKL'), 99), Add(3, 3))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['ABCDE/FGHI/JKL/MNOPQR', 'A/ABCDE/FGHI/JKL']},\n    outputs=['MNOPQR', 'JKL'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.28193815500708297,
            "num_unique_values": 265,
            "num_values_explored": 837,
            "solution": "If(Gt(Len(var_2), Add(2, 3)), var_1, var_0)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['I love apples', 'I love apples'], 'var_1': ['I hate bananas', 'I hate bananas'], 'var_2': ['banana', 'apple']},\n    outputs=['I hate bananas', 'I love apples'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 19.763763680995908,
            "num_unique_values": 1853,
            "num_values_explored": 23987,
            "solution": "Concatenate(If(Exact('that', var_0), var_0, ''), Substitute(var_0, 'that', '', 1))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['thatensures', 'thatwill', 'thathave', 'knowthat', 'that', 'mouse', 'knowthat']},\n    outputs=['ensures', 'will', 'have', 'know', 'that', 'mouse', 'know'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 58.29347283899551,
            "num_unique_values": 3264,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['This is a <string>, It should be <changed> to <a> number.', 'a < 4 and a > 0']},\n    outputs=['This is a string, It should be changed to a number.', 'a 4 and a 0'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.059186549042351544,
            "num_unique_values": 117,
            "num_values_explored": 160,
            "solution": "Substitute(var_0, '/delete words in the area /', '')",
            "solution_weight": 4,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['This is a line. /delete words in the area /keep this part', '/delete words in the area /']},\n    outputs=['This is a line. keep this part', ''],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18781072302954271,
            "num_unique_values": 232,
            "num_values_explored": 539,
            "solution": "Trim(Left(var_0, Find(' ', var_0, Len(' vulgaris'))))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Polygonum amphibium', 'Hippuris vulgaris', 'Lysimachia vulgaris', 'Juncus bulbosus ssp. bulbosus', 'Lycopus europaeus ssp. europaeus', 'Nymphaea alba']},\n    outputs=['Polygonum', 'Hippuris', 'Lysimachia', 'Juncus bulbosus', 'Lycopus europaeus', 'Nymphaea'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 47.82217612594832,
            "num_unique_values": 2548,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['one, 1', 'two, 2', 'three, 3', 'four, 4']},\n    outputs=['one apple', 'two bananas', 'three strawberries', 'four oranges'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08726988697890192,
            "num_unique_values": 144,
            "num_values_explored": 260,
            "solution": "Left(Right(var_0, Add(2, 2)), 3)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['USD.EUR<IDEALPRO,CASH,EUR>', 'USD.EUR<IDEALPRO,CASH,USD>', 'KOR.JPN<IDEALPRO,CASH,WON>', 'KOR.JPN<IDEALPRO,CASH,YEN>']},\n    outputs=['EUR', 'USD', 'WON', 'YEN'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.602987252001185,
            "num_unique_values": 694,
            "num_values_explored": 5948,
            "solution": "Concatenate(var_0, Concatenate('/n', Concatenate(var_1, Concatenate('/n', var_2))))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Traci Brown', 'Mary Hannan', 'Linda Thomas'], 'var_1': ['1301 Robinson Court', '1195 Amethyst Drive', '2479 North Bend Road'], 'var_2': ['Saginaw, MI 48607', 'Lansing, MI 48933', 'Allen, KY 41601']},\n    outputs=['Traci Brown/n1301 Robinson Court/nSaginaw, MI 48607', 'Mary Hannan/n1195 Amethyst Drive/nLansing, MI 48933', 'Linda Thomas/n2479 North Bend Road/nAllen, KY 41601'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.05564819602295756,
            "num_unique_values": 79,
            "num_values_explored": 159,
            "solution": "Substitute(var_0, '-%', '%')",
            "solution_weight": 4,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['-%134', '500', '5.125', '-%43.00']},\n    outputs=['%134', '500', '5.125', '%43.00'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 25.046802353987005,
            "num_unique_values": 865,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['801-456-8765', '<978> 654-0299', '978.654.0299']},\n    outputs=['8014568765', '9786540299', '9786540299'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.14591026800917462,
            "num_unique_values": 183,
            "num_values_explored": 446,
            "solution": "Concatenate(Left(var_1, 1), Concatenate(var_0, '_acme.com'))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['brown', 'thomas', 'ward'], 'var_1': ['traci', 'linda', 'jack']},\n    outputs=['tbrown_acme.com', 'lthomas_acme.com', 'jward_acme.com'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.15711839200230315,
            "num_unique_values": 212,
            "num_values_explored": 449,
            "solution": "Concatenate(Left(var_0, 1), Concatenate(var_1, Concatenate('_', var_2)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['ayako', 'amy', 'tom'], 'var_1': ['ogawa', 'johnson', 'chang'], 'var_2': ['acme.com', 'google.com', 'upenn.edu']},\n    outputs=['aogawa_acme.com', 'ajohnson_google.com', 'tchang_upenn.edu'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.032569268019869924,
            "num_unique_values": 68,
            "num_values_explored": 90,
            "solution": "Replace(var_1, 1, Find('_', var_1), '')",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['ann chang', 'bobby smith', 'art lennox'], 'var_1': ['achang_maaker.com', 'bobt_sphynx.uk.co', 'art.lennox_svxn.com']},\n    outputs=['maaker.com', 'sphynx.uk.co', 'svxn.com'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.056049201055429876,
            "num_unique_values": 97,
            "num_values_explored": 169,
            "solution": "Substitute(Right(var_0, 3), '.', '', 1)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['www.domain.com', 'mail.net', 'www.amaon.co.uk']},\n    outputs=['com', 'net', 'uk'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.03841369197471067,
            "num_unique_values": 71,
            "num_values_explored": 106,
            "solution": "Trim(Replace(var_0, 1, Find('= ', var_0), ''))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['year= 2016', 'make= subaru', 'model= outback wagon', 'fuel economy= 25/33']},\n    outputs=['2016', 'subaru', 'outback wagon', '25/33'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1053500029956922,
            "num_unique_values": 160,
            "num_values_explored": 302,
            "solution": "Right(Substitute(var_0, 'https=//', 'ftp=//'), Minus(Minus(Len(var_0), Find('/', var_0)), 1))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['https=//exceljet.net/catalog', 'https=//microsoft.com', 'ftp=//someserver.com', 'sftp=//127.0.0.1']},\n    outputs=['exceljet.net/catalog', 'microsoft.com', 'someserver.com', '127.0.0.1'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.3568621320300736,
            "num_unique_values": 758,
            "num_values_explored": 5144,
            "solution": "Right(Left(var_0, Add(3, Find('.com', var_0))), Len(Trim(Right(var_0, Add(2, Len(Rept('.com', 3)))))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['send email to json_acme.com', 'contact help_robot.com for all support requests']},\n    outputs=['json_acme.com', 'help_robot.com'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 50.305554530990776,
            "num_unique_values": 2447,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['this is a _username in the middle', 'twitter names look like= _name', 'with two _name1 and _name2']},\n    outputs=['_username', '_name', '_name1'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.09038761397823691,
            "num_unique_values": 148,
            "num_values_explored": 260,
            "solution": "Left(var_1, Minus(Find('_', var_1), 1))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['ann chang', 'bobby smith', 'art lennox'], 'var_1': ['achang_maaker.com', 'bobt_sphynx.uk.co', 'art.lennox_svxn.com']},\n    outputs=['achang', 'bobt', 'art.lennox'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 45.92947983997874,
            "num_unique_values": 2295,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['https=//abc.com/def', 'http=//www.abc.com/def/cef', 'http=//chandoo.org/wp/def-def']},\n    outputs=['https=//abc.com/', 'http=//www.abc.com', 'http=//chandoo.org/'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.017826289986260235,
            "num_unique_values": 32,
            "num_values_explored": 50,
            "solution": "Left(var_0, Add(3, 2))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Susan Ann Chang', 'Ayako Tanaka', 'Bobby T. smth']},\n    outputs=['Susan', 'Ayako', 'Bobby'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16430527897318825,
            "num_unique_values": 225,
            "num_values_explored": 471,
            "solution": "Left(Substitute(Substitute(var_0, '.', var_0), 'fox', ''), Minus(Find('fox', Substitute(var_0, ' ', 'fox')), 1))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['The quick brown fox.', 'quick brown fox.', 'fox']},\n    outputs=['The', 'quick', ''],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 42.14910543104634,
            "num_unique_values": 2053,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['11/1/2015 - First call/n12/3/2015-order placed/n11/15/2015-follow-up,interested', '11/1/2015 - First call/n12/3/2015-order placed', '11/1/2015 - First call']},\n    outputs=['11/15/2015-follow-up,interested', '12/3/2015-order placed', '11/1/2015 - First call'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 42.94538333796663,
            "num_unique_values": 2140,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['chang,amy', 'smith,bobby', 'lennox,aaron']},\n    outputs=['amy,chang', 'bobby,smith', 'aaron,lennox'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.03563080698950216,
            "num_unique_values": 60,
            "num_values_explored": 91,
            "solution": "Right(Replace(var_0, 1, 3, ''), 3)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Park Kim', 'Lee Kim', 'Kim Lee']},\n    outputs=['Kim', 'Kim', 'Lee'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.035355471016373485,
            "num_unique_values": 67,
            "num_values_explored": 100,
            "solution": "Right(var_0, Len(' is '))",
            "solution_weight": 4,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['focus on one thing at a time', 'premature opt is the root of all evil', 'where is life']},\n    outputs=['time', 'evil', 'life'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.6718703060178086,
            "num_unique_values": 743,
            "num_values_explored": 3611,
            "solution": "Trim(Right(Replace(Trim(Substitute(var_0, Right(var_0, Add(3, 3)), '')), 1, Add(3, 2), ''), Add(3, 3)))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['susan ann chang', 'ayako tanaka', 'bobby t. smith', 'anthory r. tom brown']},\n    outputs=['ann', '', 't.', 'r. tom'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 42.997833407949656,
            "num_unique_values": 1758,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['figs', 'mangos'], 'var_1': ['', 'kiwis'], 'var_2': ['apples', 'grapes']},\n    outputs=['figs, apples', 'mangos, kiwis, grapes'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.15430454298621044,
            "num_unique_values": 201,
            "num_values_explored": 450,
            "solution": "Concatenate(var_0, Concatenate(' ', var_1))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['susan', 'aaron'], 'var_1': ['chang', 'kim']},\n    outputs=['susan chang', 'aaron kim'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3131666600238532,
            "num_unique_values": 304,
            "num_values_explored": 839,
            "solution": "If(Exact(var_1, var_0), var_0, Right(var_2, 3))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['cat', 'blue', 'firm', 'soft'], 'var_1': ['dog', 'red', 'firm', 'soft'], 'var_2': ['cat', 'red', 'soft', 'soft']},\n    outputs=['cat', 'red', 'firm', 'soft'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08455810800660402,
            "num_unique_values": 132,
            "num_values_explored": 252,
            "solution": "Left(Concatenate(var_0, To_Text(1)), Minus(Find('.', var_0), 1))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['happy.jpg', 'pivot table.xls', 'sales data.csv', 'invoice3001.xls.pdf']},\n    outputs=['happy', 'pivot table', 'sales data', 'invoice3001'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 38.95391299802577,
            "num_unique_values": 1337,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['The shawshank', 'The godfather', 'pulp fiction']},\n    outputs=['The shawshank', 'The godfather', 'pulp fiction'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.0540733759989962,
            "num_unique_values": 87,
            "num_values_explored": 160,
            "solution": "Substitute(var_0, '-', '')",
            "solution_weight": 4,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['801-345-1987', '612-554-2000']},\n    outputs=['8013451987', '6125542000'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.025663403037469834,
            "num_unique_values": 40,
            "num_values_explored": 63,
            "solution": "Mid(var_0, Len(Concatenate('c=/users/dave/', '/')), 99)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['c=/users/dave/shotcut.xls', 'c=/users/dave/formulas.xls', 'c=/users/dave/pivot table.xls']},\n    outputs=['shotcut.xls', 'formulas.xls', 'pivot table.xls'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.05482657998800278,
            "num_unique_values": 83,
            "num_values_explored": 159,
            "solution": "Substitute(var_0, var_1, '')",
            "solution_weight": 4,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['zx66448', 'zx66448', 'zx66448', 'zx66448', 'zx66448'], 'var_1': ['z', 'x', '6', '4', '8']},\n    outputs=['x66448', 'z66448', 'zx448', 'zx668', 'zx6644'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.05375466798432171,
            "num_unique_values": 90,
            "num_values_explored": 160,
            "solution": "Substitute(var_0, ' ', '-')",
            "solution_weight": 4,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['801 456 8756', '978 456 8756']},\n    outputs=['801-456-8756', '978-456-8756'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11786364496219903,
            "num_unique_values": 199,
            "num_values_explored": 319,
            "solution": "Trim(Left(var_0, Find(' ', var_0, Len('Truck'))))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Trucking Inc.', 'New Truck Inc', 'ABV Trucking Inc, LLC']},\n    outputs=['Trucking', 'New Truck', 'ABV Trucking'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 69.96803773497231,
            "num_unique_values": 4359,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['April 1 1799', 'April 11 1867', 'February 12 1806', 'February 21 1798', 'February 28 1844 as Delaware Township', 'February 5 1798', 'February 7 1892 Verona Township', 'February 9 1797', 'January 19 1748', 'July 10 1721 as Upper Penns Neck Township', 'March 15 1860', 'March 17 1870 <as Raritan Township>', 'March 17 1874', 'March 23 1864', 'March 5 1867', 'April 28th 1828']},\n    outputs=['1799', '1867', '1806', '1798', '1844', '1798', '1892', '1797', '1748', '1721', '1860', '1870', '1874', '1864', '1867', '1828'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.2900134869851172,
            "num_unique_values": 619,
            "num_values_explored": 3137,
            "solution": "Mid(var_0, Add(2, Find('_', var_0)), 99)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['2283-332-44543 CAP DDT PPL445_ HEEN PAX 77820', '44372-33-3223 TYYTE CAP BOX 1550 244 BOX PPSSA223_ PAX', 'PRECISE 77 CLEAR BLUE 99WIE_ BOX 4403 PAX SSKA']},\n    outputs=['HEEN PAX 77820', 'PAX', 'BOX 4403 PAX SSKA'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08445823803776875,
            "num_unique_values": 131,
            "num_values_explored": 253,
            "solution": "Left(Concatenate(var_0, 'ind'), Minus(Len(var_0), Add(3, 3)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['india china japan', 'indonesia korea']},\n    outputs=['india china', 'indonesia'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.0376507859909907,
            "num_unique_values": 61,
            "num_values_explored": 110,
            "solution": "Trim(Right(var_0, Minus(Len(var_0), Len('geb. 14 oct 1956'))))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['geb. 14 oct 1956 Westerkerk HRL', 'geb. 14 oct 1956', 'geb. 15 feb 1987 Westerkerk HRL']},\n    outputs=['Westerkerk HRL', '', 'Westerkerk HRL'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 31.255261458980385,
            "num_unique_values": 1324,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['R/V<208,0,32>', 'R/S<184,28,16>', 'R/B<255,88,80>']},\n    outputs=['R/V 208 0 32', 'R/S 184 28 16', 'R/B 255 88 80'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08436600200366229,
            "num_unique_values": 133,
            "num_values_explored": 253,
            "solution": "Left(Replace('e ', 1, 1, var_0), Minus(Find('=191', var_0), 1))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['valentine day=1915=50==7.1=45', 'movie blah=2blahblah, The=1914=54==7.9=17']},\n    outputs=['valentine day', 'movie blah=2blahblah, The'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.023762738041114062,
            "num_unique_values": 49,
            "num_values_explored": 63,
            "solution": "Mid(var_0, Find('loren', var_0), 99)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Dec 2, 2014, 11=23 PM - +91 90000 80000= loren ipsum', 'Dec 2, 2014, 11=24 PM - +91 90000 80000= loren']},\n    outputs=['loren ipsum', 'loren'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08317303698277101,
            "num_unique_values": 148,
            "num_values_explored": 260,
            "solution": "Left(Substitute(var_0, var_1, ''), Find(To_Text(1), var_0))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Item 1 AQ-S810W-2AVDF', 'Item 2 AQ-230A-1DUQ'], 'var_1': ['AQ-S810W-2AVDF', 'AQ-230A']},\n    outputs=['Item 1', 'Item 2 -1DUQ'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 34.872026763972826,
            "num_unique_values": 1677,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['home/Excel/Sheet1.xls', 'home/user/Sheet1.xls']},\n    outputs=['Sheet1.xls', 'Sheet1.xls'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.7136656480142847,
            "num_unique_values": 400,
            "num_values_explored": 1845,
            "solution": "Right(var_0, Minus(Minus(Minus(Len(var_0), Find(' Jane ', var_0)), 3), 2))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Sarah Jane Jones', 'Bob Jane Smithfield']},\n    outputs=['Jones', 'Smithfield'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18335998395923525,
            "num_unique_values": 163,
            "num_values_explored": 479,
            "solution": "Left(Substitute(var_0, '<b>0.', '0.'), Minus(Len(var_0), Add(3, 3)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['<b>0.66<b>', '<b>0.409<b>', '<b>0.7268<b>']},\n    outputs=['0.66', '0.409', '0.7268'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 41.4218158890144,
            "num_unique_values": 1775,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['100 apples', 'the price is %500 dollars', 'serial number %003399']},\n    outputs=['100', '500', '003399'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 43.07799294200959,
            "num_unique_values": 1813,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['34653 jim mcdonald', 'price is 500', '100 apples']},\n    outputs=[' jim mcdonald', ' price is', ' apples'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.6853932584269663
}
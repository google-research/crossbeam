{
    "num_tasks": 89,
    "num_tasks_solved": 52,
    "results": [
        {
            "elapsed_time": 1.0082695710007101,
            "num_unique_values": 199,
            "num_values_explored": 1103,
            "solution": "Left(Trim(Left(var_0, Len('Ducati'))), Minus(Len(var_0), 3))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Ducati100', 'Honda125', 'Ducati250', 'Honda250', 'Honda550', 'Ducati125']},\n    outputs=['Ducati', 'Honda', 'Ducati', 'Honda', 'Honda', 'Ducati'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5513880679500289,
            "num_unique_values": 199,
            "num_values_explored": 692,
            "solution": "Concatenate('Dr. ', Trim(Left(var_0, Find(' ', var_0))))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Nancy FreeHafer', 'Andrew Cencici', 'Jan Kotas', 'Mariya Sergienko']},\n    outputs=['Dr. Nancy', 'Dr. Andrew', 'Dr. Jan', 'Dr. Mariya'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.756033081037458,
            "num_unique_values": 224,
            "num_values_explored": 837,
            "solution": "Left(Left(var_0, Add(3, 3)), Minus(Find(' ', var_0), 1))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Nancy FreeHafer', 'Andrew Cencici', 'Jan Kotas', 'Mariya Sergienko']},\n    outputs=['Nancy', 'Andrew', 'Jan', 'Mariya'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 58.27439251902979,
            "num_unique_values": 2529,
            "num_values_explored": 50085,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['Nancy FreeHafer', 'Andrew Cencici', 'Jan Kotas', 'Mariya Sergienko']},\n    outputs=['N.F.', 'A.C.', 'J.K.', 'M.S.'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2610862599685788,
            "num_unique_values": 80,
            "num_values_explored": 312,
            "solution": "Replace(var_0, 1, Find(' ', Concatenate(var_0, 'an')), '')",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Nancy FreeHafer', 'Andrew Cencici', 'Jan Kotas', 'Mariya Sergienko']},\n    outputs=['FreeHafer', 'Cencici', 'Kotas', 'Sergienko'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.6911201560287736,
            "num_unique_values": 366,
            "num_values_explored": 1785,
            "solution": "Concatenate(var_0, Concatenate(Left(Concatenate(' ', var_1), 2), '.'))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Nancy', 'Andrew', 'Jan', 'Mariya'], 'var_1': ['FreeHafer', 'Cencici', 'Kotas', 'Sergienko']},\n    outputs=['Nancy F.', 'Andrew C.', 'Jan K.', 'Mariya S.'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5853290579980239,
            "num_unique_values": 208,
            "num_values_explored": 649,
            "solution": "Concatenate(Left(var_0, 1), Concatenate('. ', var_1))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Launa', 'Lakenya', 'Brendan', 'Bradford', 'Rudolf', 'Lara'], 'var_1': ['Withers', 'Edison', 'Hage', 'Lango', 'Akiyama', 'Constable']},\n    outputs=['L. Withers', 'L. Edison', 'B. Hage', 'B. Lango', 'R. Akiyama', 'L. Constable'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.3851966869551688,
            "num_unique_values": 386,
            "num_values_explored": 1635,
            "solution": "Concatenate(var_1, Concatenate(Left(Concatenate(', ', var_0), 3), '.'))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Launa', 'Lakenya', 'Brendan', 'Bradford', 'Rudolf'], 'var_1': ['Withers', 'Edison', 'Hage', 'Lango', 'Akiyama']},\n    outputs=['Withers, L.', 'Edison, L.', 'Hage, B.', 'Lango, B.', 'Akiyama, R.'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5890461250091903,
            "num_unique_values": 215,
            "num_values_explored": 679,
            "solution": "Concatenate(var_0, Concatenate(' ', var_1))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Launa', 'Lakenya', 'Brendan', 'Bradford', 'Rudolf', 'Lara'], 'var_1': ['Withers', 'Edison', 'Hage', 'Lango', 'Akiyama', 'Constable']},\n    outputs=['Launa Withers', 'Lakenya Edison', 'Brendan Hage', 'Bradford Lango', 'Rudolf Akiyama', 'Lara Constable'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.22793090803315863,
            "num_unique_values": 61,
            "num_values_explored": 286,
            "solution": "Mid(Concatenate(var_0, '8-9'), Add(3, 2), 3)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['938-242-504', '308-916-545', '623-599-749', '981-424-843', '118-980-214', '244-655-094']},\n    outputs=['242', '916', '599', '424', '980', '655'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 56.458081820979714,
            "num_unique_values": 2689,
            "num_values_explored": 50033,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['+106 769-858-438', '+83 973-757-831', '+62 647-787-775', '+172 027-507-632', '+72 001-050-856', '+95 310-537-401', '+6 775-969-238']},\n    outputs=['+106 (769) 858-438', '+83 (973) 757-831', '+62 (647) 787-775', '+172 (027) 507-632', '+72 (001) 050-856', '+95 (310) 537-401', '+6 (775) 969-238'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.27997627604054287,
            "num_unique_values": 88,
            "num_values_explored": 319,
            "solution": "Right(var_0, 3)",
            "solution_weight": 3,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['938-242-504', '308-916-545', '623-599-749', '981-424-843', '118-980-214', '244-655-094']},\n    outputs=['504', '545', '749', '843', '214', '094'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 53.770619997987524,
            "num_unique_values": 2073,
            "num_values_explored": 50032,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['938-242-504', '308-916-545', '623-599-749', '981-424-843', '118-980-214', '244-655-094', '830-941-991']},\n    outputs=['(938) 242-504', '(308) 916-545', '(623) 599-749', '(981) 424-843', '(118) 980-214', '(244) 655-094', '(830) 941-991'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 52.48759093100671,
            "num_unique_values": 2089,
            "num_values_explored": 50041,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['938-242-504', '308-916-545', '623-599-749', '981-424-843', '118-980-214', '244-655-094']},\n    outputs=['938.242.504', '308.916.545', '623.599.749', '981.424.843', '118.980.214', '244.655.094'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9970830549718812,
            "num_unique_values": 226,
            "num_values_explored": 1076,
            "solution": "Left(Mid(Left(var_0, Find('2 ', Concatenate(var_0, '72 0'))), 2, 3), Minus(Find(' ', var_0), 2))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['+106 769-858-438', '+83 973-757-831', '+62 647-787-775', '+172 027-507-632', '+72 001-050-856', '+95 310-537-401', '+6 775-969-238']},\n    outputs=['106', '83', '62', '172', '72', '95', '6'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8695955440052785,
            "num_unique_values": 206,
            "num_values_explored": 1049,
            "solution": "Left(Right(Left(var_0, Find('-', var_0)), Len('72 0')), 3)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['+106 769-858-438', '+83 973-757-831', '+62 647-787-775', '+172 027-507-632', '+72 001-050-856', '+95 310-537-401', '+6 775-969-238']},\n    outputs=['769', '973', '647', '027', '001', '310', '775'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.988550468988251,
            "num_unique_values": 423,
            "num_values_explored": 2318,
            "solution": "Right(Left(Right(var_0, Find('-', var_0)), Find(' ', var_0)), 3)",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['+106 769-858-438', '+83 973-757-831', '+62 647-787-775', '+172 027-507-632', '+72 001-050-856', '+95 310-537-401', '+6 775-969-238']},\n    outputs=['858', '757', '787', '507', '050', '537', '969'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3187208790332079,
            "num_unique_values": 95,
            "num_values_explored": 351,
            "solution": "Right(Replace(var_0, 3, 3, Left('75', 1)), 3)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['+106 769-858-438', '+83 973-757-831', '+62 647-787-775', '+172 027-507-632', '+72 001-050-856', '+95 310-537-401', '+6 775-969-238']},\n    outputs=['438', '831', '775', '632', '856', '401', '238'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 52.30166846700013,
            "num_unique_values": 1989,
            "num_values_explored": 50057,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['+106 769-858-438', '+83 973-757-831', '+62 647-787-775', '+172 027-507-632', '+72 001-050-856', '+95 310-537-401', '+6 775-969-238']},\n    outputs=['106.769.858.438', '83.973.757.831', '62.647.787.775', '172.027.507.632', '72.001.050.856', '95.310.537.401', '6.775.969.238'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19921965501271188,
            "num_unique_values": 36,
            "num_values_explored": 245,
            "solution": "Left(Concatenate(var_0, '-5'), 3)",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['938-242-504', '308-916-545', '623-599-749', '981-424-843', '118-980-214', '244-655-094']},\n    outputs=['938', '308', '623', '981', '118', '244'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.6494820539955981,
            "num_unique_values": 214,
            "num_values_explored": 687,
            "solution": "Concatenate(var_1, Concatenate(' ', var_0))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Launa', 'Lakenya', 'Brendan', 'Bradford', 'Rudolf', 'Lara'], 'var_1': ['Withers', 'Edison', 'Hage', 'Lango', 'Akiyama', 'Constable']},\n    outputs=['Withers Launa', 'Edison Lakenya', 'Hage Brendan', 'Lango Bradford', 'Akiyama Rudolf', 'Constable Lara'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 62.11054903396871,
            "num_unique_values": 3508,
            "num_values_explored": 50064,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['University of Pennsylvania', 'Cornell University', 'University of Maryland College Park', 'University of Michigan', 'Yale University', 'Columbia University'], 'var_1': ['Phialdelphia, PA, USA', 'Ithaca, New York, USA', 'College Park, MD', 'Ann Arbor, MI, USA', 'New Haven, CT, USA', 'New York, NY, USA']},\n    outputs=['University of Pennsylvania, Phialdelphia, PA, USA', 'Cornell University, Ithaca, New York, USA', 'University of Maryland College Park, College Park, MD', 'University of Michigan, Ann Arbor, MI, USA', 'Yale University, New Haven, CT, USA', 'Columbia University, New York, NY, USA'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 61.197140371019486,
            "num_unique_values": 3899,
            "num_values_explored": 50031,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['University of Pennsylvania', 'UCLA', 'Cornell University', 'Penn', 'University of Maryland College Park', 'University of Michigan'], 'var_1': ['Phialdelphia, PA, USA', 'Los Angeles, CA', 'Ithaca, New York, USA', 'Philadelphia, PA, USA', 'College Park, MD', 'Ann Arbor, MI, USA']},\n    outputs=['University of Pennsylvania, Phialdelphia, PA, USA', 'UCLA, Los Angeles, CA, USA', 'Cornell University, Ithaca, New York, USA', 'Penn, Philadelphia, PA, USA', 'University of Maryland College Park, College Park, MD, USA', 'University of Michigan, Ann Arbor, MI, USA'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.4959281899500638,
            "num_unique_values": 450,
            "num_values_explored": 1733,
            "solution": "Left(Left(Concatenate(var_1, ', USA'), Add(3, Len(Concatenate('rk, ', 'University of ')))), Len(Substitute(var_1, Right('ge', 1), 'A, USA')))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['University of Pennsylvania', 'UCLA', 'Cornell University', 'Penn', 'University of Maryland College Park', 'University of Michigan'], 'var_1': ['Phialdelphia, PA, USA', 'Los Angeles, CA', 'Ithaca, New York, USA', 'Philadelphia, PA, USA', 'College Park, MD', 'Ann Arbor, MI, USA']},\n    outputs=['Phialdelphia, PA, USA', 'Los Angeles, CA, USA', 'Ithaca, New York, USA', 'Philadelphia, PA, USA', 'College Park, MD, USA', 'Ann Arbor, MI, USA'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 63.98183812201023,
            "num_unique_values": 4102,
            "num_values_explored": 50087,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['University of Pennsylvania', 'UCLA', 'Cornell University', 'Penn', 'University of Maryland College Park', 'University of Michigan', 'Columbia University', 'NYU'], 'var_1': ['Phialdelphia, PA, USA', 'Los Angeles, CA', 'Ithaca, New York, USA', 'Philadelphia, PA, USA', 'College Park, MD', 'Ann Arbor, MI, USA', 'New York, NY, USA', 'New York, New York, USA']},\n    outputs=['Phialdelphia, PA, USA', 'Los Angeles, CA, USA', 'Ithaca, NY, USA', 'Philadelphia, PA, USA', 'College Park, MD, USA', 'Ann Arbor, MI, USA', 'New York, NY, USA', 'New York, NY, USA'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 65.60726651496952,
            "num_unique_values": 4796,
            "num_values_explored": 50010,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['University of Pennsylvania', 'UCLA', 'Cornell University', 'Penn', 'University of Maryland College Park', 'University of Michigan', 'Columbia University', 'NYU'], 'var_1': ['Phialdelphia, PA, USA', 'Los Angeles, CA', 'Ithaca, New York, USA', 'Philadelphia, PA, USA', 'College Park, MD', 'Ann Arbor, MI, USA', 'New York, NY, USA', 'New York, New York, USA']},\n    outputs=['Phialdelphia, PA, USA', 'Los Angeles, CA, USA', 'Ithaca, NY, USA', 'Philadelphia, PA, USA', 'College Park, MD, USA', 'Ann Arbor, MI, USA', 'New York, NY, USA', 'New York, NY, USA'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 63.62535842496436,
            "num_unique_values": 3943,
            "num_values_explored": 50006,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['University of Pennsylvania', 'UCLA', 'Cornell University', 'Penn', 'University of Maryland College Park', 'University of Michigan', 'Columbia University', 'NYU'], 'var_1': ['Phialdelphia, PA, USA', 'Los Angeles, CA', 'Ithaca, New York, USA', 'Philadelphia, PA, USA', 'College Park, MD', 'Ann Arbor, MI, USA', 'New York, NY, USA', 'New York, New York, USA']},\n    outputs=['Phialdelphia, PA, USA', 'Los Angeles, CA, USA', 'Ithaca, NY, USA', 'Philadelphia, PA, USA', 'College Park, MD, USA', 'Ann Arbor, MI, USA', 'New York, NY, USA', 'New York, NY, USA'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 58.59935833804775,
            "num_unique_values": 2931,
            "num_values_explored": 50027,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['AIX 5.1', 'VMware ESX Server 3.5.0 build-110268', 'Linux Linux 2.6 Linux', 'Red Hat Enterprise AS 4 <2.6-78.0.13.ELlargesmp>', 'Microsoft <R> Windows <R> 2000 Advanced Server 1.0', 'Microsoft Windows XP Win2008R2 6.1.7601']},\n    outputs=['5.1', '3.5', '2.6', '2.6', '1.0', '6.1'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.129831852973439,
            "num_unique_values": 561,
            "num_values_explored": 5062,
            "solution": "Concatenate(Left(var_0, 2), Right(Concatenate(var_0, var_0), Add(2, 3)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['01/15/2013', '03/07/2011', '05/09/2009']},\n    outputs=['01/2013', '03/2011', '05/2009'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.2319783619605005,
            "num_unique_values": 373,
            "num_values_explored": 1457,
            "solution": "Concatenate(Left(var_0, 1), Concatenate(' ', Trim(Mid(var_0, Add(3, 3), Find(' ', var_0)))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['John Doe', 'Mayur Naik', 'Nimit Singh']},\n    outputs=['J Doe', 'M Naik', 'N Singh'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 58.635715871001594,
            "num_unique_values": 2948,
            "num_values_explored": 50076,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['Adf_ROCLeader_BAN_728x90_CPM_STD _BRD _NRT_DCK', 'MMC_ContextualLarRec_BAN_336x280_CPM_STD _LDS _RTG_DCK', 'Adf_ROC_DLBD_728x90_CPM_STD_DRS_NRT_NOR_DCK']},\n    outputs=['Adf_ROCLeader_BAN_728x90_CPM_STD _Branding _NRT_DCK', 'MMC_ContextualLarRec_BAN_336x280_CPM_STD _Leads _RTG_DCK', 'Adf_ROC_DLBD_728x90_CPM_STD_Direct Response_NRT_NOR_DCK'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.6418971960083582,
            "num_unique_values": 232,
            "num_values_explored": 780,
            "solution": "Left(var_0, Minus(Len(' PM - +91 90000 80000= loren'), Find('+', ' PM - +91 90000 80000= loren')))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Dec 2, 2014, 11=23 PM - +91 90000 80000= loren ipsum', 'Dec 2, 2014, 11=24 PM - +91 90000 80000= loren']},\n    outputs=['Dec 2, 2014, 11=23 PM', 'Dec 2, 2014, 11=24 PM'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 53.46612754196394,
            "num_unique_values": 2290,
            "num_values_explored": 50058,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['TL-18273982| 10MM', 'TL-288762| 76DK', 'CT-576', 'N/A']},\n    outputs=['TL-18273982', 'TL-288762', 'CT-576', 'N/A'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 55.695088667969685,
            "num_unique_values": 2668,
            "num_values_explored": 50017,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['Tire Pressure ABC123873 Monitor', 'Oil Life ABC849999999021 gauge', 'Air conditioner GHF211 maintenance']},\n    outputs=['ABC123873', 'ABC849999999021', 'GHF211'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 60.179404693015385,
            "num_unique_values": 3087,
            "num_values_explored": 50013,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['General Electric', 'General Electric Inc', 'General Electric Company', 'Microsoft', 'Microsoft Corporation', 'Nintendo', 'Nintendo Enterprises']},\n    outputs=['General Electric', 'General Electric', 'General Electric', 'Microsoft', 'Microsoft', 'Nintendo', 'Nintendo'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.199418077012524,
            "num_unique_values": 88,
            "num_values_explored": 228,
            "solution": "Replace(var_0, 1, Find(' ', Concatenate(var_0, 'ame= ')), '')",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Name= ABC Retailers', 'ame= XYZ Suppliers']},\n    outputs=['ABC Retailers', 'XYZ Suppliers'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 55.449841721041594,
            "num_unique_values": 2757,
            "num_values_explored": 50089,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['C0abc', 'aabc', 'C0dd', 'dd'], 'var_1': ['def', 'def', 'qwe', 'qwe']},\n    outputs=['C0abc', 'def', 'C0dd', 'qwe'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 50.89555999496952,
            "num_unique_values": 2104,
            "num_values_explored": 50010,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['http=//www.apple.com/uk/mac', 'https=//www.microsoft.com/en-gb/windows', 'https=//www.microsoft.com/']},\n    outputs=['mac', 'windows', 'microsoft'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9419644430163316,
            "num_unique_values": 270,
            "num_values_explored": 998,
            "solution": "Right(var_0, Len(Left(Substitute(Right(var_0, 3), Rept(Right(var_0, 3), Find('ABCDE/FGHI/JKL', var_0)), var_0), Add(3, 3))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['ABCDE/FGHI/JKL/MNOPQR', 'A/ABCDE/FGHI/JKL']},\n    outputs=['MNOPQR', 'JKL'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.109789060021285,
            "num_unique_values": 377,
            "num_values_explored": 1276,
            "solution": "If(Gte(Add(2, 3), Len(var_2)), 'I love apples', var_1)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['I love apples', 'I love apples'], 'var_1': ['I hate bananas', 'I hate bananas'], 'var_2': ['banana', 'apple']},\n    outputs=['I hate bananas', 'I love apples'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.2228139439830557,
            "num_unique_values": 455,
            "num_values_explored": 3301,
            "solution": "If(Gt(Add(2, 3), Len(var_0)), var_0, Substitute(var_0, 'that', '', 1))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['thatensures', 'thatwill', 'thathave', 'knowthat', 'that', 'mouse', 'knowthat']},\n    outputs=['ensures', 'will', 'have', 'know', 'that', 'mouse', 'know'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 60.1936161199701,
            "num_unique_values": 2812,
            "num_values_explored": 50016,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['This is a <string>, It should be <changed> to <a> number.', 'a < 4 and a > 0']},\n    outputs=['This is a string, It should be changed to a number.', 'a 4 and a 0'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.23521721101133153,
            "num_unique_values": 157,
            "num_values_explored": 269,
            "solution": "Substitute(var_0, '/delete words in the area /', '')",
            "solution_weight": 4,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['This is a line. /delete words in the area /keep this part', '/delete words in the area /']},\n    outputs=['This is a line. keep this part', ''],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 57.59187026094878,
            "num_unique_values": 2675,
            "num_values_explored": 50007,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['Polygonum amphibium', 'Hippuris vulgaris', 'Lysimachia vulgaris', 'Juncus bulbosus ssp. bulbosus', 'Lycopus europaeus ssp. europaeus', 'Nymphaea alba']},\n    outputs=['Polygonum', 'Hippuris', 'Lysimachia', 'Juncus bulbosus', 'Lycopus europaeus', 'Nymphaea'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 57.35961174196564,
            "num_unique_values": 2494,
            "num_values_explored": 50006,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['one, 1', 'two, 2', 'three, 3', 'four, 4']},\n    outputs=['one apple', 'two bananas', 'three strawberries', 'four oranges'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19886468804907054,
            "num_unique_values": 77,
            "num_values_explored": 235,
            "solution": "Mid(var_0, Len(Concatenate(',', 'USD.EUR<IDEALPRO,CASH,')), 3)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['USD.EUR<IDEALPRO,CASH,EUR>', 'USD.EUR<IDEALPRO,CASH,USD>', 'KOR.JPN<IDEALPRO,CASH,WON>', 'KOR.JPN<IDEALPRO,CASH,YEN>']},\n    outputs=['EUR', 'USD', 'WON', 'YEN'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 10.389525135979056,
            "num_unique_values": 1487,
            "num_values_explored": 10945,
            "solution": "Concatenate(var_0, Concatenate('/n', Concatenate(var_1, Concatenate('/n', var_2))))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Traci Brown', 'Mary Hannan', 'Linda Thomas'], 'var_1': ['1301 Robinson Court', '1195 Amethyst Drive', '2479 North Bend Road'], 'var_2': ['Saginaw, MI 48607', 'Lansing, MI 48933', 'Allen, KY 41601']},\n    outputs=['Traci Brown/n1301 Robinson Court/nSaginaw, MI 48607', 'Mary Hannan/n1195 Amethyst Drive/nLansing, MI 48933', 'Linda Thomas/n2479 North Bend Road/nAllen, KY 41601'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3542033010162413,
            "num_unique_values": 117,
            "num_values_explored": 516,
            "solution": "Substitute(Right(var_0, Add(3, 3)), '-%', '%')",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['-%134', '500', '5.125', '-%43.00']},\n    outputs=['%134', '500', '5.125', '%43.00'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 51.83315294602653,
            "num_unique_values": 2282,
            "num_values_explored": 50036,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['801-456-8765', '<978> 654-0299', '978.654.0299']},\n    outputs=['8014568765', '9786540299', '9786540299'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9329003950115293,
            "num_unique_values": 236,
            "num_values_explored": 1094,
            "solution": "Replace(Concatenate(Left(var_1, 1), '_acme.com'), 2, 0, var_0)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['brown', 'thomas', 'ward'], 'var_1': ['traci', 'linda', 'jack']},\n    outputs=['tbrown_acme.com', 'lthomas_acme.com', 'jward_acme.com'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.3537661989685148,
            "num_unique_values": 341,
            "num_values_explored": 1753,
            "solution": "Concatenate(Left(var_0, 1), Concatenate(Concatenate(var_1, '_'), var_2))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['ayako', 'amy', 'tom'], 'var_1': ['ogawa', 'johnson', 'chang'], 'var_2': ['acme.com', 'google.com', 'upenn.edu']},\n    outputs=['aogawa_acme.com', 'ajohnson_google.com', 'tchang_upenn.edu'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.15629550401354209,
            "num_unique_values": 94,
            "num_values_explored": 164,
            "solution": "Replace(var_1, 1, Find('_', var_1, 2), '')",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['ann chang', 'bobby smith', 'art lennox'], 'var_1': ['achang_maaker.com', 'bobt_sphynx.uk.co', 'art.lennox_svxn.com']},\n    outputs=['maaker.com', 'sphynx.uk.co', 'svxn.com'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5111153200268745,
            "num_unique_values": 141,
            "num_values_explored": 599,
            "solution": "Substitute(Trim(Right(var_0, 3)), '.', '', 1)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['www.domain.com', 'mail.net', 'www.amaon.co.uk']},\n    outputs=['com', 'net', 'uk'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1920397090143524,
            "num_unique_values": 93,
            "num_values_explored": 216,
            "solution": "Replace(Mid(Concatenate('= ', var_0), Find('= ', Concatenate('el', var_0), Add(3, 2)), 99), 1, 2, '')",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['year= 2016', 'make= subaru', 'model= outback wagon', 'fuel economy= 25/33']},\n    outputs=['2016', 'subaru', 'outback wagon', '25/33'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.830382123007439,
            "num_unique_values": 442,
            "num_values_explored": 2145,
            "solution": "Right(var_0, Find(Right(var_0, 3), Mid(var_0, Find('/', var_0, 3), 99), 3))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['https=//exceljet.net/catalog', 'https=//microsoft.com', 'ftp=//someserver.com', 'sftp=//127.0.0.1']},\n    outputs=['exceljet.net/catalog', 'microsoft.com', 'someserver.com', '127.0.0.1'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 51.8085547160008,
            "num_unique_values": 1842,
            "num_values_explored": 50047,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['send email to json_acme.com', 'contact help_robot.com for all support requests']},\n    outputs=['json_acme.com', 'help_robot.com'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 51.80334221100202,
            "num_unique_values": 1884,
            "num_values_explored": 50034,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['this is a _username in the middle', 'twitter names look like= _name', 'with two _name1 and _name2']},\n    outputs=['_username', '_name', '_name1'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.799507434014231,
            "num_unique_values": 223,
            "num_values_explored": 934,
            "solution": "Left(var_1, Minus(Find('_', var_1), 1))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['ann chang', 'bobby smith', 'art lennox'], 'var_1': ['achang_maaker.com', 'bobt_sphynx.uk.co', 'art.lennox_svxn.com']},\n    outputs=['achang', 'bobt', 'art.lennox'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 53.19757038104581,
            "num_unique_values": 2209,
            "num_values_explored": 50061,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['https=//abc.com/def', 'http=//www.abc.com/def/cef', 'http=//chandoo.org/wp/def-def']},\n    outputs=['https=//abc.com/', 'http=//www.abc.com', 'http=//chandoo.org/'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17177878197981045,
            "num_unique_values": 31,
            "num_values_explored": 245,
            "solution": "Left(var_0, Add(2, 3))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Susan Ann Chang', 'Ayako Tanaka', 'Bobby T. smth']},\n    outputs=['Susan', 'Ayako', 'Bobby'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9183707369957119,
            "num_unique_values": 301,
            "num_values_explored": 1045,
            "solution": "Trim(Left(Substitute(var_0, 'fox', '', Find(var_0, Concatenate('fox', var_0))), Find(' ', Concatenate(var_0, ' '))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['The quick brown fox.', 'quick brown fox.', 'fox']},\n    outputs=['The', 'quick', ''],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 53.10841193801025,
            "num_unique_values": 2817,
            "num_values_explored": 50064,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['11/1/2015 - First call/n12/3/2015-order placed/n11/15/2015-follow-up,interested', '11/1/2015 - First call/n12/3/2015-order placed', '11/1/2015 - First call']},\n    outputs=['11/15/2015-follow-up,interested', '12/3/2015-order placed', '11/1/2015 - First call'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 57.816518041014206,
            "num_unique_values": 2768,
            "num_values_explored": 50026,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['chang,amy', 'smith,bobby', 'lennox,aaron']},\n    outputs=['amy,chang', 'bobby,smith', 'aaron,lennox'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.22336070699384436,
            "num_unique_values": 98,
            "num_values_explored": 257,
            "solution": "Right(Mid(var_0, Find('Kim', Concatenate(var_0, ' ')), 99), 3)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Park Kim', 'Lee Kim', 'Kim Lee']},\n    outputs=['Kim', 'Kim', 'Lee'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17913969402434304,
            "num_unique_values": 98,
            "num_values_explored": 203,
            "solution": "Right(Replace(var_0, 1, Find('s ', var_0), var_0), Add(2, 2))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['focus on one thing at a time', 'premature opt is the root of all evil', 'where is life']},\n    outputs=['time', 'evil', 'life'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 54.32160956301959,
            "num_unique_values": 2006,
            "num_values_explored": 50096,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['susan ann chang', 'ayako tanaka', 'bobby t. smith', 'anthory r. tom brown']},\n    outputs=['ann', '', 't.', 'r. tom'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 54.67349037301028,
            "num_unique_values": 2947,
            "num_values_explored": 50089,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['figs', 'mangos'], 'var_1': ['', 'kiwis'], 'var_2': ['apples', 'grapes']},\n    outputs=['figs, apples', 'mangos, kiwis, grapes'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4220370359835215,
            "num_unique_values": 142,
            "num_values_explored": 487,
            "solution": "Substitute(Concatenate(var_1, var_1), var_1, Concatenate(var_0, ' '), 1)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['susan', 'aaron'], 'var_1': ['chang', 'kim']},\n    outputs=['susan chang', 'aaron kim'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1749263450037688,
            "num_unique_values": 64,
            "num_values_explored": 231,
            "solution": "Mid(Concatenate(var_2, var_0), Find(var_2, Concatenate(var_1, var_2)), Len(var_1))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['cat', 'blue', 'firm', 'soft'], 'var_1': ['dog', 'red', 'firm', 'soft'], 'var_2': ['cat', 'red', 'soft', 'soft']},\n    outputs=['cat', 'red', 'firm', 'soft'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.6955262440023944,
            "num_unique_values": 197,
            "num_values_explored": 958,
            "solution": "Left(var_0, Minus(Find('.', Upper(var_0)), 1))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['happy.jpg', 'pivot table.xls', 'sales data.csv', 'invoice3001.xls.pdf']},\n    outputs=['happy', 'pivot table', 'sales data', 'invoice3001'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 48.09507166396361,
            "num_unique_values": 1304,
            "num_values_explored": 50087,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['The shawshank', 'The godfather', 'pulp fiction']},\n    outputs=['The shawshank', 'The godfather', 'pulp fiction'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 54.58523884997703,
            "num_unique_values": 2136,
            "num_values_explored": 50035,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['801-345-1987', '612-554-2000']},\n    outputs=['8013451987', '6125542000'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1600082099903375,
            "num_unique_values": 70,
            "num_values_explored": 174,
            "solution": "Mid(var_0, Len(Concatenate('/', 'c=/users/dave/')), 99)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['c=/users/dave/shotcut.xls', 'c=/users/dave/formulas.xls', 'c=/users/dave/pivot table.xls']},\n    outputs=['shotcut.xls', 'formulas.xls', 'pivot table.xls'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 59.12707628798671,
            "num_unique_values": 2657,
            "num_values_explored": 50087,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['zx66448', 'zx66448', 'zx66448', 'zx66448', 'zx66448'], 'var_1': ['z', 'x', '6', '4', '8']},\n    outputs=['x66448', 'z66448', 'zx448', 'zx668', 'zx6644'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5829780329950154,
            "num_unique_values": 160,
            "num_values_explored": 856,
            "solution": "Concatenate(Left(var_0, 3), '-456-8756')",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['801 456 8756', '978 456 8756']},\n    outputs=['801-456-8756', '978-456-8756'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.21305581799242646,
            "num_unique_values": 112,
            "num_values_explored": 258,
            "solution": "Trim(Left(var_0, Find(' ', var_0, Len(' Truck'))))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Trucking Inc.', 'New Truck Inc', 'ABV Trucking Inc, LLC']},\n    outputs=['Trucking', 'New Truck', 'ABV Trucking'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 63.0327614970156,
            "num_unique_values": 3429,
            "num_values_explored": 50045,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['April 1 1799', 'April 11 1867', 'February 12 1806', 'February 21 1798', 'February 28 1844 as Delaware Township', 'February 5 1798', 'February 7 1892 Verona Township', 'February 9 1797', 'January 19 1748', 'July 10 1721 as Upper Penns Neck Township', 'March 15 1860', 'March 17 1870 <as Raritan Township>', 'March 17 1874', 'March 23 1864', 'March 5 1867', 'April 28th 1828']},\n    outputs=['1799', '1867', '1806', '1798', '1844', '1798', '1892', '1797', '1748', '1721', '1860', '1870', '1874', '1864', '1867', '1828'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 51.710075117007364,
            "num_unique_values": 2189,
            "num_values_explored": 50065,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['2283-332-44543 CAP DDT PPL445_ HEEN PAX 77820', '44372-33-3223 TYYTE CAP BOX 1550 244 BOX PPSSA223_ PAX', 'PRECISE 77 CLEAR BLUE 99WIE_ BOX 4403 PAX SSKA']},\n    outputs=['HEEN PAX 77820', 'PAX', 'BOX 4403 PAX SSKA'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0977217589970678,
            "num_unique_values": 267,
            "num_values_explored": 1230,
            "solution": "Trim(Left(var_0, Minus(Len(var_0), Add(3, 2))))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['india china japan', 'indonesia korea']},\n    outputs=['india china', 'indonesia'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.15709410503041,
            "num_unique_values": 72,
            "num_values_explored": 220,
            "solution": "Mid(Left(' Westerkerk HRL', Find(var_0, Concatenate('geb. 14 oct 1956', var_0))), 2, 99)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['geb. 14 oct 1956 Westerkerk HRL', 'geb. 14 oct 1956', 'geb. 15 feb 1987 Westerkerk HRL']},\n    outputs=['Westerkerk HRL', '', 'Westerkerk HRL'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 51.054326020996086,
            "num_unique_values": 2233,
            "num_values_explored": 50065,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['R/V<208,0,32>', 'R/S<184,28,16>', 'R/B<255,88,80>']},\n    outputs=['R/V 208 0 32', 'R/S 184 28 16', 'R/B 255 88 80'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.6823418100248091,
            "num_unique_values": 217,
            "num_values_explored": 867,
            "solution": "Left(Left(var_0, Find('=191', var_0, 3)), Minus(Find('=191', var_0, 3), 1))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['valentine day=1915=50==7.1=45', 'movie blah=2blahblah, The=1914=54==7.9=17']},\n    outputs=['valentine day', 'movie blah=2blahblah, The'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2936018080217764,
            "num_unique_values": 164,
            "num_values_explored": 314,
            "solution": "Substitute(Trim(Right(var_0, Find('0', ' PM - +91 90000 80000= loren', Add(3, 2)))), Right(var_0, Find('0', ' PM - +91 90000 80000= loren', Len('loren'))), 'loren')",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Dec 2, 2014, 11=23 PM - +91 90000 80000= loren ipsum', 'Dec 2, 2014, 11=24 PM - +91 90000 80000= loren']},\n    outputs=['loren ipsum', 'loren'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 50.03910709096817,
            "num_unique_values": 1915,
            "num_values_explored": 50017,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['Item 1 AQ-S810W-2AVDF', 'Item 2 AQ-230A-1DUQ'], 'var_1': ['AQ-S810W-2AVDF', 'AQ-230A']},\n    outputs=['Item 1', 'Item 2 -1DUQ'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 50.74423744698288,
            "num_unique_values": 2271,
            "num_values_explored": 50038,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['home/Excel/Sheet1.xls', 'home/user/Sheet1.xls']},\n    outputs=['Sheet1.xls', 'Sheet1.xls'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8017325110267848,
            "num_unique_values": 285,
            "num_values_explored": 869,
            "solution": "Right(var_0, Minus(Minus(Len(var_0), Find(' ', var_0)), Add(3, 2)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Sarah Jane Jones', 'Bob Jane Smithfield']},\n    outputs=['Jones', 'Smithfield'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9226291719824076,
            "num_unique_values": 330,
            "num_values_explored": 2460,
            "solution": "Left(Mid(var_0, Add(2, 2), Add(3, 3)), Minus(Len(var_0), Add(3, 3)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['<b>0.66<b>', '<b>0.409<b>', '<b>0.7268<b>']},\n    outputs=['0.66', '0.409', '0.7268'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8599962510052137,
            "num_unique_values": 272,
            "num_values_explored": 941,
            "solution": "Right(Left(var_0, Add(1, Find('00 ', Concatenate(var_0, '00 ')))), Minus(Find(' ', var_0), 1))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['100 apples', 'the price is %500 dollars', 'serial number %003399']},\n    outputs=['100', '500', '003399'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 51.16457337397151,
            "num_unique_values": 1331,
            "num_values_explored": 50045,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['34653 jim mcdonald', 'price is 500', '100 apples']},\n    outputs=[' jim mcdonald', ' price is', ' apples'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.5842696629213483
}
{
    "num_tasks": 38,
    "num_tasks_solved": 27,
    "results": [
        {
            "elapsed_time": 7.356028078007512,
            "num_unique_values": 711,
            "num_values_explored": 14881,
            "solution": "Substitute(var_0, Substitute(var_0, '.', ''), Concatenate(var_0, '.0'))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['1.23', '45', '67.0', '9876']},\n    outputs=['1.23', '45.0', '67.0', '9876.0'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0596508430317044,
            "num_unique_values": 388,
            "num_values_explored": 2721,
            "solution": "Right(Concatenate('+', var_0), Add(2, Minus(Len(Substitute(var_0, '-', '')), 1)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['12', '-34', '567', '-8']},\n    outputs=['+12', '-34', '+567', '-8'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 17.30315315304324,
            "num_unique_values": 1483,
            "num_values_explored": 26270,
            "solution": "Right(Replace(Rept(Left(var_0, 1), 2), 3, 1, If(Exact('morning', var_1), ' AM', ' PM')), Len(var_0))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['9:00', '11:00', '3:00', '9:00'], 'var_1': ['morning', 'morning', 'afternoon', 'night']},\n    outputs=['9 AM', '11 AM', '3 PM', '9 PM'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16414777899626642,
            "num_unique_values": 196,
            "num_values_explored": 449,
            "solution": "Concatenate(Proper(Left(var_0, Find(',', var_0))), Right(Upper(var_0), 3))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['mountain view, ca', 'HOUSTON, TX']},\n    outputs=['Mountain View, CA', 'Houston, TX'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4331925460137427,
            "num_unique_values": 252,
            "num_values_explored": 1178,
            "solution": "Replace(Lower(var_0), 1, 3, Proper(Left(var_0, 3)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['this is a sentence.', 'FIX CAPITALIZATION.']},\n    outputs=['This is a sentence.', 'Fix capitalization.'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 40.40464310598327,
            "num_unique_values": 1957,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['same', 'the text to search in', 'the text to search in', 'the text to search in', 'the text to search in'], 'var_1': ['same', 'find this', 'SEARCH', 'search', 't to s']},\n    outputs=['TRUE', 'FALSE', 'FALSE', 'TRUE', 'TRUE'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 36.026023856014945,
            "num_unique_values": 1763,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['the text to search in', 'the text to search in', 'the text to search in', 'THE TEXT TO SEARCH IN'], 'var_1': ['find this', 's.arch', 'SeArCh', 't to s']},\n    outputs=['FALSE', 'FALSE', 'TRUE', 'TRUE'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 50.40092122403439,
            "num_unique_values": 2132,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['the text to search in', 'the text to search in', 'the text to search in', 'the text to search in'], 'var_1': ['to', ' ', 't', ' t']},\n    outputs=['1', '4', '4', '2'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 26.238418528984766,
            "num_unique_values": 1594,
            "num_values_explored": 38722,
            "solution": "Concatenate(Left(Lower(var_0), 1), Lower(Concatenate(var_1, Concatenate('@', Concatenate(var_2, '.com')))))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Larry', 'Bill'], 'var_1': ['Page', 'Gates'], 'var_2': ['Google', 'Microsoft']},\n    outputs=['lpage@google.com', 'bgates@microsoft.com'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2256061079679057,
            "num_unique_values": 205,
            "num_values_explored": 667,
            "solution": "Concatenate(Mid(var_0, 3, 2), Concatenate('/', Replace(var_0, 3, 2, '/')))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['08092019', '12032020']},\n    outputs=['09/08/2019', '03/12/2020'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.048780601006001234,
            "num_unique_values": 74,
            "num_values_explored": 160,
            "solution": "Substitute(var_0, '-', '/')",
            "solution_weight": 4,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['2019-11-23', '2020-03-07']},\n    outputs=['2019/11/23', '2020/03/07'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.04815540503477678,
            "num_unique_values": 72,
            "num_values_explored": 154,
            "solution": "Substitute(Right(var_0, Add(2, 3)), '-', '/')",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['2019-11-23', '2020-03-07']},\n    outputs=['11/23', '03/07'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 59.41288246103795,
            "num_unique_values": 3445,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['https://www.google.com/', 'http://www.stanford.edu/news/', 'http://a.b.c.org/d/e/f.g']},\n    outputs=['www.google.com', 'www.stanford.edu', 'a.b.c.org'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 37.269612870994024,
            "num_unique_values": 1601,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['https://www.google.com/', 'http://www.stanford.edu/news/', 'http://a.b.c.org/d/e/f.g']},\n    outputs=['/', '/news/', '/d/e/f.g'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.03788008203264326,
            "num_unique_values": 82,
            "num_values_explored": 106,
            "solution": "Trim(Left(var_1, Find(' ', var_1)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Larry Page', ''], 'var_1': ['Sergey Brin', 'Bill Gates']},\n    outputs=['Sergey', 'Bill'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2920411830418743,
            "num_unique_values": 279,
            "num_values_explored": 836,
            "solution": "If(Exact(var_0, Lower(var_0)), 'true', 'false')",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['this text is lowercase', 'Not Lowercase', '123', 'XYZ']},\n    outputs=['true', 'false', 'true', 'false'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.0325818220153451,
            "num_unique_values": 63,
            "num_values_explored": 86,
            "solution": "Replace(var_0, 1, Find(' ', var_0), '')",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Larry Page', 'George Washington'], 'var_1': ['Sergey Brin', '']},\n    outputs=['Page', 'Washington'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 25.676433536980767,
            "num_unique_values": 2494,
            "num_values_explored": 26793,
            "solution": "If(Exact('100%', var_0), 'Completed', If(Exact('0%', var_0), 'Not Yet Started', 'In Progress'))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['43%', '0%', '52%', '100%', '47%', '100%', '58%', '0%']},\n    outputs=['In Progress', 'Not Yet Started', 'In Progress', 'Completed', 'In Progress', 'Completed', 'In Progress', 'Not Yet Started'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 21.261747220996767,
            "num_unique_values": 801,
            "num_values_explored": 38531,
            "solution": "Left(Concatenate(Substitute(var_0, '-', '('), ')'), Len(Substitute(var_0, '-', Right(Concatenate(var_0, ')'), 2))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['12', '-34', '567', '-8']},\n    outputs=['12', '(34)', '567', '(8)'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 38.48793865804328,
            "num_unique_values": 1493,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['string', 'text', 'multiple words'], 'var_1': ['10', '5', '17']},\n    outputs=['    string', ' text', '   multiple words'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08993495797039941,
            "num_unique_values": 93,
            "num_values_explored": 280,
            "solution": "Mid(Concatenate('000', Concatenate('0', var_0)), Len(var_0), 99)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['123', '45', '6780', '9', '54321']},\n    outputs=['00123', '00045', '06780', '00009', '54321'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 43.246027848974336,
            "num_unique_values": 1612,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['/this/is/a/path', '/home', '/a/b']},\n    outputs=['4', '1', '2'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.033046080032363534,
            "num_unique_values": 52,
            "num_values_explored": 89,
            "solution": "Replace(var_0, 1, Len(var_1), '')",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['prefix', 'nonsense', 'atypical'], 'var_1': ['pre', 'non', 'a']},\n    outputs=['fix', 'sense', 'typical'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 9.937107554986142,
            "num_unique_values": 1148,
            "num_values_explored": 16587,
            "solution": "Right(Right(Substitute(var_0, ' ', Rept('Mr. ', Len('Mr. ')), 1), Minus(Len(var_0), 1)), Add(2, Find('ing', var_0)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['George Washington', 'Alan Turing']},\n    outputs=['Mr. Washington', 'Mr. Turing'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 52.36226727894973,
            "num_unique_values": 3142,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['George Washington', 'Alan Turing', 'Grace Hopper', 'Ruth Porat'], 'var_1': ['male', 'male', 'female', 'female']},\n    outputs=['Mr. Washington', 'Mr. Turing', 'Ms. Hopper', 'Ms. Porat'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.040959136036690325,
            "num_unique_values": 91,
            "num_values_explored": 119,
            "solution": "Lower(Trim(var_0))",
            "solution_weight": 3,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['  TEXT ', 'Two words    ', '   before and after  ']},\n    outputs=['text', 'two words', 'before and after'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 46.81285052100429,
            "num_unique_values": 2489,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['Employees at <COMPANY> love its culture.', \"<COMPANY> employees are excited for <COMPANY>'s future.\"], 'var_1': ['Google', 'Microsoft']},\n    outputs=['Employees at Google love its culture.', \"Microsoft employees are excited for Microsoft's future.\"],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8782489110017195,
            "num_unique_values": 508,
            "num_values_explored": 4710,
            "solution": "Right(Replace(var_0, 3, Minus(Len('https://www.google.org/'), 2), 'https://www.google.org/'), Len(var_0))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['https://www.google.com/company-strategy.html', 'https://www.google.com/some/path']},\n    outputs=['https://www.google.org/company-strategy.html', 'https://www.google.org/some/path'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 43.76499470800627,
            "num_unique_values": 1916,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['primary', 'ABC', 'NOT NONE', 'NONE', 'NONE'], 'var_1': ['secondary', 'XYZ', '123', 'select this instead', '<BACKUP>']},\n    outputs=['primary', 'ABC', 'NOT NONE', 'select this instead', '<BACKUP>'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 16.1061265799799,
            "num_unique_values": 1699,
            "num_values_explored": 24154,
            "solution": "If(Gte(Len(var_0), Len(var_1)), var_0, var_1)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['length,', '123', 'xyz', 'aa', 'aa'], 'var_1': ['is same', '45', 'abcdef', 'aaa', 'a']},\n    outputs=['length,', '123', 'abcdef', 'aaa', 'aa'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8211401110165752,
            "num_unique_values": 457,
            "num_values_explored": 2160,
            "solution": "If(Exact(var_1, var_0), 'yes', 'no')",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['string', 'string', 'match this', 'match this'], 'var_1': ['string', 'STRING', 'match this', 'match that']},\n    outputs=['yes', 'no', 'yes', 'no'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 42.23977012903197,
            "num_unique_values": 2120,
            "num_values_explored": 50000,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['text', 'StRiNg', 'match this', 'match those', 'substring'], 'var_1': ['text', 'sTrInG', 'match this', 'match that', 'substring.']},\n    outputs=['yes', 'yes', 'yes', 'no', 'no'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.05670998297864571,
            "num_unique_values": 99,
            "num_values_explored": 180,
            "solution": "To_Text(Len(var_0))",
            "solution_weight": 3,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['alphabet', 'google']},\n    outputs=['8', '6'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08873704500729218,
            "num_unique_values": 136,
            "num_values_explored": 252,
            "solution": "Left(Substitute(var_0, var_1, '', 2), Minus(Len(var_0), Len(var_1)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['suffix', 'declaration', 'analyticly'], 'var_1': ['fix', 'tion', 'ly']},\n    outputs=['suf', 'declara', 'analytic'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.058460105035919696,
            "num_unique_values": 105,
            "num_values_explored": 160,
            "solution": "Substitute(Lower(var_0), var_0, Upper(var_0))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['lowercase', 'UPPERCASE', 'swap', 'CASE']},\n    outputs=['LOWERCASE', 'uppercase', 'SWAP', 'case'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 6.867729943012819,
            "num_unique_values": 1339,
            "num_values_explored": 11251,
            "solution": "Left(Concatenate(Left(var_0, Len(Rept(' text', 3))), Rept('.', 3)), Len(Left(var_0, Len(Rept(' lengt', 3)))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['short text', 'max length text', 'extremely lengthy text', 'this text should be truncated']},\n    outputs=['short text', 'max length text', 'extremely lengt...', 'this text shoul...'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.264236124989111,
            "num_unique_values": 489,
            "num_values_explored": 3132,
            "solution": "Mid(Upper(Substitute(var_0, ' ', Lower(Left(var_0, 1)))), Find(' ', var_0), 2)",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Product Area', 'Vice President']},\n    outputs=['PA', 'VP'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 31.226424555003177,
            "num_unique_values": 1389,
            "num_values_explored": 46695,
            "solution": "Mid(Upper(Substitute(Substitute(var_0, ' ', Upper('pr')), Upper('pr'), Left(var_0, 1))), Find(' ', var_0), 2)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['product area', 'Vice president']},\n    outputs=['PA', 'VP'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.7105263157894737
}
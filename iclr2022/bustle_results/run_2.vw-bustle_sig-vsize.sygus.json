{
    "num_tasks": 89,
    "num_tasks_solved": 67,
    "results": [
        {
            "elapsed_time": 0.906342932023108,
            "num_unique_values": 203,
            "num_values_explored": 1013,
            "solution": "Left(Substitute(var_0, '250', ''), Minus(Len(var_0), 3))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Ducati100', 'Honda125', 'Ducati250', 'Honda250', 'Honda550', 'Ducati125']},\n    outputs=['Ducati', 'Honda', 'Ducati', 'Honda', 'Honda', 'Ducati'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.5994626809842885,
            "num_unique_values": 639,
            "num_values_explored": 3188,
            "solution": "Proper(Concatenate(Lower('Dr. '), Trim(Left(var_0, Find(' ', var_0)))))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Nancy FreeHafer', 'Andrew Cencici', 'Jan Kotas', 'Mariya Sergienko']},\n    outputs=['Dr. Nancy', 'Dr. Andrew', 'Dr. Jan', 'Dr. Mariya'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.33431765501154587,
            "num_unique_values": 90,
            "num_values_explored": 389,
            "solution": "Trim(Left(var_0, Find(' ', var_0)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Nancy FreeHafer', 'Andrew Cencici', 'Jan Kotas', 'Mariya Sergienko']},\n    outputs=['Nancy', 'Andrew', 'Jan', 'Mariya'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 54.2924918490462,
            "num_unique_values": 3196,
            "num_values_explored": 50073,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['Nancy FreeHafer', 'Andrew Cencici', 'Jan Kotas', 'Mariya Sergienko']},\n    outputs=['N.F.', 'A.C.', 'J.K.', 'M.S.'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.26761189801618457,
            "num_unique_values": 70,
            "num_values_explored": 326,
            "solution": "Replace(var_0, 1, Find(' ', var_0), '')",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Nancy FreeHafer', 'Andrew Cencici', 'Jan Kotas', 'Mariya Sergienko']},\n    outputs=['FreeHafer', 'Cencici', 'Kotas', 'Sergienko'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.735904278990347,
            "num_unique_values": 372,
            "num_values_explored": 1914,
            "solution": "Concatenate(Concatenate(var_0, ' '), Concatenate(Left(var_1, 1), '.'))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Nancy', 'Andrew', 'Jan', 'Mariya'], 'var_1': ['FreeHafer', 'Cencici', 'Kotas', 'Sergienko']},\n    outputs=['Nancy F.', 'Andrew C.', 'Jan K.', 'Mariya S.'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.649086426012218,
            "num_unique_values": 199,
            "num_values_explored": 787,
            "solution": "Concatenate(Left(var_0, 1), Concatenate('. ', var_1))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Launa', 'Lakenya', 'Brendan', 'Bradford', 'Rudolf', 'Lara'], 'var_1': ['Withers', 'Edison', 'Hage', 'Lango', 'Akiyama', 'Constable']},\n    outputs=['L. Withers', 'L. Edison', 'B. Hage', 'B. Lango', 'R. Akiyama', 'L. Constable'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 52.232655439991504,
            "num_unique_values": 3702,
            "num_values_explored": 50006,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['Launa', 'Lakenya', 'Brendan', 'Bradford', 'Rudolf'], 'var_1': ['Withers', 'Edison', 'Hage', 'Lango', 'Akiyama']},\n    outputs=['Withers, L.', 'Edison, L.', 'Hage, B.', 'Lango, B.', 'Akiyama, R.'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5968238310306333,
            "num_unique_values": 200,
            "num_values_explored": 723,
            "solution": "Concatenate(var_0, Concatenate(' ', var_1))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Launa', 'Lakenya', 'Brendan', 'Bradford', 'Rudolf', 'Lara'], 'var_1': ['Withers', 'Edison', 'Hage', 'Lango', 'Akiyama', 'Constable']},\n    outputs=['Launa Withers', 'Lakenya Edison', 'Brendan Hage', 'Bradford Lango', 'Rudolf Akiyama', 'Lara Constable'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.23022728000069037,
            "num_unique_values": 50,
            "num_values_explored": 295,
            "solution": "Mid(var_0, Add(2, 3), 3)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['938-242-504', '308-916-545', '623-599-749', '981-424-843', '118-980-214', '244-655-094']},\n    outputs=['242', '916', '599', '424', '980', '655'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 47.702638915972784,
            "num_unique_values": 3152,
            "num_values_explored": 50099,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['+106 769-858-438', '+83 973-757-831', '+62 647-787-775', '+172 027-507-632', '+72 001-050-856', '+95 310-537-401', '+6 775-969-238']},\n    outputs=['+106 (769) 858-438', '+83 (973) 757-831', '+62 (647) 787-775', '+172 (027) 507-632', '+72 (001) 050-856', '+95 (310) 537-401', '+6 (775) 969-238'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.28553669597022235,
            "num_unique_values": 72,
            "num_values_explored": 337,
            "solution": "Right(var_0, 3)",
            "solution_weight": 3,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['938-242-504', '308-916-545', '623-599-749', '981-424-843', '118-980-214', '244-655-094']},\n    outputs=['504', '545', '749', '843', '214', '094'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 19.703677939018235,
            "num_unique_values": 1524,
            "num_values_explored": 23602,
            "solution": "Concatenate(Left(Concatenate('(', var_0), Add(3, 1)), Concatenate(') ', Right(var_0, Add(3, Len('8) 9')))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['938-242-504', '308-916-545', '623-599-749', '981-424-843', '118-980-214', '244-655-094', '830-941-991']},\n    outputs=['(938) 242-504', '(308) 916-545', '(623) 599-749', '(981) 424-843', '(118) 980-214', '(244) 655-094', '(830) 941-991'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 49.888503006019164,
            "num_unique_values": 2967,
            "num_values_explored": 50038,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['938-242-504', '308-916-545', '623-599-749', '981-424-843', '118-980-214', '244-655-094']},\n    outputs=['938.242.504', '308.916.545', '623.599.749', '981.424.843', '118.980.214', '244.655.094'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9601500389981084,
            "num_unique_values": 197,
            "num_values_explored": 1137,
            "solution": "Left(Mid(var_0, 2, 99), Minus(Find(' ', var_0), 2))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['+106 769-858-438', '+83 973-757-831', '+62 647-787-775', '+172 027-507-632', '+72 001-050-856', '+95 310-537-401', '+6 775-969-238']},\n    outputs=['106', '83', '62', '172', '72', '95', '6'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9192239289986901,
            "num_unique_values": 219,
            "num_values_explored": 1192,
            "solution": "Mid(var_0, Add(1, Find(' ', var_0)), 3)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['+106 769-858-438', '+83 973-757-831', '+62 647-787-775', '+172 027-507-632', '+72 001-050-856', '+95 310-537-401', '+6 775-969-238']},\n    outputs=['769', '973', '647', '027', '001', '310', '775'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.850101035030093,
            "num_unique_values": 350,
            "num_values_explored": 2340,
            "solution": "Left(Right(var_0, Add(1, Add(3, 3))), 3)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['+106 769-858-438', '+83 973-757-831', '+62 647-787-775', '+172 027-507-632', '+72 001-050-856', '+95 310-537-401', '+6 775-969-238']},\n    outputs=['858', '757', '787', '507', '050', '537', '969'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3000712480279617,
            "num_unique_values": 84,
            "num_values_explored": 338,
            "solution": "Right(var_0, 3)",
            "solution_weight": 3,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['+106 769-858-438', '+83 973-757-831', '+62 647-787-775', '+172 027-507-632', '+72 001-050-856', '+95 310-537-401', '+6 775-969-238']},\n    outputs=['438', '831', '775', '632', '856', '401', '238'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 49.10816945601255,
            "num_unique_values": 3007,
            "num_values_explored": 50094,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['+106 769-858-438', '+83 973-757-831', '+62 647-787-775', '+172 027-507-632', '+72 001-050-856', '+95 310-537-401', '+6 775-969-238']},\n    outputs=['106.769.858.438', '83.973.757.831', '62.647.787.775', '172.027.507.632', '72.001.050.856', '95.310.537.401', '6.775.969.238'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.21460912295151502,
            "num_unique_values": 31,
            "num_values_explored": 255,
            "solution": "Left(var_0, 3)",
            "solution_weight": 3,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['938-242-504', '308-916-545', '623-599-749', '981-424-843', '118-980-214', '244-655-094']},\n    outputs=['938', '308', '623', '981', '118', '244'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.6388496669824235,
            "num_unique_values": 206,
            "num_values_explored": 740,
            "solution": "Concatenate(var_1, Concatenate(' ', var_0))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Launa', 'Lakenya', 'Brendan', 'Bradford', 'Rudolf', 'Lara'], 'var_1': ['Withers', 'Edison', 'Hage', 'Lango', 'Akiyama', 'Constable']},\n    outputs=['Withers Launa', 'Edison Lakenya', 'Hage Brendan', 'Lango Bradford', 'Akiyama Rudolf', 'Constable Lara'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.1396243029739708,
            "num_unique_values": 747,
            "num_values_explored": 3514,
            "solution": "Concatenate(var_0, Concatenate(',', Concatenate(' ', var_1)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['University of Pennsylvania', 'Cornell University', 'University of Maryland College Park', 'University of Michigan', 'Yale University', 'Columbia University'], 'var_1': ['Phialdelphia, PA, USA', 'Ithaca, New York, USA', 'College Park, MD', 'Ann Arbor, MI, USA', 'New Haven, CT, USA', 'New York, NY, USA']},\n    outputs=['University of Pennsylvania, Phialdelphia, PA, USA', 'Cornell University, Ithaca, New York, USA', 'University of Maryland College Park, College Park, MD', 'University of Michigan, Ann Arbor, MI, USA', 'Yale University, New Haven, CT, USA', 'Columbia University, New York, NY, USA'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 48.219037720991764,
            "num_unique_values": 4533,
            "num_values_explored": 50056,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['University of Pennsylvania', 'UCLA', 'Cornell University', 'Penn', 'University of Maryland College Park', 'University of Michigan'], 'var_1': ['Phialdelphia, PA, USA', 'Los Angeles, CA', 'Ithaca, New York, USA', 'Philadelphia, PA, USA', 'College Park, MD', 'Ann Arbor, MI, USA']},\n    outputs=['University of Pennsylvania, Phialdelphia, PA, USA', 'UCLA, Los Angeles, CA, USA', 'Cornell University, Ithaca, New York, USA', 'Penn, Philadelphia, PA, USA', 'University of Maryland College Park, College Park, MD, USA', 'University of Michigan, Ann Arbor, MI, USA'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 24.577298565011006,
            "num_unique_values": 2953,
            "num_values_explored": 26860,
            "solution": "Left(Left(Concatenate(var_1, If(Exact('Penn', var_0), 'delphia, PA, USA', ', USA')), Len(Concatenate(var_1, ', USA'))), Len(Substitute(var_1, 'ge', var_1, 1)))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['University of Pennsylvania', 'UCLA', 'Cornell University', 'Penn', 'University of Maryland College Park', 'University of Michigan'], 'var_1': ['Phialdelphia, PA, USA', 'Los Angeles, CA', 'Ithaca, New York, USA', 'Philadelphia, PA, USA', 'College Park, MD', 'Ann Arbor, MI, USA']},\n    outputs=['Phialdelphia, PA, USA', 'Los Angeles, CA, USA', 'Ithaca, New York, USA', 'Philadelphia, PA, USA', 'College Park, MD, USA', 'Ann Arbor, MI, USA'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 48.70415588299511,
            "num_unique_values": 4611,
            "num_values_explored": 50028,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['University of Pennsylvania', 'UCLA', 'Cornell University', 'Penn', 'University of Maryland College Park', 'University of Michigan', 'Columbia University', 'NYU'], 'var_1': ['Phialdelphia, PA, USA', 'Los Angeles, CA', 'Ithaca, New York, USA', 'Philadelphia, PA, USA', 'College Park, MD', 'Ann Arbor, MI, USA', 'New York, NY, USA', 'New York, New York, USA']},\n    outputs=['Phialdelphia, PA, USA', 'Los Angeles, CA, USA', 'Ithaca, NY, USA', 'Philadelphia, PA, USA', 'College Park, MD, USA', 'Ann Arbor, MI, USA', 'New York, NY, USA', 'New York, NY, USA'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 48.3785864970414,
            "num_unique_values": 4586,
            "num_values_explored": 50092,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['University of Pennsylvania', 'UCLA', 'Cornell University', 'Penn', 'University of Maryland College Park', 'University of Michigan', 'Columbia University', 'NYU'], 'var_1': ['Phialdelphia, PA, USA', 'Los Angeles, CA', 'Ithaca, New York, USA', 'Philadelphia, PA, USA', 'College Park, MD', 'Ann Arbor, MI, USA', 'New York, NY, USA', 'New York, New York, USA']},\n    outputs=['Phialdelphia, PA, USA', 'Los Angeles, CA, USA', 'Ithaca, NY, USA', 'Philadelphia, PA, USA', 'College Park, MD, USA', 'Ann Arbor, MI, USA', 'New York, NY, USA', 'New York, NY, USA'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 48.22905391600216,
            "num_unique_values": 4584,
            "num_values_explored": 50011,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['University of Pennsylvania', 'UCLA', 'Cornell University', 'Penn', 'University of Maryland College Park', 'University of Michigan', 'Columbia University', 'NYU'], 'var_1': ['Phialdelphia, PA, USA', 'Los Angeles, CA', 'Ithaca, New York, USA', 'Philadelphia, PA, USA', 'College Park, MD', 'Ann Arbor, MI, USA', 'New York, NY, USA', 'New York, New York, USA']},\n    outputs=['Phialdelphia, PA, USA', 'Los Angeles, CA, USA', 'Ithaca, NY, USA', 'Philadelphia, PA, USA', 'College Park, MD, USA', 'Ann Arbor, MI, USA', 'New York, NY, USA', 'New York, NY, USA'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.6111881920369342,
            "num_unique_values": 435,
            "num_values_explored": 1799,
            "solution": "Mid(var_0, Minus(Find('.', var_0), 1), 3)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['AIX 5.1', 'VMware ESX Server 3.5.0 build-110268', 'Linux Linux 2.6 Linux', 'Red Hat Enterprise AS 4 <2.6-78.0.13.ELlargesmp>', 'Microsoft <R> Windows <R> 2000 Advanced Server 1.0', 'Microsoft Windows XP Win2008R2 6.1.7601']},\n    outputs=['5.1', '3.5', '2.6', '2.6', '1.0', '6.1'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.6004510240163654,
            "num_unique_values": 150,
            "num_values_explored": 877,
            "solution": "Concatenate(Left(var_0, 2), Right(var_0, Add(2, 3)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['01/15/2013', '03/07/2011', '05/09/2009']},\n    outputs=['01/2013', '03/2011', '05/2009'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.7129486380144954,
            "num_unique_values": 417,
            "num_values_explored": 2077,
            "solution": "Replace(Trim(Replace(var_0, 3, 3, ' ')), 2, 2, ' ')",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['John Doe', 'Mayur Naik', 'Nimit Singh']},\n    outputs=['J Doe', 'M Naik', 'N Singh'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 46.83252091804752,
            "num_unique_values": 3312,
            "num_values_explored": 50072,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['Adf_ROCLeader_BAN_728x90_CPM_STD _BRD _NRT_DCK', 'MMC_ContextualLarRec_BAN_336x280_CPM_STD _LDS _RTG_DCK', 'Adf_ROC_DLBD_728x90_CPM_STD_DRS_NRT_NOR_DCK']},\n    outputs=['Adf_ROCLeader_BAN_728x90_CPM_STD _Branding _NRT_DCK', 'MMC_ContextualLarRec_BAN_336x280_CPM_STD _Leads _RTG_DCK', 'Adf_ROC_DLBD_728x90_CPM_STD_Direct Response_NRT_NOR_DCK'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.704847376968246,
            "num_unique_values": 227,
            "num_values_explored": 832,
            "solution": "Left(var_0, Minus(Find('-', var_0), 2))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Dec 2, 2014, 11=23 PM - +91 90000 80000= loren ipsum', 'Dec 2, 2014, 11=24 PM - +91 90000 80000= loren']},\n    outputs=['Dec 2, 2014, 11=23 PM', 'Dec 2, 2014, 11=24 PM'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 23.85454818996368,
            "num_unique_values": 2312,
            "num_values_explored": 26244,
            "solution": "Left(var_0, Len(Substitute(Left(Substitute(var_0, ' ', ''), Len(Left(var_0, Find(' ', Concatenate(var_0, ' '))))), To_Text(2), '')))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['TL-18273982| 10MM', 'TL-288762| 76DK', 'CT-576', 'N/A']},\n    outputs=['TL-18273982', 'TL-288762', 'CT-576', 'N/A'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 50.745510684966575,
            "num_unique_values": 3382,
            "num_values_explored": 50029,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['Tire Pressure ABC123873 Monitor', 'Oil Life ABC849999999021 gauge', 'Air conditioner GHF211 maintenance']},\n    outputs=['ABC123873', 'ABC849999999021', 'GHF211'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 56.606728437007405,
            "num_unique_values": 4958,
            "num_values_explored": 50026,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['General Electric', 'General Electric Inc', 'General Electric Company', 'Microsoft', 'Microsoft Corporation', 'Nintendo', 'Nintendo Enterprises']},\n    outputs=['General Electric', 'General Electric', 'General Electric', 'Microsoft', 'Microsoft', 'Nintendo', 'Nintendo'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.20542688894784078,
            "num_unique_values": 80,
            "num_values_explored": 223,
            "solution": "Replace(var_0, 1, Find(' ', var_0), '')",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Name= ABC Retailers', 'ame= XYZ Suppliers']},\n    outputs=['ABC Retailers', 'XYZ Suppliers'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 25.019943168968894,
            "num_unique_values": 2567,
            "num_values_explored": 26306,
            "solution": "Substitute(Right(If(Exact(var_0, Lower(var_0)), Proper(Rept(var_1, 3)), var_0), Add(3, 2)), Right(var_1, 2), '', 1)",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['C0abc', 'aabc', 'C0dd', 'dd'], 'var_1': ['def', 'def', 'qwe', 'qwe']},\n    outputs=['C0abc', 'def', 'C0dd', 'qwe'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 48.97604132501874,
            "num_unique_values": 3394,
            "num_values_explored": 50092,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['http=//www.apple.com/uk/mac', 'https=//www.microsoft.com/en-gb/windows', 'https=//www.microsoft.com/']},\n    outputs=['mac', 'windows', 'microsoft'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.905524831963703,
            "num_unique_values": 316,
            "num_values_explored": 1126,
            "solution": "Substitute(Right(var_0, Add(1, Find('/', var_0))), '/', '')",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['ABCDE/FGHI/JKL/MNOPQR', 'A/ABCDE/FGHI/JKL']},\n    outputs=['MNOPQR', 'JKL'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.215744731016457,
            "num_unique_values": 346,
            "num_values_explored": 1448,
            "solution": "If(Gt(Len(var_2), Add(3, 2)), 'I hate bananas', 'I love apples')",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['I love apples', 'I love apples'], 'var_1': ['I hate bananas', 'I hate bananas'], 'var_2': ['banana', 'apple']},\n    outputs=['I hate bananas', 'I love apples'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.781314189953264,
            "num_unique_values": 1200,
            "num_values_explored": 8986,
            "solution": "Substitute(Substitute(var_0, 'knowthat', 'know'), Substitute('that', var_0, 'know'), '')",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['thatensures', 'thatwill', 'thathave', 'knowthat', 'that', 'mouse', 'knowthat']},\n    outputs=['ensures', 'will', 'have', 'know', 'that', 'mouse', 'know'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.648601172957569,
            "num_unique_values": 1409,
            "num_values_explored": 9020,
            "solution": "Trim(Substitute(Trim(Substitute(var_0, '>', '')), '<', ''))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['This is a <string>, It should be <changed> to <a> number.', 'a < 4 and a > 0']},\n    outputs=['This is a string, It should be changed to a number.', 'a 4 and a 0'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.27544396597659215,
            "num_unique_values": 161,
            "num_values_explored": 321,
            "solution": "Substitute(var_0, '/delete words in the area /', '')",
            "solution_weight": 4,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['This is a line. /delete words in the area /keep this part', '/delete words in the area /']},\n    outputs=['This is a line. keep this part', ''],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0101208160049282,
            "num_unique_values": 293,
            "num_values_explored": 1130,
            "solution": "Trim(Left(var_0, Find(' ', var_0, Len(' vulgaris'))))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Polygonum amphibium', 'Hippuris vulgaris', 'Lysimachia vulgaris', 'Juncus bulbosus ssp. bulbosus', 'Lycopus europaeus ssp. europaeus', 'Nymphaea alba']},\n    outputs=['Polygonum', 'Hippuris', 'Lysimachia', 'Juncus bulbosus', 'Lycopus europaeus', 'Nymphaea'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 49.265113305998966,
            "num_unique_values": 3530,
            "num_values_explored": 50064,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['one, 1', 'two, 2', 'three, 3', 'four, 4']},\n    outputs=['one apple', 'two bananas', 'three strawberries', 'four oranges'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19611756404628977,
            "num_unique_values": 70,
            "num_values_explored": 211,
            "solution": "Mid(var_0, Len(Concatenate('KOR.JPN<IDEALPRO,CASH,', '<')), 3)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['USD.EUR<IDEALPRO,CASH,EUR>', 'USD.EUR<IDEALPRO,CASH,USD>', 'KOR.JPN<IDEALPRO,CASH,WON>', 'KOR.JPN<IDEALPRO,CASH,YEN>']},\n    outputs=['EUR', 'USD', 'WON', 'YEN'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.44093167304527,
            "num_unique_values": 689,
            "num_values_explored": 4256,
            "solution": "Concatenate(var_0, Concatenate(Concatenate('/n', var_1), Concatenate('/n', var_2)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Traci Brown', 'Mary Hannan', 'Linda Thomas'], 'var_1': ['1301 Robinson Court', '1195 Amethyst Drive', '2479 North Bend Road'], 'var_2': ['Saginaw, MI 48607', 'Lansing, MI 48933', 'Allen, KY 41601']},\n    outputs=['Traci Brown/n1301 Robinson Court/nSaginaw, MI 48607', 'Mary Hannan/n1195 Amethyst Drive/nLansing, MI 48933', 'Linda Thomas/n2479 North Bend Road/nAllen, KY 41601'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.34128552197944373,
            "num_unique_values": 113,
            "num_values_explored": 542,
            "solution": "Substitute(Trim(Right(var_0, Add(3, 3))), '-%', '%')",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['-%134', '500', '5.125', '-%43.00']},\n    outputs=['%134', '500', '5.125', '%43.00'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 43.60050115099875,
            "num_unique_values": 2396,
            "num_values_explored": 50036,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['801-456-8765', '<978> 654-0299', '978.654.0299']},\n    outputs=['8014568765', '9786540299', '9786540299'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.1029300920199603,
            "num_unique_values": 429,
            "num_values_explored": 2680,
            "solution": "Substitute(Concatenate(Left(var_1, 1), '_acme.com'), '_', Concatenate(var_0, '_'))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['brown', 'thomas', 'ward'], 'var_1': ['traci', 'linda', 'jack']},\n    outputs=['tbrown_acme.com', 'lthomas_acme.com', 'jward_acme.com'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.4007005129824392,
            "num_unique_values": 343,
            "num_values_explored": 1820,
            "solution": "Concatenate(Left(var_0, 1), Concatenate(var_1, Concatenate('_', var_2)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['ayako', 'amy', 'tom'], 'var_1': ['ogawa', 'johnson', 'chang'], 'var_2': ['acme.com', 'google.com', 'upenn.edu']},\n    outputs=['aogawa_acme.com', 'ajohnson_google.com', 'tchang_upenn.edu'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.738643802003935,
            "num_unique_values": 242,
            "num_values_explored": 900,
            "solution": "Mid(Mid(var_1, 2, 99), Find('_', var_1), 99)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['ann chang', 'bobby smith', 'art lennox'], 'var_1': ['achang_maaker.com', 'bobt_sphynx.uk.co', 'art.lennox_svxn.com']},\n    outputs=['maaker.com', 'sphynx.uk.co', 'svxn.com'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.37235393503215164,
            "num_unique_values": 123,
            "num_values_explored": 494,
            "solution": "Substitute(Right(var_0, 3), '.', '')",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['www.domain.com', 'mail.net', 'www.amaon.co.uk']},\n    outputs=['com', 'net', 'uk'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2699445150210522,
            "num_unique_values": 96,
            "num_values_explored": 392,
            "solution": "Trim(Replace(var_0, 1, Find('= ', var_0), ''))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['year= 2016', 'make= subaru', 'model= outback wagon', 'fuel economy= 25/33']},\n    outputs=['2016', 'subaru', 'outback wagon', '25/33'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8083346530329436,
            "num_unique_values": 266,
            "num_values_explored": 985,
            "solution": "Right(var_0, Minus(Minus(Len(var_0), Find('/', var_0)), 1))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['https=//exceljet.net/catalog', 'https=//microsoft.com', 'ftp=//someserver.com', 'sftp=//127.0.0.1']},\n    outputs=['exceljet.net/catalog', 'microsoft.com', 'someserver.com', '127.0.0.1'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.5439665029989555,
            "num_unique_values": 414,
            "num_values_explored": 2013,
            "solution": "Right(Mid(var_0, Len('.com'), Find('.', var_0)), Len(Trim(Right(var_0, Add(2, Len(Rept('.com', 3)))))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['send email to json_acme.com', 'contact help_robot.com for all support requests']},\n    outputs=['json_acme.com', 'help_robot.com'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 48.65976067498559,
            "num_unique_values": 3458,
            "num_values_explored": 50010,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['this is a _username in the middle', 'twitter names look like= _name', 'with two _name1 and _name2']},\n    outputs=['_username', '_name', '_name1'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.7381471180124208,
            "num_unique_values": 222,
            "num_values_explored": 854,
            "solution": "Left(var_1, Minus(Find('_', var_1), 1))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['ann chang', 'bobby smith', 'art lennox'], 'var_1': ['achang_maaker.com', 'bobt_sphynx.uk.co', 'art.lennox_svxn.com']},\n    outputs=['achang', 'bobt', 'art.lennox'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.781803678022698,
            "num_unique_values": 815,
            "num_values_explored": 5818,
            "solution": "Left(Left(var_0, Add(Len('abc.com'), Find('.', var_0))), Find('/', var_0, Len('abc.com/def')))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['https=//abc.com/def', 'http=//www.abc.com/def/cef', 'http=//chandoo.org/wp/def-def']},\n    outputs=['https=//abc.com/', 'http=//www.abc.com', 'http=//chandoo.org/'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1743667580303736,
            "num_unique_values": 31,
            "num_values_explored": 247,
            "solution": "Left(var_0, Add(3, 2))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Susan Ann Chang', 'Ayako Tanaka', 'Bobby T. smth']},\n    outputs=['Susan', 'Ayako', 'Bobby'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.931117459957022,
            "num_unique_values": 729,
            "num_values_explored": 4347,
            "solution": "Left(var_0, Minus(Find(var_0, Substitute(var_0, ' ', var_0)), 1))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['The quick brown fox.', 'quick brown fox.', 'fox']},\n    outputs=['The', 'quick', ''],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 27.1190223210142,
            "num_unique_values": 2583,
            "num_values_explored": 30412,
            "solution": "Right(Right(Right(var_0, Minus(Len('11/1/2015 - First call/n12/3/2015-order placed'), Len('/2015-'))), Len(Substitute(var_0, '11/1/2015 - First call/n12/3/2015-order placed', '11/1/2015 - First call'))), Find('0', '11/1/2015 - First call/n12/3/2015-order placed', Find('-', '11/1/2015 - First call/n12/3/2015-order placed')))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['11/1/2015 - First call/n12/3/2015-order placed/n11/15/2015-follow-up,interested', '11/1/2015 - First call/n12/3/2015-order placed', '11/1/2015 - First call']},\n    outputs=['11/15/2015-follow-up,interested', '12/3/2015-order placed', '11/1/2015 - First call'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 13.608353523013648,
            "num_unique_values": 1564,
            "num_values_explored": 15528,
            "solution": "Mid(Concatenate(var_0, Concatenate(',', var_0)), Add(1, Find(',', var_0)), Len(var_0))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['chang,amy', 'smith,bobby', 'lennox,aaron']},\n    outputs=['amy,chang', 'bobby,smith', 'aaron,lennox'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.24751134199323133,
            "num_unique_values": 95,
            "num_values_explored": 327,
            "solution": "Right(var_0, 3)",
            "solution_weight": 3,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Park Kim', 'Lee Kim', 'Kim Lee']},\n    outputs=['Kim', 'Kim', 'Lee'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2410075180232525,
            "num_unique_values": 95,
            "num_values_explored": 297,
            "solution": "Right(var_0, Add(1, 3))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['focus on one thing at a time', 'premature opt is the root of all evil', 'where is life']},\n    outputs=['time', 'evil', 'life'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 16.694297858979553,
            "num_unique_values": 2048,
            "num_values_explored": 18221,
            "solution": "Trim(Replace(Mid(Left(Concatenate(Rept('y ', 3), var_0), Len(var_0)), Find(' ', var_0), 99), 1, Add(3, 3), ''))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['susan ann chang', 'ayako tanaka', 'bobby t. smith', 'anthory r. tom brown']},\n    outputs=['ann', '', 't.', 'r. tom'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 49.87954059400363,
            "num_unique_values": 3523,
            "num_values_explored": 50072,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['figs', 'mangos'], 'var_1': ['', 'kiwis'], 'var_2': ['apples', 'grapes']},\n    outputs=['figs, apples', 'mangos, kiwis, grapes'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.4189008679823019,
            "num_unique_values": 342,
            "num_values_explored": 1793,
            "solution": "Concatenate(var_0, Concatenate(' ', var_1))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['susan', 'aaron'], 'var_1': ['chang', 'kim']},\n    outputs=['susan chang', 'aaron kim'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.170678570983,
            "num_unique_values": 344,
            "num_values_explored": 1372,
            "solution": "If(Gt(Len(var_0), 3), var_1, Left(var_2, 3))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['cat', 'blue', 'firm', 'soft'], 'var_1': ['dog', 'red', 'firm', 'soft'], 'var_2': ['cat', 'red', 'soft', 'soft']},\n    outputs=['cat', 'red', 'firm', 'soft'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.73945861303946,
            "num_unique_values": 187,
            "num_values_explored": 989,
            "solution": "Left(var_0, Minus(Find('.', var_0), 1))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['happy.jpg', 'pivot table.xls', 'sales data.csv', 'invoice3001.xls.pdf']},\n    outputs=['happy', 'pivot table', 'sales data', 'invoice3001'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 53.685139723005705,
            "num_unique_values": 2735,
            "num_values_explored": 50051,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['The shawshank', 'The godfather', 'pulp fiction']},\n    outputs=['The shawshank', 'The godfather', 'pulp fiction'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4127108999527991,
            "num_unique_values": 105,
            "num_values_explored": 548,
            "solution": "Substitute(var_0, '-', '')",
            "solution_weight": 4,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['801-345-1987', '612-554-2000']},\n    outputs=['8013451987', '6125542000'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18131036503473297,
            "num_unique_values": 60,
            "num_values_explored": 252,
            "solution": "Mid(var_0, Len(Concatenate(' ', 'c=/users/dave/')), 99)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['c=/users/dave/shotcut.xls', 'c=/users/dave/formulas.xls', 'c=/users/dave/pivot table.xls']},\n    outputs=['shotcut.xls', 'formulas.xls', 'pivot table.xls'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4228257520007901,
            "num_unique_values": 122,
            "num_values_explored": 535,
            "solution": "Substitute('zx66448', var_1, '')",
            "solution_weight": 4,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['zx66448', 'zx66448', 'zx66448', 'zx66448', 'zx66448'], 'var_1': ['z', 'x', '6', '4', '8']},\n    outputs=['x66448', 'z66448', 'zx448', 'zx668', 'zx6644'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3855797279975377,
            "num_unique_values": 115,
            "num_values_explored": 587,
            "solution": "Substitute(var_0, ' ', '-')",
            "solution_weight": 4,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['801 456 8756', '978 456 8756']},\n    outputs=['801-456-8756', '978-456-8756'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.6279436079785228,
            "num_unique_values": 240,
            "num_values_explored": 768,
            "solution": "Left(var_0, Minus(Find(' ', var_0, Len('Truck')), 1))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Trucking Inc.', 'New Truck Inc', 'ABV Trucking Inc, LLC']},\n    outputs=['Trucking', 'New Truck', 'ABV Trucking'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 56.14813722803956,
            "num_unique_values": 4671,
            "num_values_explored": 50075,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['April 1 1799', 'April 11 1867', 'February 12 1806', 'February 21 1798', 'February 28 1844 as Delaware Township', 'February 5 1798', 'February 7 1892 Verona Township', 'February 9 1797', 'January 19 1748', 'July 10 1721 as Upper Penns Neck Township', 'March 15 1860', 'March 17 1870 <as Raritan Township>', 'March 17 1874', 'March 23 1864', 'March 5 1867', 'April 28th 1828']},\n    outputs=['1799', '1867', '1806', '1798', '1844', '1798', '1892', '1797', '1748', '1721', '1860', '1870', '1874', '1864', '1867', '1828'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 6.941207946976647,
            "num_unique_values": 1244,
            "num_values_explored": 7891,
            "solution": "Mid(var_0, Add(2, Find('_', var_0)), 99)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['2283-332-44543 CAP DDT PPL445_ HEEN PAX 77820', '44372-33-3223 TYYTE CAP BOX 1550 244 BOX PPSSA223_ PAX', 'PRECISE 77 CLEAR BLUE 99WIE_ BOX 4403 PAX SSKA']},\n    outputs=['HEEN PAX 77820', 'PAX', 'BOX 4403 PAX SSKA'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.7340504609746858,
            "num_unique_values": 206,
            "num_values_explored": 933,
            "solution": "Left(var_0, Minus(Len(var_0), Add(3, 3)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['india china japan', 'indonesia korea']},\n    outputs=['india china', 'indonesia'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.15133220300776884,
            "num_unique_values": 69,
            "num_values_explored": 209,
            "solution": "Mid(var_0, Find('Westerkerk HRL', Concatenate(var_0, ' Westerkerk HRL')), 99)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['geb. 14 oct 1956 Westerkerk HRL', 'geb. 14 oct 1956', 'geb. 15 feb 1987 Westerkerk HRL']},\n    outputs=['Westerkerk HRL', '', 'Westerkerk HRL'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 45.12344574095914,
            "num_unique_values": 2387,
            "num_values_explored": 50043,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['R/V<208,0,32>', 'R/S<184,28,16>', 'R/B<255,88,80>']},\n    outputs=['R/V 208 0 32', 'R/S 184 28 16', 'R/B 255 88 80'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.7235485370038077,
            "num_unique_values": 212,
            "num_values_explored": 928,
            "solution": "Left(var_0, Minus(Find('=191', var_0), 1))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['valentine day=1915=50==7.1=45', 'movie blah=2blahblah, The=1914=54==7.9=17']},\n    outputs=['valentine day', 'movie blah=2blahblah, The'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.8993750649970025,
            "num_unique_values": 689,
            "num_values_explored": 4629,
            "solution": "Concatenate('loren', Mid(Lower(var_0), Minus(99, Len(var_0)), 99))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Dec 2, 2014, 11=23 PM - +91 90000 80000= loren ipsum', 'Dec 2, 2014, 11=24 PM - +91 90000 80000= loren']},\n    outputs=['loren ipsum', 'loren'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.7258074179990217,
            "num_unique_values": 216,
            "num_values_explored": 894,
            "solution": "Left(Substitute(var_0, var_1, ''), Find(To_Text(1), var_0))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Item 1 AQ-S810W-2AVDF', 'Item 2 AQ-230A-1DUQ'], 'var_1': ['AQ-S810W-2AVDF', 'AQ-230A']},\n    outputs=['Item 1', 'Item 2 -1DUQ'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 50.898238171997946,
            "num_unique_values": 3251,
            "num_values_explored": 50021,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['home/Excel/Sheet1.xls', 'home/user/Sheet1.xls']},\n    outputs=['Sheet1.xls', 'Sheet1.xls'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.6421346879797056,
            "num_unique_values": 260,
            "num_values_explored": 760,
            "solution": "Mid(Replace(var_0, 1, Find(' Jane ', var_0), ''), Len(' Jane '), 99)",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['Sarah Jane Jones', 'Bob Jane Smithfield']},\n    outputs=['Jones', 'Smithfield'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.1785794319584966,
            "num_unique_values": 413,
            "num_values_explored": 2793,
            "solution": "Substitute(Right(Mid(Left(var_0, Minus(Len(var_0), 3)), 3, 99), Add(3, 3)), '>', '')",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['<b>0.66<b>', '<b>0.409<b>', '<b>0.7268<b>']},\n    outputs=['0.66', '0.409', '0.7268'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.580165423976723,
            "num_unique_values": 729,
            "num_values_explored": 5103,
            "solution": "Right(Substitute(Right(Proper(Left(var_0, Find(Concatenate('0', ' '), Concatenate(var_0, '00 ')))), 3), To_Text(99), var_0), Add(3, 3))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'var_0': ['100 apples', 'the price is %500 dollars', 'serial number %003399']},\n    outputs=['100', '500', '003399'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 48.76458233298035,
            "num_unique_values": 2481,
            "num_values_explored": 50094,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'var_0': ['34653 jim mcdonald', 'price is 500', '100 apples']},\n    outputs=[' jim mcdonald', ' price is', ' apples'],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.7528089887640449
}
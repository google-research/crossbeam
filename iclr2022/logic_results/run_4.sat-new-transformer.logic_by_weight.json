{
    "num_tasks": 703,
    "num_tasks_solved": 664,
    "results": [
        {
            "elapsed_time": 0.26783993298886344,
            "num_unique_values": 105,
            "num_values_explored": 197,
            "solution": "(chain (transpose (disjunction (transpose successor) (chain successor (chain successor successor)))) successor)",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n        False],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [False, False, False,  True, False, False, False,  True, False,\n        False],\n       [False, False, False, False,  True, False, False, False,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(chain (disjunction successor (transpose (chain successor (chain successor successor)))) successor)\n)",
            "task_solution": "(chain (disjunction successor (transpose (chain successor (chain successor successor)))) successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.2029398349695839,
            "num_unique_values": 67,
            "num_values_explored": 156,
            "solution": "(disjunction equal (chain (recursive successor (disjunction zero successor) (transpose successor)) (transpose successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive successor (disjunction zero successor) (transpose successor)) successor)\n)",
            "task_solution": "(recursive equal (recursive successor (disjunction zero successor) (transpose successor)) successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.26878181396750733,
            "num_unique_values": 86,
            "num_values_explored": 186,
            "solution": "(transpose (chain (recursive successor (transpose successor) successor) (chain successor successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False]])],\n    solution=(transpose (chain (recursive successor (transpose successor) successor) (chain successor successor)))\n)",
            "task_solution": "(transpose (chain (recursive successor (transpose successor) successor) (chain successor successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.20198949403129518,
            "num_unique_values": 70,
            "num_values_explored": 145,
            "solution": "(disjunction (chain (transpose successor) successor) (recursive successor successor (transpose successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False,  True,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False,  True,  True, False,  True, False,\n         True],\n       [False, False, False, False, False,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (transpose (disjunction successor (recursive equal (transpose successor) successor))) successor)\n)",
            "task_solution": "(chain (transpose (disjunction successor (recursive equal (transpose successor) successor))) successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.23332550103077665,
            "num_unique_values": 80,
            "num_values_explored": 172,
            "solution": "(recursive successor (recursive (transpose successor) (transpose successor) successor) (transpose successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive successor (recursive (transpose successor) (transpose successor) successor) (transpose successor))\n)",
            "task_solution": "(recursive successor (recursive (transpose successor) (transpose successor) successor) (transpose successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.18621374998474494,
            "num_unique_values": 57,
            "num_values_explored": 137,
            "solution": "(chain (recursive equal successor (chain successor successor)) (chain zero successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive equal successor (chain successor successor)) (chain zero successor))\n)",
            "task_solution": "(chain (recursive equal successor (chain successor successor)) (chain zero successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.2736490070237778,
            "num_unique_values": 96,
            "num_values_explored": 205,
            "solution": "(chain (disjunction (chain zero successor) (transpose (chain successor successor))) successor)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (disjunction (chain zero successor) (transpose (chain successor successor))) successor)\n)",
            "task_solution": "(chain (disjunction (chain zero successor) (transpose (chain successor successor))) successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.22759598499396816,
            "num_unique_values": 81,
            "num_values_explored": 163,
            "solution": "(recursive (transpose successor) equal (recursive successor successor (chain successor successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (transpose successor) equal (recursive successor successor (chain successor successor)))\n)",
            "task_solution": "(recursive (transpose successor) equal (recursive successor successor (chain successor successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.3364491199608892,
            "num_unique_values": 106,
            "num_values_explored": 224,
            "solution": "(disjunction successor (chain (recursive (disjunction successor equal) (recursive (chain successor successor) (transpose successor) successor) successor) (chain successor (transpose successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False]])],\n    solution=(recursive successor (recursive (chain successor successor) (transpose successor) successor) successor)\n)",
            "task_solution": "(recursive successor (recursive (chain successor successor) (transpose successor) successor) successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.306778737984132,
            "num_unique_values": 106,
            "num_values_explored": 220,
            "solution": "(disjunction successor (transpose (chain (recursive successor (transpose successor) successor) successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True,  True,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True,  True,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True,  True,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True]])],\n    solution=(disjunction successor (transpose (chain (recursive successor (transpose successor) successor) successor)))\n)",
            "task_solution": "(disjunction successor (transpose (chain (recursive successor (transpose successor) successor) successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.2411347739980556,
            "num_unique_values": 77,
            "num_values_explored": 174,
            "solution": "(recursive (chain (transpose successor) (chain successor successor)) (transpose successor) successor)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (chain (transpose successor) (chain successor successor)) (transpose successor) successor)\n)",
            "task_solution": "(recursive (chain (transpose successor) (chain successor successor)) (transpose successor) successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.25573497102595866,
            "num_unique_values": 92,
            "num_values_explored": 190,
            "solution": "(transpose (chain successor (recursive (transpose successor) (transpose successor) (chain successor successor))))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False,  True, False, False,\n        False],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor successor (transpose (chain successor successor))) (transpose successor))\n)",
            "task_solution": "(chain (recursive successor successor (transpose (chain successor successor))) (transpose successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.24785898195113987,
            "num_unique_values": 79,
            "num_values_explored": 167,
            "solution": "(recursive (transpose (disjunction successor equal)) equal (transpose (chain successor successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(recursive (transpose (disjunction successor equal)) equal (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (transpose (disjunction successor equal)) equal (transpose (chain successor successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.22152815997833386,
            "num_unique_values": 66,
            "num_values_explored": 159,
            "solution": "(disjunction equal (disjunction (chain successor successor) (chain (transpose successor) zero)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (disjunction equal (chain successor successor)) equal (chain zero successor))\n)",
            "task_solution": "(recursive (disjunction equal (chain successor successor)) equal (chain zero successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.3322597820078954,
            "num_unique_values": 119,
            "num_values_explored": 241,
            "solution": "(recursive equal (recursive zero zero (transpose (chain successor successor))) successor)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive zero zero (transpose (chain successor successor))) successor)\n)",
            "task_solution": "(recursive equal (recursive zero zero (transpose (chain successor successor))) successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.14344239403726533,
            "num_unique_values": 41,
            "num_values_explored": 113,
            "solution": "(recursive (disjunction successor (transpose successor)) (chain zero successor) (transpose successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (disjunction successor (transpose successor)) (chain zero successor) (transpose successor))\n)",
            "task_solution": "(recursive (disjunction successor (transpose successor)) (chain zero successor) (transpose successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.2162776940385811,
            "num_unique_values": 83,
            "num_values_explored": 158,
            "solution": "(recursive successor (disjunction successor (transpose (disjunction successor equal))) (transpose (chain successor successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (chain (transpose (disjunction zero successor)) successor) (transpose successor))\n)",
            "task_solution": "(recursive successor (chain (transpose (disjunction zero successor)) successor) (transpose successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.30555715499212965,
            "num_unique_values": 106,
            "num_values_explored": 217,
            "solution": "(disjunction equal (recursive successor (recursive successor successor (transpose successor)) successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False,  True,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False,  True,  True, False,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (recursive successor (recursive successor successor (transpose successor)) successor))\n)",
            "task_solution": "(disjunction equal (recursive successor (recursive successor successor (transpose successor)) successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.2301689999876544,
            "num_unique_values": 85,
            "num_values_explored": 165,
            "solution": "(recursive (transpose successor) (recursive zero (transpose successor) (transpose successor)) successor)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (recursive zero (transpose successor) (transpose successor)) successor)\n)",
            "task_solution": "(recursive (transpose successor) (recursive zero (transpose successor) (transpose successor)) successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.19484046095749363,
            "num_unique_values": 66,
            "num_values_explored": 149,
            "solution": "(disjunction equal (chain (recursive successor (chain (transpose successor) successor) (chain successor successor)) successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain (recursive successor equal (chain successor successor)) successor))\n)",
            "task_solution": "(disjunction equal (chain (recursive successor equal (chain successor successor)) successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.2660182159743272,
            "num_unique_values": 105,
            "num_values_explored": 197,
            "solution": "(chain (transpose successor) (disjunction successor (recursive equal successor (transpose successor))))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True,  True,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True,  True,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(chain (transpose successor) (disjunction successor (recursive equal successor (transpose successor))))\n)",
            "task_solution": "(chain (transpose successor) (disjunction successor (recursive equal successor (transpose successor))))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.2643702339846641,
            "num_unique_values": 98,
            "num_values_explored": 194,
            "solution": "(chain successor (recursive equal (chain successor successor) (transpose (recursive successor equal successor))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (chain successor successor) (recursive (transpose successor) successor equal))\n)",
            "task_solution": "(recursive successor (chain successor successor) (recursive (transpose successor) successor equal))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.28484315203968436,
            "num_unique_values": 109,
            "num_values_explored": 209,
            "solution": "(disjunction (transpose successor) (chain successor (chain successor (chain successor successor))))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False,  True, False, False, False, False,\n        False],\n       [ True, False, False, False, False,  True, False, False, False,\n        False],\n       [False,  True, False, False, False, False,  True, False, False,\n        False],\n       [False, False,  True, False, False, False, False,  True, False,\n        False],\n       [False, False, False,  True, False, False, False, False,  True,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n         True],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (chain successor (chain successor (chain successor successor))))\n)",
            "task_solution": "(disjunction (transpose successor) (chain successor (chain successor (chain successor successor))))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.2260570140206255,
            "num_unique_values": 77,
            "num_values_explored": 159,
            "solution": "(recursive equal (transpose (disjunction successor equal)) (transpose (chain successor successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (transpose (disjunction successor equal)) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive equal (transpose (disjunction successor equal)) (transpose (chain successor successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.20742007298395038,
            "num_unique_values": 67,
            "num_values_explored": 150,
            "solution": "(disjunction (chain zero successor) (transpose (disjunction equal (chain successor successor))))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True]])],\n    solution=(disjunction equal (disjunction (chain zero successor) (transpose (chain successor successor))))\n)",
            "task_solution": "(disjunction equal (disjunction (chain zero successor) (transpose (chain successor successor))))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.28360375500051305,
            "num_unique_values": 106,
            "num_values_explored": 202,
            "solution": "(disjunction successor (transpose (disjunction equal (chain successor (chain successor successor)))))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False, False,  True,  True, False, False, False, False,\n        False],\n       [False,  True, False, False,  True,  True, False, False, False,\n        False],\n       [False, False,  True, False, False,  True,  True, False, False,\n        False],\n       [False, False, False,  True, False, False,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False, False,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n         True]])],\n    solution=(disjunction successor (transpose (disjunction equal (chain successor (chain successor successor)))))\n)",
            "task_solution": "(disjunction successor (transpose (disjunction equal (chain successor (chain successor successor)))))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.21803805802483112,
            "num_unique_values": 77,
            "num_values_explored": 162,
            "solution": "(recursive successor successor (recursive successor equal (recursive successor equal successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (recursive successor equal (recursive successor equal successor)))\n)",
            "task_solution": "(recursive successor successor (recursive successor equal (recursive successor equal successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.17545861896360293,
            "num_unique_values": 57,
            "num_values_explored": 139,
            "solution": "(chain successor (recursive (disjunction successor (transpose successor)) (transpose successor) zero))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True, False, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False, False, False,  True, False,  True, False, False,\n        False],\n       [ True, False, False, False, False,  True, False,  True, False,\n        False],\n       [ True, False, False, False, False, False,  True, False,  True,\n        False],\n       [ True, False, False, False, False, False, False,  True, False,\n         True],\n       [ True, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive (disjunction successor (transpose successor)) (transpose successor) zero))\n)",
            "task_solution": "(chain successor (recursive (disjunction successor (transpose successor)) (transpose successor) zero))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.1977607820299454,
            "num_unique_values": 70,
            "num_values_explored": 148,
            "solution": "(disjunction (transpose (chain successor successor)) (recursive successor (transpose successor) successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True,  True,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True,  True,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n        False]])],\n    solution=(disjunction (transpose (chain successor successor)) (recursive successor (transpose successor) successor))\n)",
            "task_solution": "(disjunction (transpose (chain successor successor)) (recursive successor (transpose successor) successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.35250439104856923,
            "num_unique_values": 119,
            "num_values_explored": 229,
            "solution": "(recursive successor (disjunction (chain successor successor) (transpose (chain successor successor))) equal)",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive successor (recursive (chain successor successor) (transpose successor) successor) equal)\n)",
            "task_solution": "(recursive successor (recursive (chain successor successor) (transpose successor) successor) equal)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.28655685600824654,
            "num_unique_values": 113,
            "num_values_explored": 215,
            "solution": "(disjunction successor (transpose (disjunction successor (recursive equal successor (transpose successor)))))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True, False,  True,  True,  True,  True, False, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True,  True, False,\n        False],\n       [False,  True, False,  True, False,  True,  True,  True,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True]])],\n    solution=(disjunction successor (transpose (disjunction successor (recursive equal successor (transpose successor)))))\n)",
            "task_solution": "(disjunction successor (transpose (disjunction successor (recursive equal successor (transpose successor)))))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.19612342095933855,
            "num_unique_values": 74,
            "num_values_explored": 153,
            "solution": "(disjunction equal (recursive successor (disjunction successor (recursive equal equal successor)) (chain successor successor)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True]])],\n    solution=(disjunction equal (recursive successor (recursive equal (transpose successor) successor) successor))\n)",
            "task_solution": "(disjunction equal (recursive successor (recursive equal (transpose successor) successor) successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.26085362501908094,
            "num_unique_values": 87,
            "num_values_explored": 195,
            "solution": "(transpose (chain (disjunction equal (recursive successor (transpose successor) equal)) successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True]])],\n    solution=(transpose (chain (disjunction zero (recursive successor (transpose successor) equal)) successor))\n)",
            "task_solution": "(transpose (chain (disjunction zero (recursive successor (transpose successor) equal)) successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.19983954302733764,
            "num_unique_values": 68,
            "num_values_explored": 153,
            "solution": "(disjunction equal (chain (transpose (disjunction equal successor)) (chain successor successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain (transpose (disjunction successor equal)) (chain successor successor)))\n)",
            "task_solution": "(disjunction equal (chain (transpose (disjunction successor equal)) (chain successor successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.16590098902815953,
            "num_unique_values": 37,
            "num_values_explored": 111,
            "solution": "(recursive (disjunction zero (chain successor successor)) (chain zero successor) equal)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (disjunction zero (chain successor successor)) (chain zero successor) equal)\n)",
            "task_solution": "(recursive (disjunction zero (chain successor successor)) (chain zero successor) equal)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.19610108598135412,
            "num_unique_values": 58,
            "num_values_explored": 133,
            "solution": "(chain (recursive successor successor (transpose successor)) (transpose (disjunction equal successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor successor (transpose successor)) (transpose (disjunction successor equal)))\n)",
            "task_solution": "(chain (recursive successor successor (transpose successor)) (transpose (disjunction successor equal)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.2317771260277368,
            "num_unique_values": 80,
            "num_values_explored": 163,
            "solution": "(recursive equal (disjunction equal successor) (chain successor (chain successor successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True, False,  True,  True, False,  True,  True, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n         True]])],\n    solution=(recursive equal (disjunction successor equal) (chain successor (chain successor successor)))\n)",
            "task_solution": "(recursive equal (disjunction successor equal) (chain successor (chain successor successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.19109374401159585,
            "num_unique_values": 56,
            "num_values_explored": 135,
            "solution": "(chain (transpose (disjunction zero (chain successor successor))) (disjunction successor equal))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False]])],\n    solution=(chain (transpose (disjunction zero (chain successor successor))) (disjunction successor equal))\n)",
            "task_solution": "(chain (transpose (disjunction zero (chain successor successor))) (disjunction successor equal))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.22864767804276198,
            "num_unique_values": 81,
            "num_values_explored": 169,
            "solution": "(recursive equal (transpose successor) (chain zero (recursive successor successor equal)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [ True, False, False, False, False,  True, False, False, False,\n        False],\n       [ True, False, False, False, False, False,  True, False, False,\n        False],\n       [ True, False, False, False, False, False, False,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (transpose successor) (chain zero (recursive successor successor equal)))\n)",
            "task_solution": "(recursive equal (transpose successor) (chain zero (recursive successor successor equal)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.3262976499972865,
            "num_unique_values": 117,
            "num_values_explored": 242,
            "solution": "(recursive successor (transpose successor) (transpose (chain successor (disjunction (chain successor successor) equal))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (transpose successor) (transpose (chain successor (chain successor successor))))\n)",
            "task_solution": "(recursive successor (transpose successor) (transpose (chain successor (chain successor successor))))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.22776978404726833,
            "num_unique_values": 77,
            "num_values_explored": 165,
            "solution": "(recursive (recursive (chain zero successor) (transpose successor) equal) successor successor)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (recursive (chain zero successor) (transpose successor) equal) successor successor)\n)",
            "task_solution": "(recursive (recursive (chain zero successor) (transpose successor) equal) successor successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.22910500899888575,
            "num_unique_values": 76,
            "num_values_explored": 173,
            "solution": "(recursive (recursive (transpose successor) equal (chain zero successor)) (transpose successor) (chain zero successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (transpose (disjunction successor equal)) (chain zero successor))\n)",
            "task_solution": "(recursive (transpose successor) (transpose (disjunction successor equal)) (chain zero successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.19741396902827546,
            "num_unique_values": 66,
            "num_values_explored": 160,
            "solution": "(disjunction (transpose successor) (chain zero (recursive successor successor (transpose successor))))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(transpose (disjunction successor (chain (recursive successor (transpose successor) successor) zero)))\n)",
            "task_solution": "(transpose (disjunction successor (chain (recursive successor (transpose successor) successor) zero)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.23211002303287387,
            "num_unique_values": 77,
            "num_values_explored": 164,
            "solution": "(recursive (recursive successor (transpose successor) successor) (chain successor successor) successor)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (recursive successor (transpose successor) successor) (chain successor successor) successor)\n)",
            "task_solution": "(recursive (recursive successor (transpose successor) successor) (chain successor successor) successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.2559093949967064,
            "num_unique_values": 81,
            "num_values_explored": 161,
            "solution": "(recursive (chain (disjunction zero (chain successor successor)) (chain successor successor)) zero successor)",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (chain successor (chain successor successor))) zero successor)\n)",
            "task_solution": "(recursive (chain successor (chain successor (chain successor successor))) zero successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.19399375905049965,
            "num_unique_values": 66,
            "num_values_explored": 150,
            "solution": "(disjunction (chain successor successor) (transpose (chain (disjunction zero successor) successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n        False],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [False, False, False,  True, False, False, False,  True, False,\n        False],\n       [False, False, False, False,  True, False, False, False,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(disjunction (chain successor successor) (transpose (chain (disjunction zero successor) successor)))\n)",
            "task_solution": "(disjunction (chain successor successor) (transpose (chain (disjunction zero successor) successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.3419097129954025,
            "num_unique_values": 140,
            "num_values_explored": 265,
            "solution": "(chain successor (chain successor (chain successor (disjunction successor (transpose successor)))))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (chain successor (disjunction successor (transpose successor)))))\n)",
            "task_solution": "(chain successor (chain successor (chain successor (disjunction successor (transpose successor)))))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.28753001702716574,
            "num_unique_values": 106,
            "num_values_explored": 212,
            "solution": "(disjunction equal (chain (disjunction successor (transpose (chain successor successor))) successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True, False,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True, False,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True, False,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(disjunction equal (chain (disjunction successor (transpose (chain successor successor))) successor))\n)",
            "task_solution": "(disjunction equal (chain (disjunction successor (transpose (chain successor successor))) successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.14001586503582075,
            "num_unique_values": 42,
            "num_values_explored": 112,
            "solution": "(recursive (disjunction successor (chain (transpose successor) zero)) zero (transpose successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (disjunction successor (transpose (chain zero successor))) zero (transpose successor))\n)",
            "task_solution": "(recursive (disjunction successor (transpose (chain zero successor))) zero (transpose successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.1834847970167175,
            "num_unique_values": 66,
            "num_values_explored": 145,
            "solution": "(disjunction successor (recursive (transpose successor) (transpose successor) (chain successor successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True, False, False,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False, False,  True, False,  True, False, False,\n        False],\n       [False, False,  True, False, False,  True, False,  True, False,\n        False],\n       [ True, False, False,  True, False, False,  True, False,  True,\n        False],\n       [False,  True, False, False,  True, False, False,  True, False,\n         True],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False]])],\n    solution=(disjunction successor (recursive (transpose successor) (transpose successor) (chain successor successor)))\n)",
            "task_solution": "(disjunction successor (recursive (transpose successor) (transpose successor) (chain successor successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.28508753702044487,
            "num_unique_values": 96,
            "num_values_explored": 216,
            "solution": "(chain (transpose successor) (recursive (chain zero (chain successor successor)) (transpose successor) equal))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive (transpose successor) equal successor) (chain zero (chain successor successor)))\n)",
            "task_solution": "(chain (recursive (transpose successor) equal successor) (chain zero (chain successor successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2822605869732797,
            "num_unique_values": 96,
            "num_values_explored": 201,
            "solution": "(chain (transpose successor) (chain (recursive (chain successor successor) zero successor) successor))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (transpose successor) (chain (recursive (chain successor successor) zero successor) successor))\n)",
            "task_solution": "(chain (transpose successor) (chain (recursive (chain successor successor) zero successor) successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2212244170368649,
            "num_unique_values": 83,
            "num_values_explored": 164,
            "solution": "(recursive (transpose successor) (chain (disjunction zero successor) (chain successor successor)) successor)",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (chain (disjunction zero successor) (chain successor successor)) successor)\n)",
            "task_solution": "(recursive (transpose successor) (chain (disjunction zero successor) (chain successor successor)) successor)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.17653541994513944,
            "num_unique_values": 61,
            "num_values_explored": 136,
            "solution": "(chain successor (recursive (disjunction successor equal) (transpose successor) (chain successor successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True,  True, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True,  True, False, False,\n        False],\n       [ True,  True, False,  True,  True, False,  True,  True, False,\n        False],\n       [False,  True,  True, False,  True,  True, False,  True,  True,\n        False],\n       [ True, False,  True,  True, False,  True,  True, False,  True,\n         True],\n       [ True,  True, False,  True,  True, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive (disjunction successor equal) (transpose successor) (chain successor successor)))\n)",
            "task_solution": "(chain successor (recursive (disjunction successor equal) (transpose successor) (chain successor successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.3133474239730276,
            "num_unique_values": 119,
            "num_values_explored": 227,
            "solution": "(recursive successor (chain (transpose successor) (chain successor (chain successor successor))) successor)",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (chain (transpose successor) (chain successor (chain successor successor))) successor)\n)",
            "task_solution": "(recursive successor (chain (transpose successor) (chain successor (chain successor successor))) successor)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.19911237905034795,
            "num_unique_values": 72,
            "num_values_explored": 147,
            "solution": "(disjunction successor (chain (recursive equal (transpose successor) zero) (chain successor successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True, False,  True,  True, False, False, False,\n        False],\n       [False, False,  True, False, False,  True,  True, False, False,\n        False],\n       [False, False,  True, False, False, False,  True,  True, False,\n        False],\n       [False, False,  True, False, False, False, False,  True,  True,\n        False],\n       [False, False,  True, False, False, False, False, False,  True,\n         True],\n       [False, False,  True, False, False, False, False, False, False,\n         True],\n       [False, False,  True, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction equal (chain (recursive equal (transpose successor) zero) successor)) successor)\n)",
            "task_solution": "(chain (disjunction equal (chain (recursive equal (transpose successor) zero) successor)) successor)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2102630260051228,
            "num_unique_values": 82,
            "num_values_explored": 159,
            "solution": "(recursive (transpose zero) (transpose (recursive successor successor equal)) (recursive equal successor (chain successor successor)))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (transpose zero) (transpose successor) (recursive equal successor (chain successor successor)))\n)",
            "task_solution": "(recursive (transpose zero) (transpose successor) (recursive equal successor (chain successor successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2802414189791307,
            "num_unique_values": 105,
            "num_values_explored": 206,
            "solution": "(chain (disjunction successor equal) (disjunction successor (recursive zero zero (transpose successor))))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction successor equal) (disjunction successor (recursive zero zero (transpose successor))))\n)",
            "task_solution": "(chain (disjunction successor equal) (disjunction successor (recursive zero zero (transpose successor))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2169740640092641,
            "num_unique_values": 76,
            "num_values_explored": 161,
            "solution": "(recursive equal (chain (recursive successor (chain successor successor) successor) successor) successor)",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (chain (recursive successor (chain successor successor) successor) successor) successor)\n)",
            "task_solution": "(recursive equal (chain (recursive successor (chain successor successor) successor) successor) successor)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2837926759966649,
            "num_unique_values": 101,
            "num_values_explored": 226,
            "solution": "(chain successor (chain successor (transpose (chain successor (disjunction successor (transpose successor))))))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (transpose (chain successor (disjunction successor (transpose successor))))))\n)",
            "task_solution": "(chain successor (chain successor (transpose (chain successor (disjunction successor (transpose successor))))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2378678180393763,
            "num_unique_values": 81,
            "num_values_explored": 167,
            "solution": "(recursive equal (recursive (disjunction equal (chain successor successor)) (transpose successor) zero) (transpose (chain successor successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n         True]])],\n    solution=(recursive equal (recursive equal (transpose successor) zero) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive equal (recursive equal (transpose successor) zero) (transpose (chain successor successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.19380908302264288,
            "num_unique_values": 68,
            "num_values_explored": 145,
            "solution": "(disjunction (recursive successor (transpose successor) successor) (recursive successor (transpose successor) equal))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(disjunction (recursive successor (transpose successor) successor) (recursive successor (transpose successor) equal))\n)",
            "task_solution": "(disjunction (recursive successor (transpose successor) successor) (recursive successor (transpose successor) equal))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.19394325296161696,
            "num_unique_values": 66,
            "num_values_explored": 156,
            "solution": "(disjunction (transpose successor) (recursive successor equal (chain (disjunction zero successor) successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (recursive successor equal (chain (disjunction zero successor) successor)))\n)",
            "task_solution": "(disjunction (transpose successor) (recursive successor equal (chain (disjunction zero successor) successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2504770570085384,
            "num_unique_values": 86,
            "num_values_explored": 179,
            "solution": "(transpose (disjunction equal (chain successor (disjunction equal (recursive successor equal successor)))))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True]])],\n    solution=(transpose (disjunction successor (disjunction equal (recursive (chain successor successor) equal successor))))\n)",
            "task_solution": "(transpose (disjunction successor (disjunction equal (recursive (chain successor successor) equal successor))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.22301096498267725,
            "num_unique_values": 84,
            "num_values_explored": 166,
            "solution": "(recursive successor (chain (transpose (chain successor successor)) (chain successor successor)) successor)",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (chain (transpose (chain successor successor)) (chain successor successor)) successor)\n)",
            "task_solution": "(recursive successor (chain (transpose (chain successor successor)) (chain successor successor)) successor)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.43377453001448885,
            "num_unique_values": 176,
            "num_values_explored": 333,
            "solution": "(chain successor (recursive (chain successor (chain successor (chain successor (chain successor successor)))) successor (transpose (chain successor (chain successor successor)))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (chain successor (chain successor (chain successor successor)))))\n)",
            "task_solution": "(chain successor (chain successor (chain successor (chain successor (chain successor successor)))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.3049795079859905,
            "num_unique_values": 116,
            "num_values_explored": 230,
            "solution": "(recursive equal (disjunction successor (transpose successor)) (chain successor (chain successor successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n         True]])],\n    solution=(recursive equal (disjunction successor (transpose successor)) (chain successor (chain successor successor)))\n)",
            "task_solution": "(recursive equal (disjunction successor (transpose successor)) (chain successor (chain successor successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2262838039896451,
            "num_unique_values": 85,
            "num_values_explored": 162,
            "solution": "(recursive successor (chain (chain zero (disjunction zero successor)) successor) (transpose successor))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (chain zero successor) (transpose (chain successor (disjunction successor equal))))\n)",
            "task_solution": "(recursive successor (chain zero successor) (transpose (chain successor (disjunction successor equal))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2345823660143651,
            "num_unique_values": 77,
            "num_values_explored": 165,
            "solution": "(recursive (chain successor successor) (disjunction zero successor) (transpose (chain successor successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False, False,  True, False, False,\n         True],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor successor) (disjunction zero successor) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (chain successor successor) (disjunction zero successor) (transpose (chain successor successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 67.30767755699344,
            "num_unique_values": 3505,
            "num_values_explored": 50013,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive (chain successor successor) successor (chain successor successor)) equal)\n)",
            "task_solution": "(recursive equal (recursive (chain successor successor) successor (chain successor successor)) equal)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.22647794301155955,
            "num_unique_values": 78,
            "num_values_explored": 167,
            "solution": "(recursive (transpose zero) (recursive successor successor (chain successor successor)) (transpose successor))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (transpose zero) (recursive successor successor (chain successor successor)) (transpose successor))\n)",
            "task_solution": "(recursive (transpose zero) (recursive successor successor (chain successor successor)) (transpose successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.22846063098404557,
            "num_unique_values": 78,
            "num_values_explored": 167,
            "solution": "(recursive (disjunction equal (chain successor successor)) zero (transpose (chain successor successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (disjunction equal (chain successor successor)) zero (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (disjunction equal (chain successor successor)) zero (transpose (chain successor successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.3324103080085479,
            "num_unique_values": 106,
            "num_values_explored": 230,
            "solution": "(disjunction zero (chain (chain successor (recursive equal (transpose successor) zero)) successor))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n        False],\n       [False,  True, False, False, False, False,  True, False, False,\n        False],\n       [False,  True, False, False, False, False, False,  True, False,\n        False],\n       [False,  True, False, False, False, False, False, False,  True,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n         True],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction zero (chain successor (chain (recursive equal (transpose successor) zero) successor)))\n)",
            "task_solution": "(disjunction zero (chain successor (chain (recursive equal (transpose successor) zero) successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.3223841160070151,
            "num_unique_values": 116,
            "num_values_explored": 226,
            "solution": "(recursive (chain (transpose (recursive equal equal (chain (disjunction successor (transpose successor)) (recursive zero zero (transpose successor))))) successor) successor equal)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (disjunction successor (transpose (chain zero (chain successor successor)))) equal)\n)",
            "task_solution": "(recursive successor (disjunction successor (transpose (chain zero (chain successor successor)))) equal)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.3159363929880783,
            "num_unique_values": 109,
            "num_values_explored": 221,
            "solution": "(disjunction successor (recursive (disjunction (chain zero successor) (transpose (chain successor successor))) equal successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False]])],\n    solution=(disjunction zero (disjunction successor (recursive (transpose (chain successor successor)) equal successor)))\n)",
            "task_solution": "(disjunction zero (disjunction successor (recursive (transpose (chain successor successor)) equal successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.4141578489798121,
            "num_unique_values": 162,
            "num_values_explored": 293,
            "solution": "(recursive equal zero (transpose (chain successor (chain successor (chain successor successor)))))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False,  True, False, False, False,  True,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal zero (transpose (chain successor (chain successor (chain successor successor)))))\n)",
            "task_solution": "(recursive equal zero (transpose (chain successor (chain successor (chain successor successor)))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.3022277270210907,
            "num_unique_values": 80,
            "num_values_explored": 177,
            "solution": "(recursive (recursive (chain successor successor) (disjunction zero successor) (transpose successor)) zero successor)",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor successor) (disjunction zero successor) (disjunction successor (transpose successor)))\n)",
            "task_solution": "(recursive (chain successor successor) (disjunction zero successor) (disjunction successor (transpose successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.27153545699547976,
            "num_unique_values": 86,
            "num_values_explored": 194,
            "solution": "(transpose (chain (recursive (recursive successor (transpose successor) equal) successor successor) successor))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True]])],\n    solution=(transpose (chain (recursive (recursive successor (transpose successor) equal) successor successor) successor))\n)",
            "task_solution": "(transpose (chain (recursive (recursive successor (transpose successor) equal) successor successor) successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.17762236099224538,
            "num_unique_values": 64,
            "num_values_explored": 139,
            "solution": "(chain (recursive successor successor (recursive equal successor equal)) (disjunction successor (transpose successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (transpose successor)) successor (recursive (transpose successor) successor equal))\n)",
            "task_solution": "(recursive (chain successor (transpose successor)) successor (recursive (transpose successor) successor equal))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.23669450799934566,
            "num_unique_values": 76,
            "num_values_explored": 172,
            "solution": "(recursive successor (chain (recursive successor equal (chain successor successor)) zero) equal)",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False,  True, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False,  True, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (chain (recursive successor equal (chain successor successor)) zero) equal)\n)",
            "task_solution": "(recursive successor (chain (recursive successor equal (chain successor successor)) zero) equal)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.22515241603832692,
            "num_unique_values": 78,
            "num_values_explored": 165,
            "solution": "(recursive (recursive equal (transpose successor) (recursive successor equal successor)) zero (transpose successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (recursive equal zero (transpose successor)) equal (recursive successor equal successor))\n)",
            "task_solution": "(recursive (recursive equal zero (transpose successor)) equal (recursive successor equal successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.1420293310075067,
            "num_unique_values": 36,
            "num_values_explored": 107,
            "solution": "(recursive (disjunction (chain successor successor) (transpose successor)) (chain successor successor) equal)",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (disjunction (transpose successor) (chain successor successor)) (chain successor successor) equal)\n)",
            "task_solution": "(recursive (disjunction (transpose successor) (chain successor successor)) (chain successor successor) equal)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.19327130704186857,
            "num_unique_values": 67,
            "num_values_explored": 145,
            "solution": "(disjunction successor (chain (transpose (chain successor successor)) (recursive successor successor equal)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(disjunction successor (chain (transpose (chain successor successor)) (recursive successor successor equal)))\n)",
            "task_solution": "(disjunction successor (chain (transpose (chain successor successor)) (recursive successor successor equal)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.32926767400931567,
            "num_unique_values": 127,
            "num_values_explored": 247,
            "solution": "(transpose (disjunction successor (transpose (recursive zero (transpose successor) (transpose (chain successor successor))))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction successor (recursive zero (transpose successor) (transpose (chain successor successor)))))\n)",
            "task_solution": "(transpose (disjunction successor (recursive zero (transpose successor) (transpose (chain successor successor)))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.17389833100605756,
            "num_unique_values": 57,
            "num_values_explored": 135,
            "solution": "(chain (recursive successor (transpose successor) (disjunction zero successor)) (disjunction zero successor))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(chain (recursive successor (transpose successor) (disjunction zero successor)) (disjunction zero successor))\n)",
            "task_solution": "(chain (recursive successor (transpose successor) (disjunction zero successor)) (disjunction zero successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.17915041302330792,
            "num_unique_values": 61,
            "num_values_explored": 138,
            "solution": "(chain successor (recursive (transpose successor) (transpose successor) (recursive successor successor equal)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive (transpose successor) (transpose successor) (recursive successor successor equal)))\n)",
            "task_solution": "(chain successor (recursive (transpose successor) (transpose successor) (recursive successor successor equal)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.25612835999345407,
            "num_unique_values": 98,
            "num_values_explored": 192,
            "solution": "(chain (recursive (recursive (transpose successor) (transpose successor) successor) successor (chain (transpose successor) successor)) (disjunction equal (chain successor successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (recursive successor (transpose successor) successor) successor (chain (transpose successor) successor))\n)",
            "task_solution": "(recursive (recursive successor (transpose successor) successor) successor (chain (transpose successor) successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.3081610749941319,
            "num_unique_values": 109,
            "num_values_explored": 223,
            "solution": "(disjunction equal (chain (disjunction successor (recursive equal (transpose successor) successor)) successor))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True, False,\n        False],\n       [False,  True, False,  True, False,  True,  True,  True,  True,\n        False],\n       [False, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n         True]])],\n    solution=(disjunction equal (chain (disjunction successor (recursive equal (transpose successor) successor)) successor))\n)",
            "task_solution": "(disjunction equal (chain (disjunction successor (recursive equal (transpose successor) successor)) successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2956714700558223,
            "num_unique_values": 119,
            "num_values_explored": 219,
            "solution": "(recursive (transpose successor) (transpose successor) (transpose (recursive (chain successor successor) (chain successor (transpose (chain successor successor))) successor)))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (transpose successor) (transpose successor) (disjunction successor (transpose (chain successor successor))))\n)",
            "task_solution": "(recursive (transpose successor) (transpose successor) (disjunction successor (transpose (chain successor successor))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.20925817103125155,
            "num_unique_values": 77,
            "num_values_explored": 156,
            "solution": "(recursive equal successor (recursive successor (disjunction (chain successor successor) equal) successor))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (recursive successor (disjunction equal (chain successor successor)) successor))\n)",
            "task_solution": "(recursive equal successor (recursive successor (disjunction equal (chain successor successor)) successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.22068197204498574,
            "num_unique_values": 76,
            "num_values_explored": 165,
            "solution": "(recursive (chain successor (chain successor successor)) (transpose (disjunction successor equal)) successor)",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False]])],\n    solution=(recursive (chain successor (chain successor successor)) (transpose (disjunction successor equal)) successor)\n)",
            "task_solution": "(recursive (chain successor (chain successor successor)) (transpose (disjunction successor equal)) successor)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2839867059956305,
            "num_unique_values": 106,
            "num_values_explored": 216,
            "solution": "(disjunction zero (chain (recursive equal (transpose successor) (chain zero successor)) (chain successor successor)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction (chain successor successor) (recursive zero zero (transpose (chain successor successor))))\n)",
            "task_solution": "(disjunction (chain successor successor) (recursive zero zero (transpose (chain successor successor))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.22874284797580913,
            "num_unique_values": 81,
            "num_values_explored": 167,
            "solution": "(recursive successor (transpose (chain successor successor)) (chain successor (chain successor successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [ True, False, False, False, False,  True, False, False, False,\n        False],\n       [False,  True, False, False, False, False,  True, False, False,\n        False],\n       [False, False,  True, False, False, False, False,  True, False,\n        False],\n       [False, False, False,  True, False, False, False, False,  True,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n         True],\n       [ True, False, False, False, False,  True, False, False, False,\n        False]])],\n    solution=(recursive successor (transpose successor) (chain successor (chain successor (chain successor successor))))\n)",
            "task_solution": "(recursive successor (transpose successor) (chain successor (chain successor (chain successor successor))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.27795747097115964,
            "num_unique_values": 113,
            "num_values_explored": 202,
            "solution": "(disjunction equal (recursive successor successor (disjunction equal (recursive successor successor (transpose successor)))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (recursive equal (recursive successor successor (transpose successor)) successor))\n)",
            "task_solution": "(recursive equal successor (recursive equal (recursive successor successor (transpose successor)) successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2540275339852087,
            "num_unique_values": 80,
            "num_values_explored": 173,
            "solution": "(recursive (transpose (chain (disjunction zero successor) successor)) (chain successor successor) equal)",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain (disjunction zero successor) successor)) (chain successor successor) equal)\n)",
            "task_solution": "(recursive (transpose (chain (disjunction zero successor) successor)) (chain successor successor) equal)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.20954953000182286,
            "num_unique_values": 67,
            "num_values_explored": 149,
            "solution": "(disjunction successor (chain (recursive successor (transpose successor) (disjunction zero successor)) successor))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True, False,  True,  True,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True,  True,  True, False,\n        False],\n       [False,  True,  True, False,  True, False,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(chain (disjunction equal (recursive successor (transpose successor) (disjunction zero successor))) successor)\n)",
            "task_solution": "(chain (disjunction equal (recursive successor (transpose successor) (disjunction zero successor))) successor)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2695247759693302,
            "num_unique_values": 98,
            "num_values_explored": 196,
            "solution": "(chain (chain (disjunction successor equal) (disjunction successor equal)) (chain successor successor))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (chain (disjunction successor equal) (disjunction successor equal))))\n)",
            "task_solution": "(chain successor (chain successor (chain (disjunction successor equal) (disjunction successor equal))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2858113399706781,
            "num_unique_values": 98,
            "num_values_explored": 208,
            "solution": "(chain (disjunction equal (chain (recursive zero zero (transpose successor)) successor)) successor)",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction equal (chain (recursive zero zero (transpose successor)) successor)) successor)\n)",
            "task_solution": "(chain (disjunction equal (chain (recursive zero zero (transpose successor)) successor)) successor)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.28917763399658725,
            "num_unique_values": 97,
            "num_values_explored": 203,
            "solution": "(chain successor (disjunction (transpose successor) (disjunction equal (recursive successor equal successor))))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (disjunction equal (disjunction (transpose successor) (recursive successor equal successor))))\n)",
            "task_solution": "(chain successor (disjunction equal (disjunction (transpose successor) (recursive successor equal successor))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.23576613405020908,
            "num_unique_values": 77,
            "num_values_explored": 174,
            "solution": "(recursive (chain successor successor) (recursive successor (transpose (disjunction zero successor)) successor) (disjunction zero successor))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False]])],\n    solution=(recursive (chain successor successor) (transpose (disjunction zero successor)) (disjunction zero successor))\n)",
            "task_solution": "(recursive (chain successor successor) (transpose (disjunction zero successor)) (disjunction zero successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.25982653599930927,
            "num_unique_values": 98,
            "num_values_explored": 201,
            "solution": "(chain (transpose (chain successor successor)) (chain (disjunction successor equal) (disjunction successor equal)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True]])],\n    solution=(chain (transpose (chain successor successor)) (chain (disjunction successor equal) (disjunction successor equal)))\n)",
            "task_solution": "(chain (transpose (chain successor successor)) (chain (disjunction successor equal) (disjunction successor equal)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.19444852299056947,
            "num_unique_values": 68,
            "num_values_explored": 147,
            "solution": "(disjunction (chain successor successor) (recursive equal (disjunction successor equal) (chain successor successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(disjunction (chain successor successor) (recursive equal (disjunction successor equal) (chain successor successor)))\n)",
            "task_solution": "(disjunction (chain successor successor) (recursive equal (disjunction successor equal) (chain successor successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.24362042802385986,
            "num_unique_values": 77,
            "num_values_explored": 164,
            "solution": "(recursive (chain (transpose (chain successor successor)) (disjunction zero successor)) successor (transpose successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (chain (transpose (chain successor successor)) (disjunction zero successor)) successor (transpose successor))\n)",
            "task_solution": "(recursive (chain (transpose (chain successor successor)) (disjunction zero successor)) successor (transpose successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.2904894140083343,
            "num_unique_values": 97,
            "num_values_explored": 207,
            "solution": "(chain (recursive equal (disjunction successor equal) (chain (disjunction zero successor) successor)) successor)",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(chain (recursive equal (disjunction successor equal) (chain (disjunction zero successor) successor)) successor)\n)",
            "task_solution": "(chain (recursive equal (disjunction successor equal) (chain (disjunction zero successor) successor)) successor)",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.3305648769601248,
            "num_unique_values": 116,
            "num_values_explored": 216,
            "solution": "(recursive equal (transpose (disjunction (chain successor successor) (chain successor (recursive zero (transpose successor) (transpose successor))))) (disjunction successor equal))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True]])],\n    solution=(recursive equal (transpose (disjunction successor (recursive zero (transpose successor) (transpose successor)))) successor)\n)",
            "task_solution": "(recursive equal (transpose (disjunction successor (recursive zero (transpose successor) (transpose successor)))) successor)",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.307305668015033,
            "num_unique_values": 96,
            "num_values_explored": 204,
            "solution": "(chain (transpose successor) (disjunction zero (disjunction successor (transpose (recursive successor successor equal)))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True]])],\n    solution=(transpose (chain (disjunction zero (disjunction (transpose successor) (recursive successor successor equal))) successor))\n)",
            "task_solution": "(transpose (chain (disjunction zero (disjunction (transpose successor) (recursive successor successor equal))) successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.23354472900973633,
            "num_unique_values": 82,
            "num_values_explored": 160,
            "solution": "(recursive (transpose successor) (disjunction successor (transpose (disjunction equal (chain (disjunction zero successor) successor)))) (transpose successor))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (transpose successor) (recursive (transpose (chain successor successor)) successor equal) (transpose successor))\n)",
            "task_solution": "(recursive (transpose successor) (recursive (transpose (chain successor successor)) successor equal) (transpose successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.3197685760096647,
            "num_unique_values": 124,
            "num_values_explored": 224,
            "solution": "(recursive (transpose (disjunction equal (recursive successor equal (chain successor successor)))) zero successor)",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True,  True,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True,  True,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(recursive (transpose (disjunction equal (recursive successor equal (chain successor successor)))) zero successor)\n)",
            "task_solution": "(recursive (transpose (disjunction equal (recursive successor equal (chain successor successor)))) zero successor)",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.394772675994318,
            "num_unique_values": 157,
            "num_values_explored": 285,
            "solution": "(recursive equal (recursive (chain successor (transpose successor)) (recursive successor (chain successor (chain successor successor)) successor) successor) successor)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive successor (recursive equal (chain successor successor) successor) successor) successor)\n)",
            "task_solution": "(recursive equal (recursive successor (recursive equal (chain successor successor) successor) successor) successor)",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.2134210499934852,
            "num_unique_values": 66,
            "num_values_explored": 152,
            "solution": "(disjunction zero (chain (disjunction (transpose successor) successor) (recursive zero zero (transpose successor))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction zero (disjunction successor (transpose successor))) (recursive zero zero (transpose successor)))\n)",
            "task_solution": "(chain (disjunction zero (disjunction successor (transpose successor))) (recursive zero zero (transpose successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.26565778598887846,
            "num_unique_values": 98,
            "num_values_explored": 195,
            "solution": "(chain successor (recursive (chain successor successor) (transpose (chain successor successor)) (transpose successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive (chain successor successor) (transpose (chain successor successor)) (transpose successor)))\n)",
            "task_solution": "(chain successor (recursive (chain successor successor) (transpose (chain successor successor)) (transpose successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.21728324296418577,
            "num_unique_values": 79,
            "num_values_explored": 159,
            "solution": "(recursive equal (disjunction equal (chain successor successor)) (chain (chain successor successor) successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True,  True, False, False,\n        False],\n       [ True,  True, False,  True,  True, False,  True,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n         True]])],\n    solution=(recursive equal (disjunction equal (chain successor successor)) (chain successor (chain successor successor)))\n)",
            "task_solution": "(recursive equal (disjunction equal (chain successor successor)) (chain successor (chain successor successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.2726465640007518,
            "num_unique_values": 97,
            "num_values_explored": 205,
            "solution": "(chain (transpose (chain successor successor)) (chain zero (disjunction zero (chain successor successor))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (transpose (chain successor successor)) (chain zero (disjunction zero (chain successor successor))))\n)",
            "task_solution": "(chain (transpose (chain successor successor)) (chain zero (disjunction zero (chain successor successor))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.20265932299662381,
            "num_unique_values": 68,
            "num_values_explored": 149,
            "solution": "(disjunction zero (chain (transpose (disjunction (chain successor successor) equal)) (chain successor successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction zero (chain (transpose (disjunction equal (chain successor successor))) (chain successor successor)))\n)",
            "task_solution": "(disjunction zero (chain (transpose (disjunction equal (chain successor successor))) (chain successor successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.19547726697055623,
            "num_unique_values": 66,
            "num_values_explored": 149,
            "solution": "(disjunction (transpose (chain successor successor)) (chain successor (recursive successor (transpose successor) successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(disjunction (transpose (chain successor successor)) (chain successor (recursive successor (transpose successor) successor)))\n)",
            "task_solution": "(disjunction (transpose (chain successor successor)) (chain successor (recursive successor (transpose successor) successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.2744626689818688,
            "num_unique_values": 97,
            "num_values_explored": 200,
            "solution": "(chain (recursive (transpose (chain successor successor)) (transpose successor) zero) (disjunction successor equal))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True,  True, False, False, False,\n        False],\n       [ True,  True, False, False, False,  True,  True, False, False,\n        False],\n       [ True,  True, False, False, False, False,  True,  True, False,\n        False],\n       [ True,  True, False, False, False, False, False,  True,  True,\n        False]])],\n    solution=(chain (recursive (transpose (chain successor successor)) (transpose successor) zero) (disjunction successor equal))\n)",
            "task_solution": "(chain (recursive (transpose (chain successor successor)) (transpose successor) zero) (disjunction successor equal))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.3101499740150757,
            "num_unique_values": 117,
            "num_values_explored": 226,
            "solution": "(recursive (transpose (chain (disjunction zero successor) successor)) (recursive successor zero (transpose successor)) (transpose successor))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain (disjunction zero successor) successor)) (disjunction zero successor) (transpose successor))\n)",
            "task_solution": "(recursive (transpose (chain (disjunction zero successor) successor)) (disjunction zero successor) (transpose successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.23712074296781793,
            "num_unique_values": 76,
            "num_values_explored": 170,
            "solution": "(recursive equal (recursive equal zero (transpose successor)) (chain (disjunction zero successor) successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(recursive equal (recursive equal zero (transpose successor)) (chain (disjunction zero successor) successor))\n)",
            "task_solution": "(recursive equal (recursive equal zero (transpose successor)) (chain (disjunction zero successor) successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.23532205197261646,
            "num_unique_values": 79,
            "num_values_explored": 165,
            "solution": "(recursive equal (recursive equal equal successor) (transpose (recursive (disjunction zero (chain successor successor)) successor (transpose successor))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive equal (recursive equal equal successor) (transpose (disjunction zero (chain successor successor))))\n)",
            "task_solution": "(recursive equal (recursive equal equal successor) (transpose (disjunction zero (chain successor successor))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.2368140069884248,
            "num_unique_values": 77,
            "num_values_explored": 166,
            "solution": "(recursive (chain successor (disjunction successor (transpose (chain successor successor)))) (transpose successor) zero)",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False, False,  True, False, False, False,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n        False],\n       [ True, False, False, False,  True, False, False,  True, False,\n        False],\n       [ True, False, False, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False, False, False, False,  True, False, False,\n         True],\n       [ True, False, False, False, False, False, False,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (disjunction successor (transpose (chain successor successor)))) (transpose successor) zero)\n)",
            "task_solution": "(recursive (chain successor (disjunction successor (transpose (chain successor successor)))) (transpose successor) zero)",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.21591882803477347,
            "num_unique_values": 80,
            "num_values_explored": 157,
            "solution": "(recursive (disjunction successor (transpose successor)) (chain successor successor) (disjunction successor (transpose successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (disjunction successor (transpose successor)) (chain successor successor) (disjunction successor (transpose successor)))\n)",
            "task_solution": "(recursive (disjunction successor (transpose successor)) (chain successor successor) (disjunction successor (transpose successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.21879183599958196,
            "num_unique_values": 83,
            "num_values_explored": 158,
            "solution": "(recursive (chain (transpose successor) (chain successor successor)) (transpose (chain successor successor)) successor)",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n        False],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False]])],\n    solution=(recursive (chain (transpose successor) (chain successor successor)) (transpose (chain successor successor)) successor)\n)",
            "task_solution": "(recursive (chain (transpose successor) (chain successor successor)) (transpose (chain successor successor)) successor)",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.23221826099324971,
            "num_unique_values": 82,
            "num_values_explored": 162,
            "solution": "(recursive (recursive (disjunction successor equal) (chain successor successor) successor) equal (chain (transpose successor) (chain successor successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(disjunction zero (recursive (recursive successor (chain successor successor) successor) (transpose successor) equal))\n)",
            "task_solution": "(disjunction zero (recursive (recursive successor (chain successor successor) successor) (transpose successor) equal))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.26052243501180783,
            "num_unique_values": 96,
            "num_values_explored": 202,
            "solution": "(chain (disjunction equal (chain successor successor)) (disjunction successor (transpose (chain successor successor))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False,  True, False, False,\n        False],\n       [False, False,  True, False,  True,  True, False,  True, False,\n        False],\n       [False, False, False,  True, False,  True,  True, False,  True,\n        False],\n       [False, False, False, False,  True, False,  True,  True, False,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(chain (disjunction equal (chain successor successor)) (disjunction successor (transpose (chain successor successor))))\n)",
            "task_solution": "(chain (disjunction equal (chain successor successor)) (disjunction successor (transpose (chain successor successor))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.2019630499999039,
            "num_unique_values": 67,
            "num_values_explored": 153,
            "solution": "(disjunction zero (chain (transpose (chain successor successor)) (disjunction zero (chain successor successor))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction zero (chain (transpose (chain successor successor)) (disjunction zero (chain successor successor))))\n)",
            "task_solution": "(disjunction zero (chain (transpose (chain successor successor)) (disjunction zero (chain successor successor))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.17163603997323662,
            "num_unique_values": 62,
            "num_values_explored": 131,
            "solution": "(chain (transpose (chain successor successor)) (recursive (disjunction (chain successor successor) equal) (transpose successor) successor))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(chain (transpose (chain successor successor)) (chain successor (recursive successor (transpose successor) successor)))\n)",
            "task_solution": "(chain (transpose (chain successor successor)) (chain successor (recursive successor (transpose successor) successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.23053040803642944,
            "num_unique_values": 76,
            "num_values_explored": 164,
            "solution": "(recursive (transpose successor) (disjunction zero successor) (chain (transpose (chain successor successor)) successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (disjunction zero successor) (chain (transpose (chain successor successor)) successor))\n)",
            "task_solution": "(recursive (transpose successor) (disjunction zero successor) (chain (transpose (chain successor successor)) successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.27987143700011075,
            "num_unique_values": 107,
            "num_values_explored": 209,
            "solution": "(disjunction zero (chain (recursive equal (transpose successor) (chain successor (recursive (transpose successor) successor (chain successor successor)))) successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(disjunction zero (recursive successor (transpose successor) (recursive equal successor (chain successor successor))))\n)",
            "task_solution": "(disjunction zero (recursive successor (transpose successor) (recursive equal successor (chain successor successor))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.23190656502265483,
            "num_unique_values": 76,
            "num_values_explored": 170,
            "solution": "(recursive (recursive (transpose successor) (transpose successor) zero) successor (transpose (chain successor successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True,  True,  True, False,  True,\n        False],\n       [ True, False,  True,  True,  True, False,  True, False,  True,\n         True],\n       [ True,  True,  True, False,  True, False,  True,  True,  True,\n        False],\n       [ True, False,  True, False,  True,  True,  True, False,  True,\n        False],\n       [ True, False,  True,  True,  True, False,  True, False,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n        False],\n       [ True, False,  True, False,  True,  True,  True, False,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n         True],\n       [ True, False,  True, False, False, False, False,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (recursive (transpose successor) (transpose successor) zero) successor (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (recursive (transpose successor) (transpose successor) zero) successor (transpose (chain successor successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.21643096499610692,
            "num_unique_values": 83,
            "num_values_explored": 156,
            "solution": "(recursive successor successor (recursive (transpose successor) (chain successor successor) (disjunction successor equal)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (recursive (transpose successor) (chain successor successor) (disjunction successor equal)))\n)",
            "task_solution": "(recursive successor successor (recursive (transpose successor) (chain successor successor) (disjunction successor equal)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.27742442197632045,
            "num_unique_values": 107,
            "num_values_explored": 204,
            "solution": "(disjunction equal (transpose (recursive (transpose successor) (disjunction equal (recursive successor (chain successor successor) successor)) successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (recursive equal (recursive successor (chain successor successor) successor) successor))\n)",
            "task_solution": "(recursive equal successor (recursive equal (recursive successor (chain successor successor) successor) successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.2013210940058343,
            "num_unique_values": 71,
            "num_values_explored": 152,
            "solution": "(disjunction (recursive successor (transpose successor) successor) (chain successor (chain (recursive successor equal successor) zero)))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (recursive successor (transpose successor) successor) (chain successor successor) (chain zero successor))\n)",
            "task_solution": "(recursive (recursive successor (transpose successor) successor) (chain successor successor) (chain zero successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.33003323402954265,
            "num_unique_values": 117,
            "num_values_explored": 224,
            "solution": "(recursive equal (transpose successor) (recursive (chain successor (chain successor successor)) equal successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n         True]])],\n    solution=(recursive equal (transpose successor) (recursive (chain successor (chain successor successor)) equal successor))\n)",
            "task_solution": "(recursive equal (transpose successor) (recursive (chain successor (chain successor successor)) equal successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.30929666198790073,
            "num_unique_values": 116,
            "num_values_explored": 213,
            "solution": "(recursive (transpose successor) (recursive successor (transpose successor) (transpose (chain successor successor))) successor)",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (recursive successor (transpose successor) (transpose (chain successor successor))) successor)\n)",
            "task_solution": "(recursive (transpose successor) (recursive successor (transpose successor) (transpose (chain successor successor))) successor)",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.24219728104071692,
            "num_unique_values": 80,
            "num_values_explored": 167,
            "solution": "(recursive equal (chain successor successor) (recursive successor (disjunction zero successor) (transpose successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True, False,  True, False,  True,  True,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (chain successor successor) (recursive successor (disjunction zero successor) (transpose successor)))\n)",
            "task_solution": "(recursive equal (chain successor successor) (recursive successor (disjunction zero successor) (transpose successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.3544872679631226,
            "num_unique_values": 123,
            "num_values_explored": 243,
            "solution": "(recursive (chain successor (chain (transpose (chain successor successor)) successor)) equal (recursive equal successor (chain successor successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (chain successor (chain (recursive (transpose (chain successor successor)) equal successor) successor)))\n)",
            "task_solution": "(transpose (chain successor (chain (recursive (transpose (chain successor successor)) equal successor) successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.26988285197876394,
            "num_unique_values": 96,
            "num_values_explored": 196,
            "solution": "(chain successor (recursive (transpose successor) (recursive zero (transpose successor) (transpose successor)) successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive (transpose successor) (recursive zero (transpose successor) (transpose successor)) successor))\n)",
            "task_solution": "(chain successor (recursive (transpose successor) (recursive zero (transpose successor) (transpose successor)) successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.2553588750306517,
            "num_unique_values": 96,
            "num_values_explored": 196,
            "solution": "(chain (recursive zero zero (recursive successor (transpose successor) successor)) (disjunction successor equal))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (recursive zero zero (recursive successor (transpose successor) successor)) (disjunction successor equal))\n)",
            "task_solution": "(chain (recursive zero zero (recursive successor (transpose successor) successor)) (disjunction successor equal))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.14999507303582504,
            "num_unique_values": 48,
            "num_values_explored": 124,
            "solution": "(transpose (recursive (disjunction successor equal) (transpose successor) (chain (disjunction zero successor) successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True, False,  True,  True, False,  True,  True, False,\n         True],\n       [False,  True,  True, False,  True,  True, False,  True,  True,\n        False],\n       [False, False,  True,  True, False,  True,  True, False,  True,\n         True],\n       [False, False, False,  True,  True, False,  True,  True, False,\n         True],\n       [False, False, False, False,  True,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True, False,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(recursive (transpose (disjunction successor equal)) (chain (disjunction zero successor) successor) (transpose successor))\n)",
            "task_solution": "(recursive (transpose (disjunction successor equal)) (chain (disjunction zero successor) successor) (transpose successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.412983468035236,
            "num_unique_values": 166,
            "num_values_explored": 318,
            "solution": "(transpose (disjunction successor (recursive zero zero (transpose (chain successor (chain successor successor))))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(transpose (disjunction successor (recursive zero zero (transpose (chain successor (chain successor successor))))))\n)",
            "task_solution": "(transpose (disjunction successor (recursive zero zero (transpose (chain successor (chain successor successor))))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.3091726429993287,
            "num_unique_values": 117,
            "num_values_explored": 235,
            "solution": "(recursive equal (chain successor successor) (recursive equal zero (transpose (chain successor successor))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [ True, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (chain successor successor) (recursive equal zero (transpose (chain successor successor))))\n)",
            "task_solution": "(recursive equal (chain successor successor) (recursive equal zero (transpose (chain successor successor))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.34870864800177515,
            "num_unique_values": 126,
            "num_values_explored": 249,
            "solution": "(transpose (disjunction zero (chain (recursive equal (transpose successor) (chain zero successor)) (chain successor successor))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(transpose (disjunction (chain successor successor) (recursive zero zero (transpose (chain successor successor)))))\n)",
            "task_solution": "(transpose (disjunction (chain successor successor) (recursive zero zero (transpose (chain successor successor)))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.31283941597212106,
            "num_unique_values": 122,
            "num_values_explored": 216,
            "solution": "(recursive (recursive equal (chain successor (chain successor successor)) successor) (transpose successor) (transpose (disjunction equal (chain zero successor))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (recursive equal (chain successor (chain successor successor)) successor) (transpose successor) equal)\n)",
            "task_solution": "(recursive (recursive equal (chain successor (chain successor successor)) successor) (transpose successor) equal)",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.1743958320003003,
            "num_unique_values": 62,
            "num_values_explored": 134,
            "solution": "(chain (recursive (chain successor successor) (transpose successor) successor) (transpose (disjunction zero successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False]])],\n    solution=(recursive (chain successor (chain successor (transpose successor))) (transpose successor) (disjunction zero successor))\n)",
            "task_solution": "(recursive (chain successor (chain successor (transpose successor))) (transpose successor) (disjunction zero successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.37785503204213455,
            "num_unique_values": 139,
            "num_values_explored": 302,
            "solution": "(chain successor (chain successor (chain successor (chain successor (disjunction (transpose successor) successor)))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (chain successor (chain successor (disjunction successor (transpose successor))))))\n)",
            "task_solution": "(chain successor (chain successor (chain successor (chain successor (disjunction successor (transpose successor))))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.18189369299216196,
            "num_unique_values": 58,
            "num_values_explored": 135,
            "solution": "(chain (disjunction (transpose successor) (chain successor successor)) (disjunction equal (chain successor successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False,  True, False, False,\n        False],\n       [False, False,  True, False,  True,  True, False,  True, False,\n        False],\n       [False, False, False,  True, False,  True,  True, False,  True,\n        False],\n       [False, False, False, False,  True, False,  True,  True, False,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (disjunction (transpose successor) (chain successor successor)) (disjunction equal (chain successor successor)))\n)",
            "task_solution": "(chain (disjunction (transpose successor) (chain successor successor)) (disjunction equal (chain successor successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.2151931480038911,
            "num_unique_values": 76,
            "num_values_explored": 159,
            "solution": "(recursive successor (transpose (chain successor successor)) (disjunction (transpose successor) (chain successor successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False, False,  True,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True, False,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive successor (transpose (chain successor successor)) (disjunction (transpose successor) (chain successor successor)))\n)",
            "task_solution": "(recursive successor (transpose (chain successor successor)) (disjunction (transpose successor) (chain successor successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.3079209389979951,
            "num_unique_values": 116,
            "num_values_explored": 228,
            "solution": "(recursive (transpose successor) equal (chain (transpose (chain successor successor)) (recursive (disjunction successor equal) (transpose successor) equal)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(recursive (transpose successor) equal (chain (transpose (chain successor successor)) (disjunction zero successor)))\n)",
            "task_solution": "(recursive (transpose successor) equal (chain (transpose (chain successor successor)) (disjunction zero successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.22049303498351946,
            "num_unique_values": 83,
            "num_values_explored": 160,
            "solution": "(recursive successor (transpose successor) (chain successor (recursive (transpose successor) (transpose successor) successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive successor (transpose successor) (chain successor (recursive (transpose successor) (transpose successor) successor)))\n)",
            "task_solution": "(recursive successor (transpose successor) (chain successor (recursive (transpose successor) (transpose successor) successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.3325952290324494,
            "num_unique_values": 116,
            "num_values_explored": 232,
            "solution": "(recursive equal (recursive (chain successor successor) successor (transpose (chain successor successor))) successor)",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive (chain successor successor) successor (transpose (chain successor successor))) successor)\n)",
            "task_solution": "(recursive equal (recursive (chain successor successor) successor (transpose (chain successor successor))) successor)",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.2815797049552202,
            "num_unique_values": 106,
            "num_values_explored": 214,
            "solution": "(disjunction equal (transpose (recursive successor (transpose successor) (disjunction successor (transpose (chain successor successor))))))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(transpose (disjunction equal (recursive successor (transpose successor) (disjunction successor (transpose (chain successor successor))))))\n)",
            "task_solution": "(transpose (disjunction equal (recursive successor (transpose successor) (disjunction successor (transpose (chain successor successor))))))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.24678680300712585,
            "num_unique_values": 76,
            "num_values_explored": 171,
            "solution": "(recursive equal (transpose (chain successor successor)) (recursive (disjunction zero successor) (transpose successor) zero))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive equal (transpose (chain successor successor)) (recursive (disjunction zero successor) (transpose successor) zero))\n)",
            "task_solution": "(recursive equal (transpose (chain successor successor)) (recursive (disjunction zero successor) (transpose successor) zero))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.3281664549722336,
            "num_unique_values": 116,
            "num_values_explored": 231,
            "solution": "(recursive (chain successor (recursive (chain successor (chain successor successor)) (transpose successor) (transpose (disjunction successor equal)))) zero successor)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (recursive successor equal successor) (chain successor (chain successor successor))) zero successor)\n)",
            "task_solution": "(recursive (chain (recursive successor equal successor) (chain successor (chain successor successor))) zero successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.23652135900920257,
            "num_unique_values": 76,
            "num_values_explored": 171,
            "solution": "(recursive (chain (disjunction zero (chain successor successor)) successor) (transpose (chain successor successor)) successor)",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n        False]])],\n    solution=(recursive (chain (disjunction zero (chain successor successor)) successor) (transpose (chain successor successor)) successor)\n)",
            "task_solution": "(recursive (chain (disjunction zero (chain successor successor)) successor) (transpose (chain successor successor)) successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.3569587530218996,
            "num_unique_values": 126,
            "num_values_explored": 250,
            "solution": "(transpose (chain (recursive (disjunction successor equal) (chain successor successor) successor) (disjunction successor equal)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True]])],\n    solution=(transpose (chain (recursive (disjunction successor equal) (chain successor successor) successor) (disjunction successor equal)))\n)",
            "task_solution": "(transpose (chain (recursive (disjunction successor equal) (chain successor successor) successor) (disjunction successor equal)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.27372746501350775,
            "num_unique_values": 97,
            "num_values_explored": 206,
            "solution": "(chain successor (recursive successor (transpose (chain successor successor)) (transpose (recursive successor successor (recursive equal successor equal)))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive successor (transpose successor) (recursive (chain successor successor) (transpose successor) equal)))\n)",
            "task_solution": "(chain successor (recursive successor (transpose successor) (recursive (chain successor successor) (transpose successor) equal)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.3458924599690363,
            "num_unique_values": 126,
            "num_values_explored": 254,
            "solution": "(transpose (chain (disjunction successor (recursive (chain successor successor) successor (recursive equal zero (transpose successor)))) successor))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False]])],\n    solution=(transpose (chain (recursive successor successor (recursive equal zero (recursive successor equal successor))) successor))\n)",
            "task_solution": "(transpose (chain (recursive successor successor (recursive equal zero (recursive successor equal successor))) successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.26418489299248904,
            "num_unique_values": 97,
            "num_values_explored": 196,
            "solution": "(chain (recursive (transpose successor) (transpose successor) (disjunction (chain zero successor) (recursive zero (transpose successor) (transpose successor)))) successor)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(chain (recursive (transpose successor) (transpose successor) (recursive zero (transpose successor) (transpose successor))) successor)\n)",
            "task_solution": "(chain (recursive (transpose successor) (transpose successor) (recursive zero (transpose successor) (transpose successor))) successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.25535172899253666,
            "num_unique_values": 96,
            "num_values_explored": 193,
            "solution": "(chain (recursive successor successor (chain successor (chain successor successor))) (chain successor (transpose successor)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor successor (chain successor (chain successor successor))) (chain successor (transpose successor)))\n)",
            "task_solution": "(chain (recursive successor successor (chain successor (chain successor successor))) (chain successor (transpose successor)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.3615469789947383,
            "num_unique_values": 117,
            "num_values_explored": 238,
            "solution": "(recursive (transpose (chain (recursive zero zero (transpose successor)) successor)) equal (transpose (chain zero (recursive successor successor equal))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (chain (recursive (transpose (recursive zero zero (transpose successor))) (transpose successor) zero) successor))\n)",
            "task_solution": "(transpose (chain (recursive (transpose (recursive zero zero (transpose successor))) (transpose successor) zero) successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.23298601002898067,
            "num_unique_values": 79,
            "num_values_explored": 169,
            "solution": "(recursive (disjunction (chain successor successor) (recursive (transpose successor) (transpose successor) successor)) successor equal)",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (recursive (transpose successor) (transpose successor) successor) successor (recursive equal (transpose successor) successor))\n)",
            "task_solution": "(recursive (recursive (transpose successor) (transpose successor) successor) successor (recursive equal (transpose successor) successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.34039801702601835,
            "num_unique_values": 126,
            "num_values_explored": 250,
            "solution": "(transpose (disjunction equal (chain successor (chain successor (disjunction (transpose successor) (chain successor successor))))))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False, False,  True,  True, False, False, False, False,\n        False],\n       [False,  True, False, False,  True,  True, False, False, False,\n        False],\n       [False, False,  True, False, False,  True,  True, False, False,\n        False],\n       [False, False, False,  True, False, False,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False, False,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n         True]])],\n    solution=(transpose (disjunction equal (chain successor (chain successor (disjunction (transpose successor) (chain successor successor))))))\n)",
            "task_solution": "(transpose (disjunction equal (chain successor (chain successor (disjunction (transpose successor) (chain successor successor))))))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2768131500342861,
            "num_unique_values": 106,
            "num_values_explored": 207,
            "solution": "(disjunction zero (recursive successor (transpose successor) (recursive equal (transpose successor) (chain successor successor))))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(disjunction zero (recursive successor (transpose successor) (recursive equal (transpose successor) (chain successor successor))))\n)",
            "task_solution": "(disjunction zero (recursive successor (transpose successor) (recursive equal (transpose successor) (chain successor successor))))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.295342213998083,
            "num_unique_values": 96,
            "num_values_explored": 204,
            "solution": "(chain (disjunction (recursive successor (chain successor successor) successor) (disjunction (chain successor successor) (transpose successor))) (disjunction zero successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (disjunction (transpose successor) (recursive successor (chain successor successor) successor)) (disjunction zero successor))\n)",
            "task_solution": "(chain (disjunction (transpose successor) (recursive successor (chain successor successor) successor)) (disjunction zero successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.23472701897844672,
            "num_unique_values": 76,
            "num_values_explored": 171,
            "solution": "(recursive (chain (disjunction zero (chain successor successor)) (chain successor successor)) zero (transpose successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (disjunction zero (chain successor successor)) (chain successor successor)) zero (transpose successor))\n)",
            "task_solution": "(recursive (chain (disjunction zero (chain successor successor)) (chain successor successor)) zero (transpose successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.3291352509986609,
            "num_unique_values": 116,
            "num_values_explored": 242,
            "solution": "(recursive (transpose (chain successor (disjunction successor equal))) (recursive (chain successor successor) successor equal) (disjunction successor equal))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False]])],\n    solution=(transpose (chain successor (disjunction equal (recursive successor (recursive equal (transpose successor) successor) successor))))\n)",
            "task_solution": "(transpose (chain successor (disjunction equal (recursive successor (recursive equal (transpose successor) successor) successor))))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.7654549370054156,
            "num_unique_values": 246,
            "num_values_explored": 542,
            "solution": "(transpose (disjunction successor (chain (disjunction equal (recursive successor (chain successor (chain successor successor)) successor)) (chain successor (transpose successor)))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True,  True, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True,  True, False, False,\n        False],\n       [False, False,  True, False,  True, False,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (disjunction successor (recursive equal successor (chain successor (chain successor successor)))) (transpose successor))\n)",
            "task_solution": "(chain (disjunction successor (recursive equal successor (chain successor (chain successor successor)))) (transpose successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.3696581090334803,
            "num_unique_values": 150,
            "num_values_explored": 282,
            "solution": "(disjunction equal (recursive (chain successor successor) successor (recursive successor (chain successor successor) successor)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (recursive (chain successor successor) successor (recursive successor (chain successor successor) successor)))\n)",
            "task_solution": "(disjunction equal (recursive (chain successor successor) successor (recursive successor (chain successor successor) successor)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.3593205070355907,
            "num_unique_values": 126,
            "num_values_explored": 272,
            "solution": "(transpose (chain (recursive equal (disjunction successor equal) (chain (disjunction zero successor) successor)) successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(transpose (chain (recursive equal (disjunction successor equal) (chain (disjunction zero successor) successor)) successor))\n)",
            "task_solution": "(transpose (chain (recursive equal (disjunction successor equal) (chain (disjunction zero successor) successor)) successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.303435975976754,
            "num_unique_values": 108,
            "num_values_explored": 213,
            "solution": "(disjunction (transpose (chain (chain zero successor) successor)) (chain (recursive successor equal successor) successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction (transpose (chain zero (chain successor successor))) (chain (recursive successor equal successor) successor))\n)",
            "task_solution": "(disjunction (transpose (chain zero (chain successor successor))) (chain (recursive successor equal successor) successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2870054349768907,
            "num_unique_values": 110,
            "num_values_explored": 215,
            "solution": "(disjunction (chain successor (transpose successor)) (chain (disjunction successor (chain (transpose successor) zero)) (chain successor successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction successor (transpose (chain zero successor))) (disjunction (transpose successor) (chain successor successor)))\n)",
            "task_solution": "(chain (disjunction successor (transpose (chain zero successor))) (disjunction (transpose successor) (chain successor successor)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.24592434504302219,
            "num_unique_values": 81,
            "num_values_explored": 159,
            "solution": "(recursive (disjunction successor (transpose (chain successor successor))) (disjunction successor equal) (chain successor successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False]])],\n    solution=(recursive (disjunction successor (transpose (chain successor successor))) (disjunction successor equal) (chain successor successor))\n)",
            "task_solution": "(recursive (disjunction successor (transpose (chain successor successor))) (disjunction successor equal) (chain successor successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.26278671296313405,
            "num_unique_values": 87,
            "num_values_explored": 198,
            "solution": "(transpose (recursive (chain zero (recursive successor successor equal)) (transpose successor) (chain successor successor)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (transpose (chain zero (recursive successor successor equal))) (chain successor successor) (transpose successor))\n)",
            "task_solution": "(recursive (transpose (chain zero (recursive successor successor equal))) (chain successor successor) (transpose successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2351699270075187,
            "num_unique_values": 84,
            "num_values_explored": 169,
            "solution": "(recursive equal (disjunction zero (recursive (chain successor successor) (transpose successor) equal)) (transpose successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive equal (disjunction zero (recursive (chain successor successor) (transpose successor) equal)) (transpose successor))\n)",
            "task_solution": "(recursive equal (disjunction zero (recursive (chain successor successor) (transpose successor) equal)) (transpose successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.42196683399379253,
            "num_unique_values": 148,
            "num_values_explored": 302,
            "solution": "(disjunction (chain successor successor) (chain (disjunction successor (transpose successor)) (recursive equal successor (recursive (transpose successor) (chain successor successor) successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) successor (recursive (transpose successor) (disjunction equal (chain successor successor)) successor))\n)",
            "task_solution": "(recursive (transpose successor) successor (recursive (transpose successor) (disjunction equal (chain successor successor)) successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.23241198301548138,
            "num_unique_values": 79,
            "num_values_explored": 166,
            "solution": "(recursive successor (recursive equal equal successor) (chain (disjunction zero (chain successor successor)) successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False]])],\n    solution=(recursive successor (recursive equal equal successor) (chain (disjunction zero (chain successor successor)) successor))\n)",
            "task_solution": "(recursive successor (recursive equal equal successor) (chain (disjunction zero (chain successor successor)) successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.32939146098215133,
            "num_unique_values": 116,
            "num_values_explored": 238,
            "solution": "(recursive (recursive successor (chain (transpose (chain successor successor)) successor) successor) zero (transpose successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (recursive successor zero (transpose successor)) (chain (transpose (chain successor successor)) successor) successor)\n)",
            "task_solution": "(recursive (recursive successor zero (transpose successor)) (chain (transpose (chain successor successor)) successor) successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.3397769959992729,
            "num_unique_values": 116,
            "num_values_explored": 241,
            "solution": "(recursive (chain (recursive successor equal successor) (chain (disjunction zero (chain successor successor)) successor)) successor (transpose (chain successor successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (disjunction zero (chain successor successor)) successor) (recursive successor equal successor) equal)\n)",
            "task_solution": "(recursive (chain (disjunction zero (chain successor successor)) successor) (recursive successor equal successor) equal)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.3151302729966119,
            "num_unique_values": 119,
            "num_values_explored": 222,
            "solution": "(recursive successor (transpose (chain successor successor)) (disjunction equal (recursive successor (transpose successor) successor)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive successor (transpose (chain successor successor)) (disjunction equal (recursive successor (transpose successor) successor)))\n)",
            "task_solution": "(recursive successor (transpose (chain successor successor)) (disjunction equal (recursive successor (transpose successor) successor)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.3307406469830312,
            "num_unique_values": 136,
            "num_values_explored": 243,
            "solution": "(chain (disjunction (transpose successor) (recursive successor successor (chain (transpose (recursive (recursive successor successor equal) equal (chain successor successor))) successor))) successor)",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (disjunction (transpose successor) (recursive successor successor (recursive equal successor (transpose successor)))) successor)\n)",
            "task_solution": "(chain (disjunction (transpose successor) (recursive successor successor (recursive equal successor (transpose successor)))) successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.28192030801437795,
            "num_unique_values": 112,
            "num_values_explored": 199,
            "solution": "(disjunction (chain successor successor) (transpose (chain (recursive equal successor (chain successor successor)) successor)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (chain successor successor) (transpose (chain (recursive equal successor (chain successor successor)) successor)))\n)",
            "task_solution": "(disjunction (chain successor successor) (transpose (chain (recursive equal successor (chain successor successor)) successor)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.22193401103140786,
            "num_unique_values": 80,
            "num_values_explored": 164,
            "solution": "(recursive (transpose successor) successor (chain (recursive successor zero (recursive successor equal successor)) (transpose successor)))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [ True, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [ True, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) successor (recursive equal zero (recursive (chain successor successor) equal successor)))\n)",
            "task_solution": "(recursive (transpose successor) successor (recursive equal zero (recursive (chain successor successor) equal successor)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.26446227700216696,
            "num_unique_values": 96,
            "num_values_explored": 190,
            "solution": "(chain successor (chain (recursive successor (transpose successor) successor) (recursive successor zero (transpose successor))))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain (recursive successor (transpose successor) successor) (recursive successor zero (transpose successor))))\n)",
            "task_solution": "(chain successor (chain (recursive successor (transpose successor) successor) (recursive successor zero (transpose successor))))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.3046496290480718,
            "num_unique_values": 106,
            "num_values_explored": 227,
            "solution": "(disjunction zero (chain (transpose (recursive successor zero (transpose successor))) (chain zero (chain successor successor))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction zero (chain (recursive (transpose successor) equal successor) (chain zero (chain successor successor))))\n)",
            "task_solution": "(disjunction zero (chain (recursive (transpose successor) equal successor) (chain zero (chain successor successor))))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.29013295500772074,
            "num_unique_values": 107,
            "num_values_explored": 213,
            "solution": "(disjunction equal (chain successor (recursive (recursive equal successor (transpose successor)) (transpose (recursive successor successor equal)) successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (recursive (recursive successor successor (transpose successor)) (chain (transpose successor) successor) successor))\n)",
            "task_solution": "(disjunction equal (recursive (recursive successor successor (transpose successor)) (chain (transpose successor) successor) successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.23783248796826228,
            "num_unique_values": 79,
            "num_values_explored": 169,
            "solution": "(recursive equal (recursive successor (chain successor successor) successor) (recursive successor zero (transpose successor)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [ True, False, False, False,  True,  True,  True, False, False,\n        False],\n       [ True, False, False, False, False,  True,  True, False, False,\n        False],\n       [ True, False, False, False, False, False,  True,  True, False,\n        False],\n       [ True, False, False, False, False, False, False,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive successor (chain successor successor) successor) (recursive successor zero (transpose successor)))\n)",
            "task_solution": "(recursive equal (recursive successor (chain successor successor) successor) (recursive successor zero (transpose successor)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.30846425698837265,
            "num_unique_values": 121,
            "num_values_explored": 226,
            "solution": "(recursive (disjunction successor equal) (transpose (chain successor (chain successor successor))) (chain (transpose (disjunction successor equal)) successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True]])],\n    solution=(recursive (disjunction successor equal) (transpose (chain successor (chain successor successor))) (disjunction successor equal))\n)",
            "task_solution": "(recursive (disjunction successor equal) (transpose (chain successor (chain successor successor))) (disjunction successor equal))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.18531233997782692,
            "num_unique_values": 56,
            "num_values_explored": 136,
            "solution": "(chain (recursive (disjunction (transpose successor) (chain zero successor)) equal successor) (chain successor successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (recursive (disjunction (transpose successor) (chain zero successor)) equal successor) (chain successor successor))\n)",
            "task_solution": "(chain (recursive (disjunction (transpose successor) (chain zero successor)) equal successor) (chain successor successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.314155419007875,
            "num_unique_values": 109,
            "num_values_explored": 226,
            "solution": "(disjunction equal (disjunction (chain successor successor) (recursive (transpose successor) successor (chain successor successor))))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(disjunction equal (disjunction (chain successor successor) (recursive (transpose successor) successor (chain successor successor))))\n)",
            "task_solution": "(disjunction equal (disjunction (chain successor successor) (recursive (transpose successor) successor (chain successor successor))))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.24177377601154149,
            "num_unique_values": 86,
            "num_values_explored": 178,
            "solution": "(transpose (disjunction zero (chain (recursive (chain successor successor) successor (chain successor successor)) successor)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False]])],\n    solution=(transpose (disjunction zero (chain successor (chain (recursive successor successor (chain successor successor)) successor))))\n)",
            "task_solution": "(transpose (disjunction zero (chain successor (chain (recursive successor successor (chain successor successor)) successor))))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.24836204800521955,
            "num_unique_values": 76,
            "num_values_explored": 167,
            "solution": "(recursive (chain (disjunction (chain successor successor) (recursive equal equal successor)) successor) zero successor)",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (chain (disjunction (chain successor successor) (recursive equal equal successor)) successor) zero successor)\n)",
            "task_solution": "(recursive (chain (disjunction (chain successor successor) (recursive equal equal successor)) successor) zero successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.31633613497251645,
            "num_unique_values": 117,
            "num_values_explored": 226,
            "solution": "(recursive (recursive (disjunction (chain successor successor) equal) successor (transpose (chain successor successor))) (disjunction equal (chain successor successor)) successor)",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (recursive (transpose (disjunction successor equal)) successor (transpose (chain successor successor))) equal successor)\n)",
            "task_solution": "(recursive (recursive (transpose (disjunction successor equal)) successor (transpose (chain successor successor))) equal successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.31732917996123433,
            "num_unique_values": 120,
            "num_values_explored": 220,
            "solution": "(recursive (recursive (transpose (recursive successor zero (transpose successor))) (recursive zero (transpose successor) (transpose successor)) (transpose successor)) (transpose successor) successor)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (recursive (transpose successor) (transpose successor) (recursive successor (transpose successor) successor)) equal successor)\n)",
            "task_solution": "(recursive (recursive (transpose successor) (transpose successor) (recursive successor (transpose successor) successor)) equal successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2352928199688904,
            "num_unique_values": 79,
            "num_values_explored": 176,
            "solution": "(recursive (recursive equal zero (recursive successor equal successor)) (transpose successor) (chain successor successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n        False],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n         True]])],\n    solution=(recursive (recursive equal zero (recursive successor equal successor)) (transpose successor) (chain successor successor))\n)",
            "task_solution": "(recursive (recursive equal zero (recursive successor equal successor)) (transpose successor) (chain successor successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.3164073189836927,
            "num_unique_values": 118,
            "num_values_explored": 215,
            "solution": "(recursive equal successor (chain (recursive successor zero (transpose successor)) (recursive (chain successor (transpose (recursive successor successor equal))) (transpose successor) zero)))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (recursive (chain (recursive successor equal successor) zero) successor (transpose successor)))\n)",
            "task_solution": "(recursive equal successor (recursive (chain (recursive successor equal successor) zero) successor (transpose successor)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.3461484289728105,
            "num_unique_values": 128,
            "num_values_explored": 237,
            "solution": "(transpose (recursive successor (disjunction successor equal) (chain successor (chain successor (chain successor successor)))))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True, False,  True,  True,  True, False,\n        False],\n       [ True, False, False,  True,  True, False,  True,  True,  True,\n        False],\n       [False,  True, False, False,  True,  True, False, False, False,\n        False],\n       [False, False,  True, False, False,  True,  True, False, False,\n        False],\n       [False, False, False,  True, False, False,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False, False,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (chain successor (chain successor (chain successor successor))) (disjunction successor equal))\n)",
            "task_solution": "(recursive (transpose successor) (chain successor (chain successor (chain successor successor))) (disjunction successor equal))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.20223678299225867,
            "num_unique_values": 70,
            "num_values_explored": 150,
            "solution": "(disjunction (recursive successor (transpose successor) successor) (recursive (chain successor (transpose successor)) equal (transpose successor)))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(disjunction (recursive successor (transpose successor) successor) (recursive (disjunction successor (transpose successor)) successor equal))\n)",
            "task_solution": "(disjunction (recursive successor (transpose successor) successor) (recursive (disjunction successor (transpose successor)) successor equal))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2694634970393963,
            "num_unique_values": 97,
            "num_values_explored": 202,
            "solution": "(chain (recursive equal (disjunction (transpose successor) (chain successor (chain successor successor))) successor) successor)",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(chain (recursive equal (disjunction (transpose successor) (chain successor (chain successor successor))) successor) successor)\n)",
            "task_solution": "(chain (recursive equal (disjunction (transpose successor) (chain successor (chain successor successor))) successor) successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.23007244599284604,
            "num_unique_values": 78,
            "num_values_explored": 165,
            "solution": "(recursive (disjunction (chain successor successor) (recursive equal (transpose successor) successor)) (recursive successor successor equal) successor)",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(recursive (chain (recursive successor (transpose successor) successor) successor) (recursive successor successor equal) successor)\n)",
            "task_solution": "(recursive (chain (recursive successor (transpose successor) successor) successor) (recursive successor successor equal) successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.330211688997224,
            "num_unique_values": 129,
            "num_values_explored": 242,
            "solution": "(transpose (disjunction equal (recursive successor (transpose (disjunction equal (chain successor successor))) (transpose successor))))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(transpose (disjunction equal (recursive successor (transpose (disjunction equal (chain successor successor))) (transpose successor))))\n)",
            "task_solution": "(transpose (disjunction equal (recursive successor (transpose (disjunction equal (chain successor successor))) (transpose successor))))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.3377986940322444,
            "num_unique_values": 126,
            "num_values_explored": 242,
            "solution": "(transpose (disjunction successor (recursive equal (recursive equal (transpose successor) zero) (transpose (chain successor successor)))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True]])],\n    solution=(transpose (disjunction successor (recursive equal (recursive equal (transpose successor) zero) (transpose (chain successor successor)))))\n)",
            "task_solution": "(transpose (disjunction successor (recursive equal (recursive equal (transpose successor) zero) (transpose (chain successor successor)))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 72.24402506701881,
            "num_unique_values": 4675,
            "num_values_explored": 50097,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False,  True,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive equal (recursive (transpose (chain successor successor)) (chain successor successor) successor) successor))\n)",
            "task_solution": "(chain successor (recursive equal (recursive (transpose (chain successor successor)) (chain successor successor) successor) successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.2621310660033487,
            "num_unique_values": 76,
            "num_values_explored": 166,
            "solution": "(recursive (chain (recursive zero (transpose successor) (transpose successor)) successor) successor (recursive equal successor (chain successor successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (recursive zero (transpose successor) (transpose successor)) successor) successor (recursive equal equal successor))\n)",
            "task_solution": "(recursive (chain (recursive zero (transpose successor) (transpose successor)) successor) successor (recursive equal equal successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.3853560960269533,
            "num_unique_values": 136,
            "num_values_explored": 281,
            "solution": "(chain successor (disjunction equal (disjunction (chain successor successor) (recursive (transpose successor) (transpose successor) successor))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False,  True, False, False,\n        False],\n       [ True, False,  True, False,  True,  True, False,  True, False,\n        False],\n       [False,  True, False,  True, False,  True,  True, False,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True,  True, False,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (disjunction equal (disjunction (chain successor successor) (recursive (transpose successor) (transpose successor) successor))))\n)",
            "task_solution": "(chain successor (disjunction equal (disjunction (chain successor successor) (recursive (transpose successor) (transpose successor) successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.5911942229722627,
            "num_unique_values": 206,
            "num_values_explored": 421,
            "solution": "(transpose (chain (recursive (transpose (chain successor (chain successor successor))) successor (recursive successor successor (transpose successor))) zero))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain zero (recursive (chain successor (chain successor successor)) (recursive successor successor (transpose successor)) successor))\n)",
            "task_solution": "(chain zero (recursive (chain successor (chain successor successor)) (recursive successor successor (transpose successor)) successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.34152533498127013,
            "num_unique_values": 116,
            "num_values_explored": 233,
            "solution": "(recursive (disjunction successor (recursive equal successor (recursive successor successor (transpose successor)))) (transpose successor) zero)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True,  True, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True,  True, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True,  True, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n         True],\n       [ True, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (disjunction successor (recursive equal successor (recursive successor successor (transpose successor)))) (transpose successor) zero)\n)",
            "task_solution": "(recursive (disjunction successor (recursive equal successor (recursive successor successor (transpose successor)))) (transpose successor) zero)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.32770344900200143,
            "num_unique_values": 120,
            "num_values_explored": 228,
            "solution": "(recursive (recursive (recursive (chain successor successor) (transpose successor) successor) successor (transpose successor)) (chain (recursive successor successor equal) successor) successor)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False]])],\n    solution=(recursive (recursive (chain successor successor) (transpose successor) successor) (chain successor successor) (disjunction successor equal))\n)",
            "task_solution": "(recursive (recursive (chain successor successor) (transpose successor) successor) (chain successor successor) (disjunction successor equal))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.27861972904065624,
            "num_unique_values": 103,
            "num_values_explored": 203,
            "solution": "(chain (transpose (recursive equal (disjunction zero successor) (transpose successor))) (disjunction (transpose successor) (chain successor successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (disjunction (transpose successor) (chain successor successor)) (transpose (chain (disjunction zero successor) successor)) equal)\n)",
            "task_solution": "(recursive (disjunction (transpose successor) (chain successor successor)) (transpose (chain (disjunction zero successor) successor)) equal)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.4028524369932711,
            "num_unique_values": 149,
            "num_values_explored": 287,
            "solution": "(disjunction (chain (transpose successor) successor) (recursive (disjunction successor (recursive (transpose zero) (transpose (chain successor successor)) (transpose successor))) successor equal))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True, False,  True,  True,  True,\n         True],\n       [False, False, False, False,  True, False, False,  True,  True,\n         True],\n       [False, False, False, False,  True, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (disjunction equal (recursive (transpose zero) (transpose (chain successor successor)) (transpose successor))) successor equal)\n)",
            "task_solution": "(recursive (disjunction equal (recursive (transpose zero) (transpose (chain successor successor)) (transpose successor))) successor equal)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.39634846500121057,
            "num_unique_values": 119,
            "num_values_explored": 241,
            "solution": "(recursive successor (transpose (recursive (chain successor successor) zero successor)) (recursive equal (transpose successor) successor))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive successor (recursive (transpose (chain successor successor)) successor zero) (recursive equal (transpose successor) successor))\n)",
            "task_solution": "(recursive successor (recursive (transpose (chain successor successor)) successor zero) (recursive equal (transpose successor) successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.4414872459601611,
            "num_unique_values": 167,
            "num_values_explored": 311,
            "solution": "(transpose (chain (recursive successor (recursive (chain successor (chain successor successor)) equal successor) successor) successor))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False]])],\n    solution=(transpose (chain (recursive successor (recursive (chain successor (chain successor successor)) equal successor) successor) successor))\n)",
            "task_solution": "(transpose (chain (recursive successor (recursive (chain successor (chain successor successor)) equal successor) successor) successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.3061349479830824,
            "num_unique_values": 110,
            "num_values_explored": 224,
            "solution": "(disjunction (recursive (chain successor successor) (transpose successor) successor) (recursive (chain successor successor) (chain successor (chain successor successor)) successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False]])],\n    solution=(recursive (recursive (chain successor successor) (chain successor (chain successor successor)) successor) (transpose successor) successor)\n)",
            "task_solution": "(recursive (recursive (chain successor successor) (chain successor (chain successor successor)) successor) (transpose successor) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.26038876600796357,
            "num_unique_values": 79,
            "num_values_explored": 170,
            "solution": "(recursive (disjunction successor equal) (transpose (chain successor successor)) (recursive (transpose successor) (transpose successor) zero))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (disjunction successor equal) (transpose (chain successor successor)) (recursive (transpose successor) (transpose successor) zero))\n)",
            "task_solution": "(recursive (disjunction successor equal) (transpose (chain successor successor)) (recursive (transpose successor) (transpose successor) zero))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.315656995982863,
            "num_unique_values": 121,
            "num_values_explored": 213,
            "solution": "(recursive (transpose successor) (chain successor successor) (disjunction equal (recursive (chain (recursive equal (transpose successor) successor) zero) successor (transpose successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False, False, False,  True, False,  True, False,\n        False],\n       [ True, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(transpose (chain successor (recursive (recursive equal zero (transpose (chain successor successor))) (transpose successor) successor)))\n)",
            "task_solution": "(transpose (chain successor (recursive (recursive equal zero (transpose (chain successor successor))) (transpose successor) successor)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.26188848994206637,
            "num_unique_values": 104,
            "num_values_explored": 201,
            "solution": "(chain (recursive (chain zero (chain successor successor)) (transpose successor) (recursive successor successor equal)) successor)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive (chain zero (chain successor successor)) (transpose successor) (recursive successor successor equal)) successor)\n)",
            "task_solution": "(chain (recursive (chain zero (chain successor successor)) (transpose successor) (recursive successor successor equal)) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.29835852497490123,
            "num_unique_values": 108,
            "num_values_explored": 219,
            "solution": "(disjunction successor (transpose (chain (disjunction zero successor) (recursive (chain successor successor) (transpose successor) successor))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False]])],\n    solution=(disjunction successor (transpose (chain (disjunction zero successor) (recursive (chain successor successor) (transpose successor) successor))))\n)",
            "task_solution": "(disjunction successor (transpose (chain (disjunction zero successor) (recursive (chain successor successor) (transpose successor) successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.2249773910152726,
            "num_unique_values": 78,
            "num_values_explored": 166,
            "solution": "(recursive (recursive (transpose successor) (transpose successor) zero) (recursive zero (transpose successor) (transpose successor)) successor)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False, False, False, False, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (recursive (transpose successor) (transpose successor) zero) (recursive zero (transpose successor) (transpose successor)) successor)\n)",
            "task_solution": "(recursive (recursive (transpose successor) (transpose successor) zero) (recursive zero (transpose successor) (transpose successor)) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.3288192749605514,
            "num_unique_values": 117,
            "num_values_explored": 237,
            "solution": "(recursive successor (transpose (chain zero (disjunction zero successor))) (transpose (chain successor (chain successor successor))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False, False,  True, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (transpose (chain zero (disjunction zero successor))) (transpose (chain successor (chain successor successor))))\n)",
            "task_solution": "(recursive successor (transpose (chain zero (disjunction zero successor))) (transpose (chain successor (chain successor successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.3531507219886407,
            "num_unique_values": 136,
            "num_values_explored": 261,
            "solution": "(chain (transpose successor) (chain (recursive equal successor (transpose (recursive successor equal (chain successor successor)))) successor))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (transpose successor) (recursive successor successor (recursive (transpose successor) equal (transpose (chain successor successor)))))\n)",
            "task_solution": "(chain (transpose successor) (recursive successor successor (recursive (transpose successor) equal (transpose (chain successor successor)))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.27364708902314305,
            "num_unique_values": 100,
            "num_values_explored": 189,
            "solution": "(chain (disjunction successor equal) (disjunction (transpose successor) (chain successor (recursive successor (transpose successor) successor))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (disjunction successor equal) (disjunction (transpose successor) (chain successor (recursive successor (transpose successor) successor))))\n)",
            "task_solution": "(chain (disjunction successor equal) (disjunction (transpose successor) (chain successor (recursive successor (transpose successor) successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.2740475609898567,
            "num_unique_values": 103,
            "num_values_explored": 195,
            "solution": "(chain (transpose (recursive successor (recursive successor (transpose successor) (chain successor successor)) (transpose successor))) successor)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False,  True, False, False,\n         True],\n       [False,  True,  True,  True,  True,  True, False,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (recursive (transpose successor) (transpose successor) (recursive successor (transpose successor) (chain successor successor))) successor)\n)",
            "task_solution": "(chain (recursive (transpose successor) (transpose successor) (recursive successor (transpose successor) (chain successor successor))) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.3211539619951509,
            "num_unique_values": 121,
            "num_values_explored": 231,
            "solution": "(recursive (transpose (disjunction zero successor)) (chain (transpose (recursive (disjunction successor equal) successor (transpose (chain successor successor)))) successor) (transpose successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (transpose (disjunction zero successor)) (recursive equal (transpose successor) (chain successor successor)) (transpose successor))\n)",
            "task_solution": "(recursive (transpose (disjunction zero successor)) (recursive equal (transpose successor) (chain successor successor)) (transpose successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.22939899703487754,
            "num_unique_values": 77,
            "num_values_explored": 175,
            "solution": "(recursive (disjunction (transpose successor) (chain zero successor)) equal (chain (recursive successor equal successor) zero))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (disjunction (transpose successor) (chain zero successor)) equal (chain (recursive successor equal successor) zero))\n)",
            "task_solution": "(recursive (disjunction (transpose successor) (chain zero successor)) equal (chain (recursive successor equal successor) zero))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.20459320198278874,
            "num_unique_values": 68,
            "num_values_explored": 155,
            "solution": "(disjunction (recursive successor (chain successor successor) successor) (chain (disjunction successor (recursive (transpose successor) equal (transpose successor))) successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction (recursive successor (chain successor successor) successor) (chain (transpose successor) (recursive successor successor equal)))\n)",
            "task_solution": "(disjunction (recursive successor (chain successor successor) successor) (chain (transpose successor) (recursive successor successor equal)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.20201612799428403,
            "num_unique_values": 72,
            "num_values_explored": 152,
            "solution": "(disjunction (recursive zero zero (transpose successor)) (chain (transpose (recursive successor (chain zero successor) equal)) (chain successor successor)))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction zero (chain (transpose successor) (chain (disjunction successor (recursive zero zero (transpose successor))) successor)))\n)",
            "task_solution": "(disjunction zero (chain (transpose successor) (chain (disjunction successor (recursive zero zero (transpose successor))) successor)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.3249405069509521,
            "num_unique_values": 122,
            "num_values_explored": 243,
            "solution": "(recursive (transpose (chain successor successor)) (disjunction zero successor) (transpose (chain successor (chain successor successor))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False,  True, False, False, False,  True, False,\n        False],\n       [ True, False, False, False,  True, False, False, False,  True,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n         True],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [False, False, False,  True, False, False, False,  True, False,\n        False],\n       [False, False, False, False,  True, False, False, False,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain successor successor)) (disjunction zero successor) (transpose (chain successor (chain successor successor))))\n)",
            "task_solution": "(recursive (transpose (chain successor successor)) (disjunction zero successor) (transpose (chain successor (chain successor successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.18160767800873145,
            "num_unique_values": 57,
            "num_values_explored": 139,
            "solution": "(chain (recursive (chain successor (recursive successor successor equal)) (transpose successor) (chain successor successor)) successor)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True, False,  True, False, False,\n        False]])],\n    solution=(chain (recursive (recursive (chain successor successor) successor equal) (transpose successor) (chain successor successor)) successor)\n)",
            "task_solution": "(chain (recursive (recursive (chain successor successor) successor equal) (transpose successor) (chain successor successor)) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.3343185209669173,
            "num_unique_values": 128,
            "num_values_explored": 239,
            "solution": "(transpose (disjunction equal (recursive (recursive successor zero (transpose successor)) (transpose successor) (chain successor successor))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False,  True,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n         True],\n       [ True,  True,  True,  True,  True, False, False,  True, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False,  True,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n         True],\n       [ True,  True,  True, False,  True,  True, False,  True, False,\n        False],\n       [ True,  True, False, False, False,  True,  True, False,  True,\n        False],\n       [ True,  True, False, False, False, False,  True,  True, False,\n         True],\n       [ True, False, False, False, False, False, False,  True,  True,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction equal (recursive (recursive successor zero (transpose successor)) (transpose successor) (chain successor successor))))\n)",
            "task_solution": "(transpose (disjunction equal (recursive (recursive successor zero (transpose successor)) (transpose successor) (chain successor successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.3656867160461843,
            "num_unique_values": 137,
            "num_values_explored": 262,
            "solution": "(chain successor (transpose (disjunction equal (chain successor (transpose (recursive successor successor (recursive successor successor (transpose (recursive successor successor equal)))))))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (recursive successor (chain successor (chain successor successor)) (recursive successor equal successor)))\n)",
            "task_solution": "(recursive successor successor (recursive successor (chain successor (chain successor successor)) (recursive successor equal successor)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.28348069899948314,
            "num_unique_values": 96,
            "num_values_explored": 201,
            "solution": "(chain (recursive equal (transpose (disjunction equal (chain successor successor))) (transpose (disjunction zero successor))) successor)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True]])],\n    solution=(chain (recursive equal (transpose (disjunction equal (chain successor successor))) (transpose (disjunction zero successor))) successor)\n)",
            "task_solution": "(chain (recursive equal (transpose (disjunction equal (chain successor successor))) (transpose (disjunction zero successor))) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.227741235983558,
            "num_unique_values": 79,
            "num_values_explored": 166,
            "solution": "(recursive (disjunction successor (recursive equal (chain successor successor) (disjunction successor (transpose successor)))) (transpose successor) successor)",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (disjunction successor (recursive equal (chain successor successor) (disjunction successor (transpose successor)))) equal successor)\n)",
            "task_solution": "(recursive (disjunction successor (recursive equal (chain successor successor) (disjunction successor (transpose successor)))) equal successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.21922989003360271,
            "num_unique_values": 78,
            "num_values_explored": 167,
            "solution": "(recursive (transpose successor) (chain (recursive successor equal successor) (chain successor successor)) (transpose (chain successor successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) successor (recursive (transpose (chain successor (chain successor successor))) equal (transpose successor)))\n)",
            "task_solution": "(recursive (transpose successor) successor (recursive (transpose (chain successor (chain successor successor))) equal (transpose successor)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.37997103994712234,
            "num_unique_values": 136,
            "num_values_explored": 260,
            "solution": "(chain (transpose (disjunction successor (chain successor (transpose (recursive (chain (recursive equal (transpose successor) zero) successor) successor (transpose successor)))))) successor)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True, False,  True,  True, False,\n         True],\n       [False,  True,  True,  True, False, False, False,  True,  True,\n        False],\n       [False,  True,  True, False, False, False, False, False,  True,\n         True],\n       [False,  True, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (transpose (disjunction successor (recursive (recursive equal zero (transpose successor)) (transpose successor) successor))) successor)\n)",
            "task_solution": "(chain (transpose (disjunction successor (recursive (recursive equal zero (transpose successor)) (transpose successor) successor))) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.695499669003766,
            "num_unique_values": 228,
            "num_values_explored": 520,
            "solution": "(disjunction equal (chain (disjunction successor equal) (disjunction (transpose successor) (chain successor (chain successor successor)))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True,  True, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True,  True, False, False, False,\n        False],\n       [False,  True,  True, False, False,  True,  True, False, False,\n        False],\n       [False, False,  True,  True, False, False,  True,  True, False,\n        False],\n       [False, False, False,  True,  True, False, False,  True,  True,\n        False],\n       [False, False, False, False,  True,  True, False, False,  True,\n         True],\n       [False, False, False, False, False,  True,  True, False, False,\n         True],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(disjunction zero (chain (disjunction (transpose successor) (chain successor (chain successor successor))) (disjunction successor equal)))\n)",
            "task_solution": "(disjunction zero (chain (disjunction (transpose successor) (chain successor (chain successor successor))) (disjunction successor equal)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.19923452904913574,
            "num_unique_values": 68,
            "num_values_explored": 155,
            "solution": "(disjunction (recursive equal successor (chain successor successor)) (recursive (chain zero successor) (transpose successor) equal))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True, False,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True, False, False, False,  True,  True,  True, False,\n        False],\n       [False,  True, False, False, False, False, False,  True,  True,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (disjunction equal (recursive (chain zero successor) (transpose successor) equal)) successor (chain successor successor))\n)",
            "task_solution": "(recursive (disjunction equal (recursive (chain zero successor) (transpose successor) equal)) successor (chain successor successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.3186925209593028,
            "num_unique_values": 107,
            "num_values_explored": 242,
            "solution": "(disjunction zero (chain (disjunction successor (transpose successor)) (chain (disjunction zero successor) (chain successor successor))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction zero (chain (disjunction successor (transpose successor)) (chain (disjunction zero successor) (chain successor successor))))\n)",
            "task_solution": "(disjunction zero (chain (disjunction successor (transpose successor)) (chain (disjunction zero successor) (chain successor successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.35508335201302543,
            "num_unique_values": 137,
            "num_values_explored": 252,
            "solution": "(chain (recursive (recursive successor (chain successor successor) successor) (disjunction (chain successor successor) (recursive successor (transpose successor) successor)) successor) successor)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (recursive successor (disjunction (transpose successor) (chain successor successor)) (recursive successor successor equal)) successor)\n)",
            "task_solution": "(chain (recursive successor (disjunction (transpose successor) (chain successor successor)) (recursive successor successor equal)) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.25774804496904835,
            "num_unique_values": 93,
            "num_values_explored": 176,
            "solution": "(transpose (disjunction (transpose successor) (chain (recursive (disjunction (chain successor successor) equal) (transpose successor) zero) successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False]])],\n    solution=(disjunction successor (transpose (chain (recursive (disjunction equal (chain successor successor)) (transpose successor) zero) successor)))\n)",
            "task_solution": "(disjunction successor (transpose (chain (recursive (disjunction equal (chain successor successor)) (transpose successor) zero) successor)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.33022135304054245,
            "num_unique_values": 116,
            "num_values_explored": 220,
            "solution": "(recursive (disjunction successor (transpose (disjunction equal (chain successor (chain successor successor))))) successor (recursive (transpose successor) (transpose successor) successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n         True]])],\n    solution=(recursive (disjunction successor (transpose (disjunction equal (chain successor (chain successor successor))))) successor (transpose successor))\n)",
            "task_solution": "(recursive (disjunction successor (transpose (disjunction equal (chain successor (chain successor successor))))) successor (transpose successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.2922385350102559,
            "num_unique_values": 98,
            "num_values_explored": 210,
            "solution": "(chain (disjunction (transpose successor) (chain zero successor)) (disjunction equal (chain (disjunction zero successor) successor)))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (disjunction (transpose successor) (chain zero successor)) (disjunction equal (chain (disjunction zero successor) successor)))\n)",
            "task_solution": "(chain (disjunction (transpose successor) (chain zero successor)) (disjunction equal (chain (disjunction zero successor) successor)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.1770326069672592,
            "num_unique_values": 59,
            "num_values_explored": 132,
            "solution": "(chain (recursive successor (disjunction zero (chain successor successor)) (transpose successor)) (disjunction successor (transpose successor)))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True, False,  True,  True, False,\n         True],\n       [False, False,  True, False,  True,  True, False,  True,  True,\n        False],\n       [False, False, False,  True, False,  True,  True, False,  True,\n        False],\n       [False, False, False, False,  True, False,  True,  True, False,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor (disjunction zero (chain successor successor)) (transpose successor)) (disjunction successor (transpose successor)))\n)",
            "task_solution": "(chain (recursive successor (disjunction zero (chain successor successor)) (transpose successor)) (disjunction successor (transpose successor)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.408045363961719,
            "num_unique_values": 151,
            "num_values_explored": 294,
            "solution": "(disjunction (recursive zero (recursive successor equal successor) successor) (recursive successor (chain successor successor) successor))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (disjunction successor (recursive zero (recursive successor equal successor) successor)) (chain successor successor) successor)\n)",
            "task_solution": "(recursive (disjunction successor (recursive zero (recursive successor equal successor) successor)) (chain successor successor) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.2618982100393623,
            "num_unique_values": 97,
            "num_values_explored": 192,
            "solution": "(chain (recursive (disjunction successor equal) (chain successor successor) (recursive successor successor equal)) (transpose successor))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (chain (disjunction successor equal) (transpose successor)) (chain successor successor) (recursive successor successor equal))\n)",
            "task_solution": "(recursive (chain (disjunction successor equal) (transpose successor)) (chain successor successor) (recursive successor successor equal))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.27791921695461497,
            "num_unique_values": 109,
            "num_values_explored": 209,
            "solution": "(disjunction successor (recursive (chain successor (recursive zero (transpose successor) (transpose successor))) (transpose successor) successor))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [False,  True, False, False, False,  True, False,  True, False,\n        False],\n       [ True, False, False, False,  True, False, False, False,  True,\n        False],\n       [False, False, False,  True, False, False, False,  True, False,\n         True],\n       [False, False,  True, False, False, False,  True, False, False,\n        False]])],\n    solution=(disjunction successor (recursive (chain successor (recursive zero (transpose successor) (transpose successor))) (transpose successor) successor))\n)",
            "task_solution": "(disjunction successor (recursive (chain successor (recursive zero (transpose successor) (transpose successor))) (transpose successor) successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.235984077968169,
            "num_unique_values": 67,
            "num_values_explored": 154,
            "solution": "(disjunction zero (chain (transpose (chain successor successor)) (recursive successor (chain zero successor) (transpose successor))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction zero (chain (transpose (chain successor successor)) (recursive successor (chain zero successor) (transpose successor))))\n)",
            "task_solution": "(disjunction zero (chain (transpose (chain successor successor)) (recursive successor (chain zero successor) (transpose successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.45010524900862947,
            "num_unique_values": 157,
            "num_values_explored": 305,
            "solution": "(recursive equal successor (recursive (chain successor (chain successor (chain successor successor))) zero (transpose successor)))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False, False,  True, False, False, False,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False,  True, False,\n        False],\n       [ True, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (recursive (chain successor (chain successor (chain successor successor))) zero (transpose successor)))\n)",
            "task_solution": "(recursive equal successor (recursive (chain successor (chain successor (chain successor successor))) zero (transpose successor)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.3865955189685337,
            "num_unique_values": 136,
            "num_values_explored": 278,
            "solution": "(chain successor (disjunction equal (chain (recursive zero (transpose successor) (transpose successor)) (recursive equal equal (recursive successor (transpose successor) equal)))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor equal (recursive (transpose zero) (recursive equal equal successor) (transpose (chain successor successor))))\n)",
            "task_solution": "(recursive successor equal (recursive (transpose zero) (recursive equal equal successor) (transpose (chain successor successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.2410784660023637,
            "num_unique_values": 84,
            "num_values_explored": 164,
            "solution": "(recursive successor (transpose (disjunction successor equal)) (chain successor (recursive zero (transpose successor) (transpose successor))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (transpose (disjunction successor equal)) (chain successor (recursive zero (transpose successor) (transpose successor))))\n)",
            "task_solution": "(recursive successor (transpose (disjunction successor equal)) (chain successor (recursive zero (transpose successor) (transpose successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.3620261200121604,
            "num_unique_values": 120,
            "num_values_explored": 251,
            "solution": "(recursive (transpose (chain successor (disjunction equal (chain successor successor)))) (chain successor successor) (chain (recursive equal (transpose successor) successor) zero))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False]])],\n    solution=(transpose (chain (recursive (disjunction equal (chain successor successor)) (transpose (chain successor successor)) zero) successor))\n)",
            "task_solution": "(transpose (chain (recursive (disjunction equal (chain successor successor)) (transpose (chain successor successor)) zero) successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.27791164396330714,
            "num_unique_values": 96,
            "num_values_explored": 219,
            "solution": "(chain (recursive (transpose successor) (recursive (transpose successor) successor (transpose successor)) (disjunction zero successor)) successor)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(chain (recursive (transpose successor) (recursive (transpose successor) successor (transpose successor)) (disjunction zero successor)) successor)\n)",
            "task_solution": "(chain (recursive (transpose successor) (recursive (transpose successor) successor (transpose successor)) (disjunction zero successor)) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.20462069299537688,
            "num_unique_values": 66,
            "num_values_explored": 152,
            "solution": "(disjunction (chain successor (chain successor successor)) (recursive (transpose successor) successor (disjunction equal (chain successor successor))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (chain successor (chain successor successor)) (recursive (transpose successor) successor (disjunction equal (chain successor successor))))\n)",
            "task_solution": "(disjunction (chain successor (chain successor successor)) (recursive (transpose successor) successor (disjunction equal (chain successor successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3329814409953542,
            "num_unique_values": 126,
            "num_values_explored": 245,
            "solution": "(transpose (chain (recursive equal (chain successor successor) (chain successor (disjunction equal (chain successor successor)))) successor))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False]])],\n    solution=(transpose (chain (recursive equal (chain successor successor) (chain successor (disjunction equal (chain successor successor)))) successor))\n)",
            "task_solution": "(transpose (chain (recursive equal (chain successor successor) (chain successor (disjunction equal (chain successor successor)))) successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.30291238700738177,
            "num_unique_values": 106,
            "num_values_explored": 218,
            "solution": "(disjunction (transpose successor) (recursive (chain successor (chain successor successor)) (chain successor (chain successor successor)) successor))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False, False, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False, False, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False, False, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False, False, False,  True, False,\n        False],\n       [False, False, False, False,  True, False, False, False,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (recursive (chain successor (chain successor successor)) (chain successor (chain successor successor)) successor))\n)",
            "task_solution": "(disjunction (transpose successor) (recursive (chain successor (chain successor successor)) (chain successor (chain successor successor)) successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.46459199802484363,
            "num_unique_values": 160,
            "num_values_explored": 352,
            "solution": "(recursive (disjunction (transpose (chain successor (disjunction successor (transpose successor)))) (chain (transpose successor) (chain zero (chain successor successor)))) successor zero)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(chain (disjunction successor (transpose successor)) (disjunction zero (disjunction (transpose successor) (chain zero (chain successor successor)))))\n)",
            "task_solution": "(chain (disjunction successor (transpose successor)) (disjunction zero (disjunction (transpose successor) (chain zero (chain successor successor)))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3297271280316636,
            "num_unique_values": 106,
            "num_values_explored": 254,
            "solution": "(disjunction zero (chain (recursive (chain (disjunction zero successor) successor) (transpose successor) (chain successor successor)) successor))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False]])],\n    solution=(disjunction zero (chain (recursive (chain (disjunction zero successor) successor) (transpose successor) (chain successor successor)) successor))\n)",
            "task_solution": "(disjunction zero (chain (recursive (chain (disjunction zero successor) successor) (transpose successor) (chain successor successor)) successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 15.04170655499911,
            "num_unique_values": 1726,
            "num_values_explored": 13907,
            "solution": "(recursive successor successor (chain (transpose (chain (disjunction zero successor) (disjunction successor equal))) (chain zero (recursive equal successor equal))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False,  True, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False,  True, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False,  True, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (recursive (transpose (chain zero (chain successor successor))) (disjunction successor equal) (transpose successor)))\n)",
            "task_solution": "(recursive successor successor (recursive (transpose (chain zero (chain successor successor))) (disjunction successor equal) (transpose successor)))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3917489830055274,
            "num_unique_values": 147,
            "num_values_explored": 288,
            "solution": "(disjunction successor (recursive (transpose successor) (transpose (chain successor successor)) (disjunction (transpose successor) (chain zero successor))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True,  True,  True, False,  True, False,\n        False],\n       [False,  True, False,  True,  True,  True,  True, False,  True,\n        False],\n       [ True, False,  True, False,  True,  True,  True,  True, False,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(disjunction successor (recursive (transpose successor) (transpose (chain successor successor)) (disjunction (transpose successor) (chain zero successor))))\n)",
            "task_solution": "(disjunction successor (recursive (transpose successor) (transpose (chain successor successor)) (disjunction (transpose successor) (chain zero successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.2916227250243537,
            "num_unique_values": 104,
            "num_values_explored": 196,
            "solution": "(chain (transpose (recursive (disjunction (transpose successor) (chain successor (chain successor successor))) equal successor)) (recursive equal (transpose successor) zero))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False, False, False,  True,  True,  True, False,  True,\n         True],\n       [ True, False, False, False, False,  True,  True, False, False,\n         True],\n       [ True, False, False, False, False, False,  True, False, False,\n        False]])],\n    solution=(recursive (recursive (disjunction successor (transpose (chain successor (chain successor successor)))) successor equal) (transpose successor) zero)\n)",
            "task_solution": "(recursive (recursive (disjunction successor (transpose (chain successor (chain successor successor)))) successor equal) (transpose successor) zero)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3712651780224405,
            "num_unique_values": 136,
            "num_values_explored": 263,
            "solution": "(chain successor (disjunction successor (chain (recursive (transpose zero) (recursive equal (transpose successor) successor) (transpose (chain successor successor))) successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive successor (chain (recursive equal (transpose successor) successor) zero) (transpose (chain successor successor))))\n)",
            "task_solution": "(chain successor (recursive successor (chain (recursive equal (transpose successor) successor) zero) (transpose (chain successor successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.5543706580065191,
            "num_unique_values": 167,
            "num_values_explored": 364,
            "solution": "(transpose (chain (recursive successor zero (transpose successor)) (chain (disjunction (transpose (chain successor successor)) successor) successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False, False,  True, False, False, False,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n        False],\n       [ True, False, False, False,  True, False, False,  True, False,\n        False],\n       [ True, False, False, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False, False, False, False,  True, False, False,\n        False]])],\n    solution=(transpose (chain (recursive successor zero (transpose successor)) (chain (disjunction successor (transpose (chain successor successor))) successor)))\n)",
            "task_solution": "(transpose (chain (recursive successor zero (transpose successor)) (chain (disjunction successor (transpose (chain successor successor))) successor)))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3473992889630608,
            "num_unique_values": 126,
            "num_values_explored": 241,
            "solution": "(transpose (disjunction equal (chain successor (recursive (disjunction successor (transpose (chain successor successor))) (transpose successor) zero))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True, False,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True, False,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True, False,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True]])],\n    solution=(transpose (disjunction equal (chain successor (recursive (disjunction successor (transpose (chain successor successor))) (transpose successor) zero))))\n)",
            "task_solution": "(transpose (disjunction equal (chain successor (recursive (disjunction successor (transpose (chain successor successor))) (transpose successor) zero))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.324229613004718,
            "num_unique_values": 114,
            "num_values_explored": 231,
            "solution": "(disjunction successor (chain (transpose (disjunction equal (recursive successor successor (transpose (recursive successor successor equal))))) zero))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [ True, False, False, False, False,  True, False, False, False,\n        False],\n       [ True, False, False, False, False, False,  True, False, False,\n        False],\n       [ True, False, False, False, False, False, False,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n         True],\n       [ True, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction zero (disjunction successor (transpose (chain zero (recursive successor successor (recursive (transpose successor) equal successor))))))\n)",
            "task_solution": "(disjunction zero (disjunction successor (transpose (chain zero (recursive successor successor (recursive (transpose successor) equal successor))))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.20506164099788293,
            "num_unique_values": 73,
            "num_values_explored": 153,
            "solution": "(disjunction (recursive equal successor equal) (chain (recursive successor (disjunction (transpose successor) (chain successor successor)) successor) successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n         True]])],\n    solution=(recursive (recursive equal successor equal) (transpose successor) (chain (transpose successor) (chain successor (chain successor successor))))\n)",
            "task_solution": "(recursive (recursive equal successor equal) (transpose successor) (chain (transpose successor) (chain successor (chain successor successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.33520787802990526,
            "num_unique_values": 126,
            "num_values_explored": 245,
            "solution": "(transpose (chain (recursive equal (disjunction successor equal) (chain successor (chain successor successor))) (disjunction zero successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True, False,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(transpose (chain (recursive equal (disjunction successor equal) (chain successor (chain successor successor))) (disjunction zero successor)))\n)",
            "task_solution": "(transpose (chain (recursive equal (disjunction successor equal) (chain successor (chain successor successor))) (disjunction zero successor)))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3750607809633948,
            "num_unique_values": 147,
            "num_values_explored": 284,
            "solution": "(disjunction equal (recursive successor successor (recursive (transpose successor) (recursive successor (chain successor successor) successor) successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n         True],\n       [False, False, False, False, False,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (recursive successor successor (recursive (transpose successor) (recursive successor (chain successor successor) successor) successor)))\n)",
            "task_solution": "(disjunction equal (recursive successor successor (recursive (transpose successor) (recursive successor (chain successor successor) successor) successor)))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.41216538404114544,
            "num_unique_values": 156,
            "num_values_explored": 293,
            "solution": "(recursive (recursive equal (chain successor (chain successor (chain successor successor))) (recursive equal successor equal)) equal (recursive successor equal successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (recursive equal successor (transpose (chain successor (chain successor successor)))) equal (recursive successor equal successor))\n)",
            "task_solution": "(recursive (recursive equal successor (transpose (chain successor (chain successor successor)))) equal (recursive successor equal successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.24296746600884944,
            "num_unique_values": 85,
            "num_values_explored": 171,
            "solution": "(recursive (transpose successor) (disjunction equal (recursive successor equal successor)) (disjunction (chain zero successor) (transpose (chain successor successor))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (recursive successor equal successor) (disjunction (chain zero successor) (transpose (chain successor successor))))\n)",
            "task_solution": "(recursive (transpose successor) (recursive successor equal successor) (disjunction (chain zero successor) (transpose (chain successor successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.19374952500220388,
            "num_unique_values": 66,
            "num_values_explored": 151,
            "solution": "(disjunction equal (chain (recursive (disjunction zero successor) (transpose successor) zero) (disjunction equal (chain successor successor))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True, False,  True, False,  True,  True, False,  True, False,\n        False],\n       [ True, False,  True, False, False,  True,  True, False,  True,\n        False],\n       [ True, False,  True, False, False, False,  True,  True, False,\n         True],\n       [ True, False,  True, False, False, False, False,  True,  True,\n        False],\n       [ True, False,  True, False, False, False, False, False,  True,\n         True],\n       [ True, False,  True, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain (recursive (disjunction zero successor) (transpose successor) zero) (disjunction equal (chain successor successor))))\n)",
            "task_solution": "(disjunction equal (chain (recursive (disjunction zero successor) (transpose successor) zero) (disjunction equal (chain successor successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3582793759997003,
            "num_unique_values": 117,
            "num_values_explored": 248,
            "solution": "(recursive (recursive equal (transpose successor) successor) successor (recursive zero (transpose successor) (transpose (chain successor successor))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False,  True, False, False,\n         True],\n       [ True,  True, False,  True, False, False,  True, False, False,\n         True],\n       [ True, False,  True,  True, False, False,  True, False, False,\n         True],\n       [ True,  True, False,  True, False, False,  True, False, False,\n         True],\n       [ True, False,  True,  True,  True, False,  True, False, False,\n         True],\n       [ True,  True, False,  True, False,  True,  True, False, False,\n         True],\n       [ True, False,  True,  True,  True, False,  True, False, False,\n         True],\n       [ True,  True, False,  True, False,  True,  True,  True, False,\n         True],\n       [ True, False,  True,  True,  True, False,  True, False,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(recursive (recursive equal (transpose successor) successor) successor (recursive zero (transpose successor) (transpose (chain successor successor))))\n)",
            "task_solution": "(recursive (recursive equal (transpose successor) successor) successor (recursive zero (transpose successor) (transpose (chain successor successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.2730541540076956,
            "num_unique_values": 97,
            "num_values_explored": 201,
            "solution": "(chain (recursive (transpose successor) (chain successor successor) (chain (transpose successor) (recursive successor successor equal))) successor)",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (recursive (transpose successor) (chain successor successor) (chain (transpose successor) (recursive successor successor equal))) successor)\n)",
            "task_solution": "(chain (recursive (transpose successor) (chain successor successor) (chain (transpose successor) (recursive successor successor equal))) successor)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.33266292401822284,
            "num_unique_values": 116,
            "num_values_explored": 238,
            "solution": "(recursive (chain (disjunction zero (chain successor successor)) (chain (recursive equal (transpose successor) zero) successor)) zero (transpose successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n        False],\n       [False,  True, False, False, False, False,  True, False, False,\n        False],\n       [False,  True, False, False, False, False, False,  True, False,\n        False],\n       [False,  True, False, False, False, False, False, False,  True,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n         True],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (chain successor (chain (recursive equal (transpose successor) zero) successor))) zero (transpose successor))\n)",
            "task_solution": "(recursive (chain successor (chain successor (chain (recursive equal (transpose successor) zero) successor))) zero (transpose successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.5390705210156739,
            "num_unique_values": 199,
            "num_values_explored": 409,
            "solution": "(recursive equal (recursive (chain (transpose successor) successor) successor (chain successor (chain successor successor))) (transpose successor))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive (chain (transpose successor) successor) successor (chain successor (chain successor successor))) (transpose successor))\n)",
            "task_solution": "(recursive equal (recursive (chain (transpose successor) successor) successor (chain successor (chain successor successor))) (transpose successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.5064172480488196,
            "num_unique_values": 190,
            "num_values_explored": 386,
            "solution": "(disjunction successor (recursive equal (transpose (chain successor (chain successor successor))) (recursive equal (transpose successor) successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True,  True,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True,  True,  True, False,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(disjunction successor (recursive equal (transpose (chain successor (chain successor successor))) (recursive equal (transpose successor) successor)))\n)",
            "task_solution": "(disjunction successor (recursive equal (transpose (chain successor (chain successor successor))) (recursive equal (transpose successor) successor)))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3092389249941334,
            "num_unique_values": 118,
            "num_values_explored": 222,
            "solution": "(recursive (transpose successor) (recursive successor successor equal) (recursive successor (chain successor (chain successor successor)) successor))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (recursive successor successor equal) (recursive successor (chain successor (chain successor successor)) successor))\n)",
            "task_solution": "(recursive (transpose successor) (recursive successor successor equal) (recursive successor (chain successor (chain successor successor)) successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.4032493600388989,
            "num_unique_values": 140,
            "num_values_explored": 282,
            "solution": "(chain (disjunction zero successor) (disjunction equal (chain successor (chain (disjunction successor equal) (chain successor successor)))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True, False, False,  True,  True, False, False,\n        False],\n       [False, False, False,  True, False, False,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False, False,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction zero successor) (disjunction equal (chain successor (chain successor (chain successor (disjunction successor equal))))))\n)",
            "task_solution": "(chain (disjunction zero successor) (disjunction equal (chain successor (chain successor (chain successor (disjunction successor equal))))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.38256664300570264,
            "num_unique_values": 146,
            "num_values_explored": 289,
            "solution": "(disjunction zero (recursive (recursive successor zero (transpose successor)) (recursive (chain successor successor) equal (chain successor successor)) equal))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction zero (recursive successor (recursive (chain (disjunction zero successor) successor) equal (chain successor successor)) equal))\n)",
            "task_solution": "(disjunction zero (recursive successor (recursive (chain (disjunction zero successor) successor) equal (chain successor successor)) equal))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.2676534280180931,
            "num_unique_values": 86,
            "num_values_explored": 212,
            "solution": "(transpose (recursive (chain (transpose successor) (chain zero (disjunction zero successor))) (transpose (chain successor successor)) (transpose successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (transpose (disjunction zero successor)) (chain zero successor)) (transpose successor) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (chain (transpose (disjunction zero successor)) (chain zero successor)) (transpose successor) (transpose (chain successor successor)))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 2.25926422100747,
            "num_unique_values": 582,
            "num_values_explored": 1950,
            "solution": "(chain (recursive equal successor (recursive (chain successor (chain successor (chain successor (disjunction successor equal)))) successor (transpose (chain successor successor)))) successor)",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False,  True, False,  True,  True, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive equal (chain successor (transpose (disjunction successor equal))) (chain successor (chain successor successor))) successor)\n)",
            "task_solution": "(chain (recursive equal (chain successor (transpose (disjunction successor equal))) (chain successor (chain successor successor))) successor)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.2669155540061183,
            "num_unique_values": 86,
            "num_values_explored": 181,
            "solution": "(transpose (disjunction (chain successor (recursive successor equal successor)) (chain zero (recursive equal successor (transpose successor)))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [ True, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [ True, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(transpose (disjunction (recursive (chain successor successor) equal successor) (chain zero (recursive equal successor (transpose successor)))))\n)",
            "task_solution": "(transpose (disjunction (recursive (chain successor successor) equal successor) (chain zero (recursive equal successor (transpose successor)))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.33804477500962093,
            "num_unique_values": 118,
            "num_values_explored": 236,
            "solution": "(recursive (disjunction successor (recursive equal (recursive equal zero (transpose successor)) (chain successor successor))) successor zero)",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True,  True, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True,  True, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True,  True, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(recursive (disjunction successor (recursive equal (recursive equal zero (transpose successor)) (chain successor successor))) successor zero)\n)",
            "task_solution": "(recursive (disjunction successor (recursive equal (recursive equal zero (transpose successor)) (chain successor successor))) successor zero)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.31497743201907724,
            "num_unique_values": 124,
            "num_values_explored": 228,
            "solution": "(recursive equal (recursive (recursive equal successor equal) (transpose successor) zero) (transpose (disjunction zero (chain successor successor))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive equal (recursive (disjunction successor equal) (transpose successor) zero) (transpose (disjunction zero (chain successor successor))))\n)",
            "task_solution": "(recursive equal (recursive (disjunction successor equal) (transpose successor) zero) (transpose (disjunction zero (chain successor successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.2686038250103593,
            "num_unique_values": 97,
            "num_values_explored": 206,
            "solution": "(chain (disjunction successor (recursive equal (transpose successor) (chain (disjunction zero successor) successor))) (disjunction zero successor))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True,  True, False, False, False,\n        False],\n       [False, False,  True, False, False,  True,  True, False, False,\n        False],\n       [ True,  True, False,  True, False, False,  True,  True, False,\n        False],\n       [ True,  True, False, False,  True, False, False,  True,  True,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n         True],\n       [ True,  True, False,  True, False, False,  True, False, False,\n         True],\n       [ True,  True, False, False,  True, False, False,  True, False,\n        False]])],\n    solution=(chain (disjunction successor (recursive equal (transpose successor) (chain (disjunction zero successor) successor))) (disjunction zero successor))\n)",
            "task_solution": "(chain (disjunction successor (recursive equal (transpose successor) (chain (disjunction zero successor) successor))) (disjunction zero successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.35754494898719713,
            "num_unique_values": 129,
            "num_values_explored": 255,
            "solution": "(transpose (chain (disjunction successor (transpose (chain (disjunction equal successor) successor))) (disjunction zero (chain successor successor))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True, False,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True, False,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True, False,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n         True]])],\n    solution=(transpose (chain (disjunction successor (transpose (chain successor (disjunction successor equal)))) (disjunction zero (chain successor successor))))\n)",
            "task_solution": "(transpose (chain (disjunction successor (transpose (chain successor (disjunction successor equal)))) (disjunction zero (chain successor successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.41042902698973194,
            "num_unique_values": 163,
            "num_values_explored": 295,
            "solution": "(recursive successor (recursive equal (transpose (chain successor successor)) (transpose (chain successor (chain successor successor)))) successor)",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (recursive equal (transpose (chain successor successor)) (transpose (chain successor (chain successor successor)))) successor)\n)",
            "task_solution": "(recursive successor (recursive equal (transpose (chain successor successor)) (transpose (chain successor (chain successor successor)))) successor)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.40011609700741246,
            "num_unique_values": 157,
            "num_values_explored": 277,
            "solution": "(recursive (disjunction successor equal) successor (transpose (disjunction equal (recursive successor (transpose successor) (chain successor (chain successor successor))))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True, False,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (transpose (disjunction equal (recursive successor (transpose successor) (chain successor (chain successor successor))))))\n)",
            "task_solution": "(recursive equal successor (transpose (disjunction equal (recursive successor (transpose successor) (chain successor (chain successor successor))))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.23433716199360788,
            "num_unique_values": 77,
            "num_values_explored": 161,
            "solution": "(recursive (disjunction (transpose successor) (chain (recursive equal successor (chain successor successor)) successor)) zero (transpose successor))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (disjunction (transpose successor) (chain (recursive equal successor (chain successor successor)) successor)) zero (transpose successor))\n)",
            "task_solution": "(recursive (disjunction (transpose successor) (chain (recursive equal successor (chain successor successor)) successor)) zero (transpose successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.35175272799097,
            "num_unique_values": 121,
            "num_values_explored": 254,
            "solution": "(recursive (recursive (recursive successor zero (transpose successor)) (transpose successor) successor) (recursive successor successor equal) successor)",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (recursive (recursive successor zero (transpose successor)) (transpose successor) successor) (recursive successor successor equal) successor)\n)",
            "task_solution": "(recursive (recursive (recursive successor zero (transpose successor)) (transpose successor) successor) (recursive successor successor equal) successor)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.2945605940185487,
            "num_unique_values": 97,
            "num_values_explored": 201,
            "solution": "(chain (disjunction (chain successor successor) (recursive zero zero (transpose successor))) (chain successor (chain successor successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction (chain successor successor) (recursive zero zero (transpose successor))) (chain successor (chain successor successor)))\n)",
            "task_solution": "(chain (disjunction (chain successor successor) (recursive zero zero (transpose successor))) (chain successor (chain successor successor)))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.2773908050148748,
            "num_unique_values": 105,
            "num_values_explored": 199,
            "solution": "(chain (disjunction successor (transpose (chain zero successor))) (disjunction (recursive successor (transpose successor) equal) (recursive successor zero (recursive successor equal successor))))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (recursive successor equal successor) successor) (transpose (chain zero successor)) (recursive successor equal successor))\n)",
            "task_solution": "(recursive (chain (recursive successor equal successor) successor) (transpose (chain zero successor)) (recursive successor equal successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3116661969688721,
            "num_unique_values": 116,
            "num_values_explored": 217,
            "solution": "(recursive (disjunction equal (chain (transpose (chain successor successor)) (recursive successor (recursive successor (transpose successor) successor) (transpose successor)))) equal successor)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (transpose (disjunction equal (recursive successor (recursive successor (transpose successor) successor) (transpose successor)))) equal successor)\n)",
            "task_solution": "(recursive (transpose (disjunction equal (recursive successor (recursive successor (transpose successor) successor) (transpose successor)))) equal successor)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 1.1198443790199235,
            "num_unique_values": 303,
            "num_values_explored": 829,
            "solution": "(chain (recursive equal (chain successor successor) successor) (chain successor (chain successor (transpose (disjunction successor equal)))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain (recursive successor (chain successor successor) successor) (disjunction successor (transpose (disjunction successor equal)))))\n)",
            "task_solution": "(chain successor (chain (recursive successor (chain successor successor) successor) (disjunction successor (transpose (disjunction successor equal)))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.4215744230314158,
            "num_unique_values": 137,
            "num_values_explored": 294,
            "solution": "(chain (transpose successor) (chain (recursive successor successor (recursive successor zero (transpose successor))) (disjunction zero successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False, False, False,  True, False, False, False,\n        False],\n       [ True,  True, False, False, False, False,  True, False, False,\n        False],\n       [ True,  True, False, False, False, False, False,  True, False,\n        False],\n       [ True,  True, False, False, False, False, False, False,  True,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (transpose successor) (chain (recursive successor successor (recursive successor zero (transpose successor))) (disjunction zero successor)))\n)",
            "task_solution": "(chain (transpose successor) (chain (recursive successor successor (recursive successor zero (transpose successor))) (disjunction zero successor)))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.4084927230142057,
            "num_unique_values": 147,
            "num_values_explored": 286,
            "solution": "(disjunction equal (chain (disjunction (transpose successor) (chain successor (chain successor (chain successor successor)))) (chain successor (disjunction equal (transpose successor)))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False,  True,  True, False, False, False,\n        False],\n       [ True,  True, False, False, False,  True,  True, False, False,\n        False],\n       [False,  True,  True, False, False, False,  True,  True, False,\n        False],\n       [False, False,  True,  True, False, False, False,  True,  True,\n        False],\n       [False, False, False,  True,  True, False, False, False,  True,\n         True],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(recursive (transpose (disjunction successor equal)) (chain successor (chain successor (chain successor (chain successor successor)))) equal)\n)",
            "task_solution": "(recursive (transpose (disjunction successor equal)) (chain successor (chain successor (chain successor (chain successor successor)))) equal)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.2862472460255958,
            "num_unique_values": 96,
            "num_values_explored": 194,
            "solution": "(chain (recursive (recursive (transpose successor) (transpose successor) successor) (chain successor successor) (disjunction successor equal)) successor)",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(chain (recursive (recursive (transpose successor) (transpose successor) successor) (chain successor successor) (disjunction successor equal)) successor)\n)",
            "task_solution": "(chain (recursive (recursive (transpose successor) (transpose successor) successor) (chain successor successor) (disjunction successor equal)) successor)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 55.75248428399209,
            "num_unique_values": 2603,
            "num_values_explored": 50027,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction equal (recursive successor successor (recursive successor (recursive (chain successor successor) equal successor) successor))))\n)",
            "task_solution": "(transpose (disjunction equal (recursive successor successor (recursive successor (recursive (chain successor successor) equal successor) successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3474629229749553,
            "num_unique_values": 136,
            "num_values_explored": 261,
            "solution": "(chain (disjunction successor equal) (transpose (disjunction equal (recursive successor (chain successor (chain successor successor)) (chain successor (disjunction successor equal))))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(chain (disjunction successor equal) (transpose (disjunction equal (recursive successor (chain successor (chain successor successor)) successor))))\n)",
            "task_solution": "(chain (disjunction successor equal) (transpose (disjunction equal (recursive successor (chain successor (chain successor successor)) successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.24047471600351855,
            "num_unique_values": 81,
            "num_values_explored": 168,
            "solution": "(recursive (disjunction equal (chain (recursive (transpose successor) successor (recursive successor successor equal)) successor)) (chain successor successor) successor)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (chain (recursive (transpose successor) successor (recursive successor successor equal)) successor) (chain successor successor) successor)\n)",
            "task_solution": "(recursive (chain (recursive (transpose successor) successor (recursive successor successor equal)) successor) (chain successor successor) successor)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3146732629975304,
            "num_unique_values": 106,
            "num_values_explored": 233,
            "solution": "(disjunction (chain successor (transpose successor)) (chain (recursive zero (transpose successor) (transpose (chain successor successor))) (recursive successor successor equal)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (transpose successor)) (recursive zero (transpose successor) (transpose (chain successor successor))) (transpose successor))\n)",
            "task_solution": "(recursive (chain successor (transpose successor)) (recursive zero (transpose successor) (transpose (chain successor successor))) (transpose successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3098572660237551,
            "num_unique_values": 106,
            "num_values_explored": 213,
            "solution": "(disjunction (transpose (chain zero (chain successor successor))) (recursive successor (recursive successor successor (transpose successor)) successor))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (disjunction successor (transpose (chain zero (chain successor successor)))) (recursive successor successor (transpose successor)) successor)\n)",
            "task_solution": "(recursive (disjunction successor (transpose (chain zero (chain successor successor)))) (recursive successor successor (transpose successor)) successor)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.2316812769859098,
            "num_unique_values": 76,
            "num_values_explored": 166,
            "solution": "(recursive (disjunction successor (chain zero (recursive equal successor (transpose successor)))) (transpose (chain successor successor)) successor)",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True, False, False,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n        False],\n       [False,  True, False,  True,  True,  True, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [ True, False,  True,  True,  True, False,  True, False, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False]])],\n    solution=(recursive (disjunction successor (chain zero (recursive equal successor (transpose successor)))) (transpose (chain successor successor)) successor)\n)",
            "task_solution": "(recursive (disjunction successor (chain zero (recursive equal successor (transpose successor)))) (transpose (chain successor successor)) successor)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.8937937379814684,
            "num_unique_values": 279,
            "num_values_explored": 710,
            "solution": "(recursive (recursive successor (recursive equal zero (transpose successor)) successor) (transpose (chain successor (chain successor successor))) equal)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive successor (recursive equal (chain (recursive equal (transpose successor) (chain successor successor)) zero) (transpose successor)) successor)\n)",
            "task_solution": "(recursive successor (recursive equal (chain (recursive equal (transpose successor) (chain successor successor)) zero) (transpose successor)) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3168099509784952,
            "num_unique_values": 125,
            "num_values_explored": 220,
            "solution": "(recursive equal (transpose successor) (recursive (chain successor successor) equal (chain (disjunction zero (chain successor successor)) successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True,  True, False,  True, False,\n        False],\n       [ True, False,  True,  True, False,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True]])],\n    solution=(recursive equal (transpose successor) (recursive (chain successor successor) equal (chain (disjunction zero (chain successor successor)) successor)))\n)",
            "task_solution": "(recursive equal (transpose successor) (recursive (chain successor successor) equal (chain (disjunction zero (chain successor successor)) successor)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3047108559985645,
            "num_unique_values": 106,
            "num_values_explored": 215,
            "solution": "(disjunction (transpose (chain successor successor)) (recursive successor (recursive (chain successor successor) successor (chain successor successor)) successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False, False,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(disjunction (transpose (chain successor successor)) (recursive successor (recursive (chain successor successor) successor (chain successor successor)) successor))\n)",
            "task_solution": "(disjunction (transpose (chain successor successor)) (recursive successor (recursive (chain successor successor) successor (chain successor successor)) successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3953162810066715,
            "num_unique_values": 139,
            "num_values_explored": 282,
            "solution": "(chain (disjunction (recursive successor (transpose successor) successor) (recursive equal zero (transpose (chain successor successor)))) (transpose successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True,  True,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n        False]])],\n    solution=(chain (disjunction (recursive successor (transpose successor) successor) (recursive equal zero (transpose (chain successor successor)))) (transpose successor))\n)",
            "task_solution": "(chain (disjunction (recursive successor (transpose successor) successor) (recursive equal zero (transpose (chain successor successor)))) (transpose successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.377173129003495,
            "num_unique_values": 124,
            "num_values_explored": 234,
            "solution": "(recursive (disjunction successor (transpose (chain zero successor))) (chain successor successor) (chain successor (chain successor (transpose successor))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (disjunction successor (transpose (chain zero successor))) (chain successor successor) (chain successor (chain successor (transpose successor))))\n)",
            "task_solution": "(recursive (disjunction successor (transpose (chain zero successor))) (chain successor successor) (chain successor (chain successor (transpose successor))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.6961397670092992,
            "num_unique_values": 263,
            "num_values_explored": 571,
            "solution": "(chain successor (transpose (chain (disjunction zero (chain successor successor)) (chain successor (recursive equal (disjunction (transpose successor) (chain successor successor)) successor)))))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor successor (disjunction (transpose successor) (chain successor successor))) (transpose (chain successor (chain successor successor))))\n)",
            "task_solution": "(chain (recursive successor successor (disjunction (transpose successor) (chain successor successor))) (transpose (chain successor (chain successor successor))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.33517362194834277,
            "num_unique_values": 117,
            "num_values_explored": 221,
            "solution": "(recursive successor successor (recursive successor (disjunction (transpose successor) (chain successor (disjunction successor (chain successor successor)))) successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (recursive successor (disjunction (transpose successor) (chain successor (chain successor (disjunction successor equal)))) successor))\n)",
            "task_solution": "(recursive successor successor (recursive successor (disjunction (transpose successor) (chain successor (chain successor (disjunction successor equal)))) successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.398675923992414,
            "num_unique_values": 143,
            "num_values_explored": 303,
            "solution": "(chain (recursive (disjunction equal (chain successor (chain successor successor))) (transpose successor) (disjunction zero successor)) (disjunction equal (chain successor successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (disjunction (recursive equal equal successor) (chain successor (chain successor successor))) (disjunction equal (chain successor successor)))\n)",
            "task_solution": "(chain (disjunction (recursive equal equal successor) (chain successor (chain successor successor))) (disjunction equal (chain successor successor)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.476504800026305,
            "num_unique_values": 176,
            "num_values_explored": 351,
            "solution": "(chain successor (disjunction successor (disjunction equal (chain successor (disjunction successor (recursive (chain successor successor) (transpose successor) successor))))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True, False,  True,  True,  True,  True,  True, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain (disjunction equal (chain successor successor)) (disjunction equal (recursive successor equal (chain successor successor)))))\n)",
            "task_solution": "(chain successor (chain (disjunction equal (chain successor successor)) (disjunction equal (recursive successor equal (chain successor successor)))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3044230649829842,
            "num_unique_values": 110,
            "num_values_explored": 220,
            "solution": "(disjunction (transpose (recursive successor (transpose successor) successor)) (chain (disjunction equal (recursive (chain zero successor) (transpose successor) equal)) successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True, False, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False, False, False,  True, False,  True,\n        False],\n       [False, False,  True, False, False, False, False,  True, False,\n         True],\n       [False, False,  True, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (recursive (transpose successor) successor (transpose successor)) (recursive (chain zero (chain successor successor)) (transpose successor) equal))\n)",
            "task_solution": "(disjunction (recursive (transpose successor) successor (transpose successor)) (recursive (chain zero (chain successor successor)) (transpose successor) equal))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.31863532098941505,
            "num_unique_values": 121,
            "num_values_explored": 247,
            "solution": "(recursive (recursive equal (transpose (chain successor successor)) (transpose successor)) (transpose (chain successor successor)) (chain zero successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (recursive equal (transpose (chain successor successor)) (transpose successor)) (transpose (chain successor successor)) (chain zero successor))\n)",
            "task_solution": "(recursive (recursive equal (transpose (chain successor successor)) (transpose successor)) (transpose (chain successor successor)) (chain zero successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.6875353889772668,
            "num_unique_values": 243,
            "num_values_explored": 509,
            "solution": "(recursive equal (recursive successor (chain successor (chain successor successor)) (disjunction successor (transpose (disjunction successor equal)))) successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive successor (chain successor (chain successor successor)) (disjunction successor (transpose (disjunction successor equal)))) successor)\n)",
            "task_solution": "(recursive equal (recursive successor (chain successor (chain successor successor)) (disjunction successor (transpose (disjunction successor equal)))) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.7416900399839506,
            "num_unique_values": 258,
            "num_values_explored": 581,
            "solution": "(chain (recursive (chain successor successor) (transpose successor) (recursive zero (transpose successor) (transpose (chain successor successor)))) successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False,  True, False, False,  True,  True,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n         True],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False]])],\n    solution=(chain (recursive (chain successor successor) (transpose successor) (recursive zero (transpose successor) (transpose (chain successor successor)))) successor)\n)",
            "task_solution": "(chain (recursive (chain successor successor) (transpose successor) (recursive zero (transpose successor) (transpose (chain successor successor)))) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 1.2316259600338526,
            "num_unique_values": 316,
            "num_values_explored": 961,
            "solution": "(recursive (recursive (chain (recursive equal (transpose successor) successor) (disjunction zero successor)) successor zero) (recursive successor successor (transpose successor)) successor)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (recursive (disjunction zero successor) (transpose (chain successor successor)) equal) (recursive successor successor (transpose successor)) successor)\n)",
            "task_solution": "(recursive (recursive (disjunction zero successor) (transpose (chain successor successor)) equal) (recursive successor successor (transpose successor)) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.25254013802623376,
            "num_unique_values": 86,
            "num_values_explored": 190,
            "solution": "(transpose (disjunction (recursive successor (transpose successor) (chain successor successor)) (chain (disjunction (recursive successor successor equal) (transpose successor)) successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [ True,  True, False,  True, False, False,  True, False, False,\n         True],\n       [ True,  True,  True, False,  True, False, False,  True, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False,  True,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n         True],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(transpose (disjunction (recursive successor (transpose successor) (chain successor successor)) (recursive (chain (transpose successor) successor) successor equal)))\n)",
            "task_solution": "(transpose (disjunction (recursive successor (transpose successor) (chain successor successor)) (recursive (chain (transpose successor) successor) successor equal)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3705480340286158,
            "num_unique_values": 126,
            "num_values_explored": 264,
            "solution": "(transpose (disjunction (recursive successor (transpose successor) successor) (recursive (chain successor (chain successor successor)) zero (transpose successor))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True, False, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False, False, False,  True, False,  True, False,  True,\n        False],\n       [ True, False, False, False, False,  True, False,  True, False,\n         True],\n       [ True, False, False, False, False, False,  True, False,  True,\n        False]])],\n    solution=(transpose (disjunction (recursive successor (transpose successor) successor) (recursive (chain successor (chain successor successor)) zero (transpose successor))))\n)",
            "task_solution": "(transpose (disjunction (recursive successor (transpose successor) successor) (recursive (chain successor (chain successor successor)) zero (transpose successor))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.38947140699019656,
            "num_unique_values": 141,
            "num_values_explored": 256,
            "solution": "(chain (transpose (chain (disjunction successor equal) (recursive equal (recursive equal (chain successor successor) successor) successor))) (transpose (disjunction zero successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False]])],\n    solution=(transpose (chain successor (chain (disjunction successor equal) (recursive equal (recursive equal (chain successor successor) successor) successor))))\n)",
            "task_solution": "(transpose (chain successor (chain (disjunction successor equal) (recursive equal (recursive equal (chain successor successor) successor) successor))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.28649936796864495,
            "num_unique_values": 106,
            "num_values_explored": 222,
            "solution": "(disjunction zero (chain (recursive (recursive successor successor (transpose successor)) equal (chain successor (chain successor successor))) successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True,  True, False,  True,  True, False,\n         True],\n       [False,  True,  True, False,  True,  True, False,  True,  True,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction zero (chain (recursive (recursive successor successor (transpose successor)) equal (chain successor (chain successor successor))) successor))\n)",
            "task_solution": "(disjunction zero (chain (recursive (recursive successor successor (transpose successor)) equal (chain successor (chain successor successor))) successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.4859346619923599,
            "num_unique_values": 186,
            "num_values_explored": 369,
            "solution": "(disjunction equal (recursive successor (transpose (chain successor (chain successor (chain successor successor)))) (chain (transpose successor) (disjunction successor equal))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True, False,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True, False,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True, False,  True,  True,\n        False],\n       [False,  True,  True,  True, False,  True,  True, False,  True,\n         True],\n       [False, False,  True,  True,  True, False,  True,  True, False,\n         True]])],\n    solution=(disjunction equal (recursive successor (transpose (chain successor (chain successor (chain successor successor)))) (transpose (disjunction successor equal))))\n)",
            "task_solution": "(disjunction equal (recursive successor (transpose (chain successor (chain successor (chain successor successor)))) (transpose (disjunction successor equal))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.37596661399584264,
            "num_unique_values": 138,
            "num_values_explored": 271,
            "solution": "(chain (recursive (transpose successor) (recursive successor successor equal) (recursive successor successor (transpose (chain successor successor)))) successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True, False,  True,  True, False,  True,  True,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (recursive (transpose successor) (recursive successor successor equal) (recursive successor successor (transpose (chain successor successor)))) successor)\n)",
            "task_solution": "(chain (recursive (transpose successor) (recursive successor successor equal) (recursive successor successor (transpose (chain successor successor)))) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3984044140088372,
            "num_unique_values": 138,
            "num_values_explored": 256,
            "solution": "(chain (transpose successor) (disjunction zero (chain (recursive successor successor (recursive equal (chain successor successor) successor)) (recursive successor successor (transpose successor)))))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (transpose successor) (disjunction zero (chain (recursive successor successor (recursive equal (chain successor successor) successor)) successor)))\n)",
            "task_solution": "(chain (transpose successor) (disjunction zero (chain (recursive successor successor (recursive equal (chain successor successor) successor)) successor)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 68.90823715098668,
            "num_unique_values": 3791,
            "num_values_explored": 50095,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False]])],\n    solution=(recursive (recursive successor zero (transpose (chain successor successor))) (transpose successor) (recursive successor (chain successor successor) successor))\n)",
            "task_solution": "(recursive (recursive successor zero (transpose (chain successor successor))) (transpose successor) (recursive successor (chain successor successor) successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3623125809826888,
            "num_unique_values": 120,
            "num_values_explored": 238,
            "solution": "(recursive (chain (recursive successor equal (chain successor successor)) zero) (transpose (recursive successor successor equal)) (transpose successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (chain (recursive successor equal (chain successor successor)) zero) (recursive (transpose successor) equal successor) (transpose successor))\n)",
            "task_solution": "(recursive (chain (recursive successor equal (chain successor successor)) zero) (recursive (transpose successor) equal successor) (transpose successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.28597387997433543,
            "num_unique_values": 97,
            "num_values_explored": 220,
            "solution": "(chain (disjunction zero (chain (recursive (transpose successor) (disjunction successor (transpose successor)) zero) (chain successor successor))) successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False,  True, False, False, False,  True, False,\n        False],\n       [False, False, False,  True, False, False, False, False,  True,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n         True],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction zero (chain (recursive (transpose successor) (disjunction successor (transpose successor)) zero) (chain successor successor))) successor)\n)",
            "task_solution": "(chain (disjunction zero (chain (recursive (transpose successor) (disjunction successor (transpose successor)) zero) (chain successor successor))) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.2954175850027241,
            "num_unique_values": 120,
            "num_values_explored": 219,
            "solution": "(recursive equal (disjunction equal (recursive successor successor (recursive successor successor (transpose successor)))) (transpose (chain successor successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (disjunction equal (recursive successor successor (recursive successor successor (transpose successor)))) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive equal (disjunction equal (recursive successor successor (recursive successor successor (transpose successor)))) (transpose (chain successor successor)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.37951615400379524,
            "num_unique_values": 138,
            "num_values_explored": 280,
            "solution": "(chain successor (transpose (chain (recursive (recursive successor successor (transpose successor)) (transpose (chain successor successor)) successor) successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False,  True,  True, False,  True,\n         True],\n       [ True, False, False,  True,  True, False,  True,  True,  True,\n         True],\n       [False,  True,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (transpose (chain (recursive (recursive successor successor (transpose successor)) (transpose (chain successor successor)) successor) successor)))\n)",
            "task_solution": "(chain successor (transpose (chain (recursive (recursive successor successor (transpose successor)) (transpose (chain successor successor)) successor) successor)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.5553417880437337,
            "num_unique_values": 177,
            "num_values_explored": 390,
            "solution": "(chain (recursive (chain (transpose successor) zero) (disjunction successor (transpose successor)) (transpose (chain successor (chain successor successor)))) (chain successor successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (chain successor (recursive (transpose zero) (transpose (chain successor (chain successor successor))) (disjunction successor (transpose successor)))))\n)",
            "task_solution": "(transpose (chain successor (recursive (transpose zero) (transpose (chain successor (chain successor successor))) (disjunction successor (transpose successor)))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.283804462000262,
            "num_unique_values": 106,
            "num_values_explored": 211,
            "solution": "(disjunction equal (chain (transpose (recursive (chain successor (chain successor successor)) zero (disjunction successor (transpose successor)))) successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False, False, False,  True, False,  True, False,\n        False],\n       [False,  True, False, False, False, False,  True, False,  True,\n        False],\n       [False,  True, False, False, False, False, False,  True, False,\n         True]])],\n    solution=(disjunction equal (chain (recursive (transpose (chain successor (chain successor successor))) (disjunction successor (transpose successor)) zero) successor))\n)",
            "task_solution": "(disjunction equal (chain (recursive (transpose (chain successor (chain successor successor))) (disjunction successor (transpose successor)) zero) successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.43711132800672203,
            "num_unique_values": 167,
            "num_values_explored": 307,
            "solution": "(transpose (chain (recursive (recursive successor successor (transpose successor)) (transpose (disjunction successor equal)) (chain successor successor)) successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False]])],\n    solution=(transpose (chain (recursive (recursive successor successor (transpose successor)) (transpose (disjunction successor equal)) (chain successor successor)) successor))\n)",
            "task_solution": "(transpose (chain (recursive (recursive successor successor (transpose successor)) (transpose (disjunction successor equal)) (chain successor successor)) successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.22942616802174598,
            "num_unique_values": 78,
            "num_values_explored": 166,
            "solution": "(recursive (chain (disjunction equal (transpose successor)) (chain successor successor)) (disjunction zero successor) (transpose (chain successor successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True, False,  True,  True, False,  True,\n         True],\n       [False, False, False,  True,  True, False,  True,  True, False,\n         True],\n       [False, False, False, False,  True,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True, False,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (transpose (disjunction successor equal)) (chain successor successor)) (disjunction zero successor) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (chain (transpose (disjunction successor equal)) (chain successor successor)) (disjunction zero successor) (transpose (chain successor successor)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.2927229259512387,
            "num_unique_values": 101,
            "num_values_explored": 194,
            "solution": "(chain (transpose (recursive (chain (recursive successor equal successor) (chain successor successor)) zero successor)) (disjunction successor equal))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True]])],\n    solution=(chain (recursive (transpose (chain (recursive successor equal successor) (chain successor successor))) successor zero) (disjunction successor equal))\n)",
            "task_solution": "(chain (recursive (transpose (chain (recursive successor equal successor) (chain successor successor))) successor zero) (disjunction successor equal))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3433619679999538,
            "num_unique_values": 116,
            "num_values_explored": 241,
            "solution": "(recursive (chain successor (chain (recursive equal (transpose successor) zero) successor)) (transpose successor) (transpose (chain successor successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(recursive (chain successor (chain (recursive equal (transpose successor) zero) successor)) (transpose successor) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (chain successor (chain (recursive equal (transpose successor) zero) successor)) (transpose successor) (transpose (chain successor successor)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3223652869928628,
            "num_unique_values": 119,
            "num_values_explored": 235,
            "solution": "(recursive (disjunction successor (transpose (chain successor (disjunction successor (transpose successor))))) successor (transpose (recursive (chain successor successor) zero successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False,  True,  True, False,\n         True],\n       [ True,  True,  True, False,  True,  True, False,  True,  True,\n        False],\n       [ True, False,  True,  True, False,  True,  True, False,  True,\n         True],\n       [False,  True, False,  True,  True, False,  True,  True, False,\n         True],\n       [False, False,  True, False,  True,  True, False,  True,  True,\n        False],\n       [False, False, False,  True, False,  True,  True, False,  True,\n         True],\n       [False, False, False, False,  True, False,  True,  True, False,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain successor (disjunction successor (transpose successor)))) successor (recursive (transpose (chain successor successor)) successor zero))\n)",
            "task_solution": "(recursive (transpose (chain successor (disjunction successor (transpose successor)))) successor (recursive (transpose (chain successor successor)) successor zero))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.27645004098303616,
            "num_unique_values": 80,
            "num_values_explored": 163,
            "solution": "(recursive (disjunction (transpose successor) (chain zero (chain successor successor))) (recursive zero (transpose successor) (transpose successor)) successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (disjunction (transpose successor) (chain zero (chain successor successor))) (recursive zero (transpose successor) (transpose successor)) successor)\n)",
            "task_solution": "(recursive (disjunction (transpose successor) (chain zero (chain successor successor))) (recursive zero (transpose successor) (transpose successor)) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3917029169970192,
            "num_unique_values": 138,
            "num_values_explored": 288,
            "solution": "(chain successor (disjunction equal (disjunction (transpose (recursive successor equal successor)) (chain successor (recursive successor equal successor)))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (disjunction equal (disjunction (transpose successor) (recursive (chain successor successor) equal (recursive successor equal successor)))))\n)",
            "task_solution": "(chain successor (disjunction equal (disjunction (transpose successor) (recursive (chain successor successor) equal (recursive successor equal successor)))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.2625546669587493,
            "num_unique_values": 99,
            "num_values_explored": 205,
            "solution": "(chain (recursive successor (disjunction zero (chain successor (chain successor successor))) (disjunction successor (transpose successor))) (transpose successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor (chain (disjunction zero successor) (chain successor successor)) (disjunction successor (transpose successor))) (transpose successor))\n)",
            "task_solution": "(chain (recursive successor (chain (disjunction zero successor) (chain successor successor)) (disjunction successor (transpose successor))) (transpose successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3189402790158056,
            "num_unique_values": 109,
            "num_values_explored": 230,
            "solution": "(disjunction (chain zero successor) (transpose (chain (disjunction zero successor) (recursive (chain successor successor) successor (transpose successor)))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False]])],\n    solution=(disjunction (chain zero successor) (transpose (chain (disjunction zero successor) (recursive (chain successor successor) successor (transpose successor)))))\n)",
            "task_solution": "(disjunction (chain zero successor) (transpose (chain (disjunction zero successor) (recursive (chain successor successor) successor (transpose successor)))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.2960449119564146,
            "num_unique_values": 107,
            "num_values_explored": 211,
            "solution": "(disjunction equal (recursive (disjunction successor (transpose (disjunction successor (chain successor successor)))) (chain zero successor) (transpose successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True]])],\n    solution=(disjunction equal (recursive (disjunction successor (transpose (chain successor (disjunction successor equal)))) (chain zero successor) (transpose successor)))\n)",
            "task_solution": "(disjunction equal (recursive (disjunction successor (transpose (chain successor (disjunction successor equal)))) (chain zero successor) (transpose successor)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 1.9231600689818151,
            "num_unique_values": 432,
            "num_values_explored": 1614,
            "solution": "(recursive (disjunction (chain successor (chain successor (disjunction successor (transpose successor)))) (recursive (transpose successor) equal (chain zero successor))) (transpose successor) successor)",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(chain (disjunction (chain successor successor) (transpose (chain successor successor))) (recursive successor (transpose (disjunction zero successor)) successor))\n)",
            "task_solution": "(chain (disjunction (chain successor successor) (transpose (chain successor successor))) (recursive successor (transpose (disjunction zero successor)) successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 14.717561838042457,
            "num_unique_values": 1892,
            "num_values_explored": 13716,
            "solution": "(transpose (disjunction zero (chain (disjunction successor (transpose successor)) (transpose (chain zero (chain successor (chain successor (chain successor (chain successor successor)))))))))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain zero (recursive equal (disjunction (transpose successor) (chain zero successor)) (transpose (chain successor (chain successor successor)))))\n)",
            "task_solution": "(chain zero (recursive equal (disjunction (transpose successor) (chain zero successor)) (transpose (chain successor (chain successor successor)))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3899517719983123,
            "num_unique_values": 136,
            "num_values_explored": 268,
            "solution": "(chain (recursive (transpose successor) (recursive (transpose successor) (disjunction zero successor) (transpose successor)) (chain successor successor)) successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True,  True,\n        False],\n       [False,  True,  True,  True, False,  True,  True, False, False,\n         True]])],\n    solution=(chain (recursive (transpose successor) (recursive (transpose successor) (disjunction zero successor) (transpose successor)) (chain successor successor)) successor)\n)",
            "task_solution": "(chain (recursive (transpose successor) (recursive (transpose successor) (disjunction zero successor) (transpose successor)) (chain successor successor)) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 4.016484735999256,
            "num_unique_values": 783,
            "num_values_explored": 3597,
            "solution": "(transpose (chain (disjunction successor equal) (recursive successor (transpose successor) (disjunction zero (chain successor (chain successor successor))))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False, False,  True,  True, False, False,  True,  True,\n        False],\n       [ True,  True, False, False,  True,  True, False, False,  True,\n         True],\n       [False,  True,  True, False, False,  True,  True, False, False,\n        False],\n       [False, False,  True,  True, False, False,  True,  True, False,\n        False],\n       [False, False, False,  True,  True, False, False,  True,  True,\n        False],\n       [False, False, False, False,  True,  True, False, False,  True,\n         True],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False]])],\n    solution=(transpose (chain (disjunction successor equal) (recursive successor (transpose successor) (disjunction zero (chain successor (chain successor successor))))))\n)",
            "task_solution": "(transpose (chain (disjunction successor equal) (recursive successor (transpose successor) (disjunction zero (chain successor (chain successor successor))))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.37652462802361697,
            "num_unique_values": 137,
            "num_values_explored": 272,
            "solution": "(chain successor (chain successor (recursive (disjunction zero successor) (transpose successor) (transpose (disjunction zero (chain successor successor))))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True,  True, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (recursive (disjunction zero successor) (transpose successor) (transpose (disjunction zero (chain successor successor))))))\n)",
            "task_solution": "(chain successor (chain successor (recursive (disjunction zero successor) (transpose successor) (transpose (disjunction zero (chain successor successor))))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3633812180487439,
            "num_unique_values": 116,
            "num_values_explored": 242,
            "solution": "(recursive (transpose (chain (recursive successor (transpose successor) successor) (chain (disjunction zero successor) successor))) (transpose successor) zero)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True, False, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False, False, False,  True, False,  True, False,  True,\n        False],\n       [ True, False, False, False, False,  True, False,  True, False,\n         True],\n       [ True, False, False, False, False, False,  True, False,  True,\n        False]])],\n    solution=(recursive (transpose (chain (recursive successor (transpose successor) successor) (chain (disjunction zero successor) successor))) (transpose successor) zero)\n)",
            "task_solution": "(recursive (transpose (chain (recursive successor (transpose successor) successor) (chain (disjunction zero successor) successor))) (transpose successor) zero)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.2964130180189386,
            "num_unique_values": 96,
            "num_values_explored": 207,
            "solution": "(chain (disjunction (chain successor (chain successor successor)) (recursive equal (transpose successor) (recursive successor successor equal))) successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True, False, False,  True, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False,  True, False,\n        False],\n       [False,  True,  True,  True, False,  True, False, False,  True,\n        False],\n       [False,  True,  True,  True,  True, False,  True, False, False,\n         True],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(chain (disjunction (chain successor (chain successor successor)) (recursive equal (transpose successor) (recursive successor successor equal))) successor)\n)",
            "task_solution": "(chain (disjunction (chain successor (chain successor successor)) (recursive equal (transpose successor) (recursive successor successor equal))) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3221205300069414,
            "num_unique_values": 106,
            "num_values_explored": 226,
            "solution": "(disjunction zero (disjunction (transpose successor) (chain (disjunction successor (transpose (recursive successor successor equal))) (chain successor successor))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(disjunction zero (disjunction (transpose successor) (chain (disjunction successor (recursive (transpose successor) equal successor)) (chain successor successor))))\n)",
            "task_solution": "(disjunction zero (disjunction (transpose successor) (chain (disjunction successor (recursive (transpose successor) equal successor)) (chain successor successor))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.34456753300037235,
            "num_unique_values": 140,
            "num_values_explored": 235,
            "solution": "(chain (transpose (chain successor (disjunction equal (chain successor (recursive (chain successor successor) (transpose successor) successor))))) successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True,  True,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True,  True,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True]])],\n    solution=(chain (transpose (chain successor (disjunction equal (chain successor (recursive (chain successor successor) (transpose successor) successor))))) successor)\n)",
            "task_solution": "(chain (transpose (chain successor (disjunction equal (chain successor (recursive (chain successor successor) (transpose successor) successor))))) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.22213602298870683,
            "num_unique_values": 77,
            "num_values_explored": 162,
            "solution": "(recursive (chain (transpose (recursive (disjunction equal (chain zero successor)) successor (transpose successor))) zero) successor (transpose (chain successor successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False, False, False,  True,\n        False],\n       [ True, False,  True, False, False, False,  True, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False,  True,\n        False],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False,  True,\n        False],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (transpose (chain zero (disjunction successor (recursive equal successor (transpose successor))))) successor (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (transpose (chain zero (disjunction successor (recursive equal successor (transpose successor))))) successor (transpose (chain successor successor)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.36105792003218085,
            "num_unique_values": 143,
            "num_values_explored": 257,
            "solution": "(chain (transpose (disjunction successor equal)) (disjunction equal (recursive (chain successor (chain successor successor)) (transpose successor) (disjunction successor equal))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(disjunction equal (disjunction (transpose successor) (recursive (chain successor (chain successor successor)) (transpose successor) (disjunction successor equal))))\n)",
            "task_solution": "(disjunction equal (disjunction (transpose successor) (recursive (chain successor (chain successor successor)) (transpose successor) (disjunction successor equal))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.30693662900011986,
            "num_unique_values": 116,
            "num_values_explored": 230,
            "solution": "(recursive (disjunction successor (transpose (chain successor successor))) (transpose (disjunction successor equal)) (chain zero (chain successor successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False, False,  True, False, False, False,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(recursive (disjunction successor (transpose (chain successor successor))) (transpose successor) (chain zero (chain successor (disjunction successor equal))))\n)",
            "task_solution": "(recursive (disjunction successor (transpose (chain successor successor))) (transpose successor) (chain zero (chain successor (disjunction successor equal))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.5903136639972217,
            "num_unique_values": 218,
            "num_values_explored": 456,
            "solution": "(chain (disjunction equal (chain (disjunction zero successor) (disjunction successor (recursive equal successor (transpose (chain successor successor)))))) successor)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True, False,  True,  True,\n        False],\n       [False, False,  True,  True,  True, False,  True, False, False,\n         True],\n       [False, False, False,  True,  True,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction equal (chain (disjunction zero successor) (disjunction successor (recursive equal successor (transpose (chain successor successor)))))) successor)\n)",
            "task_solution": "(chain (disjunction equal (chain (disjunction zero successor) (disjunction successor (recursive equal successor (transpose (chain successor successor)))))) successor)",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.38648066302994266,
            "num_unique_values": 126,
            "num_values_explored": 266,
            "solution": "(transpose (chain (recursive (transpose successor) (transpose (chain successor successor)) zero) (chain (recursive successor successor (chain successor successor)) successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n         True],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (transpose (chain (recursive successor successor (chain successor successor)) successor)) (recursive successor zero (transpose (chain successor successor))))\n)",
            "task_solution": "(chain (transpose (chain (recursive successor successor (chain successor successor)) successor)) (recursive successor zero (transpose (chain successor successor))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.8377601359970868,
            "num_unique_values": 282,
            "num_values_explored": 697,
            "solution": "(recursive (transpose (chain successor successor)) (recursive (transpose successor) (chain successor successor) successor) (chain (disjunction zero successor) successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False,  True, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain successor successor)) (recursive (transpose successor) (chain successor successor) successor) (chain (disjunction zero successor) successor))\n)",
            "task_solution": "(recursive (transpose (chain successor successor)) (recursive (transpose successor) (chain successor successor) successor) (chain (disjunction zero successor) successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.27136107301339507,
            "num_unique_values": 96,
            "num_values_explored": 207,
            "solution": "(chain (recursive (chain successor (disjunction equal (chain successor successor))) (transpose successor) (disjunction zero successor)) (disjunction zero successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(chain (recursive (chain successor (disjunction equal (chain successor successor))) (transpose successor) (disjunction zero successor)) (disjunction zero successor))\n)",
            "task_solution": "(chain (recursive (chain successor (disjunction equal (chain successor successor))) (transpose successor) (disjunction zero successor)) (disjunction zero successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 13.090932907012757,
            "num_unique_values": 1143,
            "num_values_explored": 12919,
            "solution": "(disjunction zero (disjunction successor (transpose (recursive successor (transpose (disjunction successor equal)) (chain successor (recursive (transpose successor) (transpose successor) successor))))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction zero (disjunction (transpose successor) (chain successor (recursive equal (transpose (chain successor successor)) (recursive equal equal successor)))))\n)",
            "task_solution": "(disjunction zero (disjunction (transpose successor) (chain successor (recursive equal (transpose (chain successor successor)) (recursive equal equal successor)))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.3939600359881297,
            "num_unique_values": 137,
            "num_values_explored": 265,
            "solution": "(chain (transpose (chain successor (disjunction (chain successor successor) equal))) (recursive successor (disjunction zero (chain successor successor)) successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True]])],\n    solution=(chain (transpose (chain successor (disjunction equal (chain successor successor)))) (recursive successor (disjunction zero (chain successor successor)) successor))\n)",
            "task_solution": "(chain (transpose (chain successor (disjunction equal (chain successor successor)))) (recursive successor (disjunction zero (chain successor successor)) successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.3012020240421407,
            "num_unique_values": 107,
            "num_values_explored": 216,
            "solution": "(disjunction (recursive successor (chain zero successor) (transpose (disjunction successor equal))) (transpose (chain (disjunction zero successor) (disjunction (transpose successor) successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True, False,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True, False,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True, False,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(recursive (disjunction successor (transpose (chain (disjunction zero successor) (disjunction successor (transpose successor))))) (chain zero successor) (transpose successor))\n)",
            "task_solution": "(recursive (disjunction successor (transpose (chain (disjunction zero successor) (disjunction successor (transpose successor))))) (chain zero successor) (transpose successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.4769385749823414,
            "num_unique_values": 176,
            "num_values_explored": 331,
            "solution": "(chain (disjunction (chain (transpose successor) successor) (recursive (recursive successor successor equal) (chain (transpose successor) successor) (chain successor successor))) successor)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (transpose successor) (chain (recursive successor successor (recursive equal successor (transpose successor))) successor)) successor (transpose successor))\n)",
            "task_solution": "(recursive (chain (transpose successor) (chain (recursive successor successor (recursive equal successor (transpose successor))) successor)) successor (transpose successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.3335947719751857,
            "num_unique_values": 130,
            "num_values_explored": 245,
            "solution": "(transpose (disjunction (transpose (chain successor (chain successor successor))) (chain successor (chain (chain successor (recursive successor equal successor)) successor))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n         True],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False]])],\n    solution=(disjunction (chain successor (chain successor successor)) (transpose (chain successor (chain successor (chain (recursive successor equal successor) successor)))))\n)",
            "task_solution": "(disjunction (chain successor (chain successor successor)) (transpose (chain successor (chain successor (chain (recursive successor equal successor) successor)))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 70.0208025649772,
            "num_unique_values": 4384,
            "num_values_explored": 50092,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain successor (chain successor (recursive (transpose zero) (transpose successor) (recursive equal successor (chain successor successor))))))\n)",
            "task_solution": "(disjunction equal (chain successor (chain successor (recursive (transpose zero) (transpose successor) (recursive equal successor (chain successor successor))))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 1.1308718729997054,
            "num_unique_values": 326,
            "num_values_explored": 903,
            "solution": "(transpose (disjunction zero (chain (recursive successor successor (transpose successor)) (disjunction successor (recursive zero (transpose successor) (transpose successor))))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False]])],\n    solution=(transpose (disjunction zero (chain (recursive successor successor (transpose successor)) (disjunction successor (recursive zero (transpose successor) (transpose successor))))))\n)",
            "task_solution": "(transpose (disjunction zero (chain (recursive successor successor (transpose successor)) (disjunction successor (recursive zero (transpose successor) (transpose successor))))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.2819218109943904,
            "num_unique_values": 97,
            "num_values_explored": 211,
            "solution": "(chain (transpose (disjunction zero (chain successor successor))) (disjunction equal (chain zero (chain successor (recursive successor successor equal)))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(recursive (transpose (disjunction zero (chain successor successor))) equal (transpose (chain zero (recursive (chain successor successor) successor equal))))\n)",
            "task_solution": "(recursive (transpose (disjunction zero (chain successor successor))) equal (transpose (chain zero (recursive (chain successor successor) successor equal))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.4956547429901548,
            "num_unique_values": 176,
            "num_values_explored": 355,
            "solution": "(chain (transpose (disjunction successor (transpose (recursive successor (recursive zero zero (transpose (disjunction successor (chain successor successor)))) successor)))) successor)",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (recursive (disjunction successor (transpose successor)) (recursive zero zero (transpose (chain successor (disjunction successor equal)))) successor) successor)\n)",
            "task_solution": "(chain (recursive (disjunction successor (transpose successor)) (recursive zero zero (transpose (chain successor (disjunction successor equal)))) successor) successor)",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.3318669300060719,
            "num_unique_values": 117,
            "num_values_explored": 232,
            "solution": "(recursive (transpose (recursive (chain (disjunction zero (chain successor successor)) successor) (transpose (chain successor successor)) equal)) equal successor)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (recursive (transpose (chain (disjunction zero (chain successor successor)) successor)) equal (transpose (chain successor successor))) equal successor)\n)",
            "task_solution": "(recursive (recursive (transpose (chain (disjunction zero (chain successor successor)) successor)) equal (transpose (chain successor successor))) equal successor)",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.279082928027492,
            "num_unique_values": 103,
            "num_values_explored": 199,
            "solution": "(chain (disjunction successor (transpose (chain (disjunction zero successor) successor))) (chain (recursive (chain successor successor) zero successor) successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction successor (transpose (chain (disjunction zero successor) successor))) (chain (recursive (chain successor successor) zero successor) successor))\n)",
            "task_solution": "(chain (disjunction successor (transpose (chain (disjunction zero successor) successor))) (chain (recursive (chain successor successor) zero successor) successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.33698381000431255,
            "num_unique_values": 126,
            "num_values_explored": 241,
            "solution": "(transpose (disjunction (transpose successor) (chain (disjunction successor (transpose successor)) (recursive successor (recursive successor (chain successor successor) successor) successor))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True]])],\n    solution=(disjunction successor (transpose (chain (disjunction successor (transpose successor)) (recursive successor (recursive successor (chain successor successor) successor) successor))))\n)",
            "task_solution": "(disjunction successor (transpose (chain (disjunction successor (transpose successor)) (recursive successor (recursive successor (chain successor successor) successor) successor))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.3036608740221709,
            "num_unique_values": 116,
            "num_values_explored": 219,
            "solution": "(recursive (recursive (transpose successor) successor (transpose successor)) (transpose successor) (chain successor (chain successor (chain successor (transpose successor)))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True, False,  True,  True, False,\n         True],\n       [ True,  True,  True, False,  True,  True, False, False,  True,\n        False]])],\n    solution=(recursive (recursive (transpose successor) successor (transpose successor)) (transpose successor) (chain successor (chain successor (chain successor (transpose successor)))))\n)",
            "task_solution": "(recursive (recursive (transpose successor) successor (transpose successor)) (transpose successor) (chain successor (chain successor (chain successor (transpose successor)))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.27595044003101066,
            "num_unique_values": 106,
            "num_values_explored": 211,
            "solution": "(disjunction successor (chain (disjunction successor equal) (recursive (transpose (recursive zero (transpose successor) (transpose successor))) (transpose successor) successor)))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True, False, False,  True, False, False,\n        False],\n       [False,  True,  True, False, False,  True,  True,  True, False,\n        False],\n       [ True,  True, False, False,  True,  True, False, False,  True,\n        False],\n       [ True, False, False,  True,  True, False, False,  True,  True,\n         True],\n       [False, False, False,  True, False, False, False,  True, False,\n        False]])],\n    solution=(disjunction successor (chain (disjunction successor equal) (recursive (transpose (recursive zero (transpose successor) (transpose successor))) (transpose successor) successor)))\n)",
            "task_solution": "(disjunction successor (chain (disjunction successor equal) (recursive (transpose (recursive zero (transpose successor) (transpose successor))) (transpose successor) successor)))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.28149255900643766,
            "num_unique_values": 99,
            "num_values_explored": 199,
            "solution": "(chain (recursive (disjunction equal (chain successor successor)) (transpose successor) (chain (recursive zero (transpose successor) (transpose successor)) successor)) (chain successor successor))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction successor (transpose successor)) (chain successor (disjunction (chain successor successor) (recursive zero (transpose successor) (transpose successor)))))\n)",
            "task_solution": "(chain (disjunction successor (transpose successor)) (chain successor (disjunction (chain successor successor) (recursive zero (transpose successor) (transpose successor)))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.32874303200514987,
            "num_unique_values": 124,
            "num_values_explored": 219,
            "solution": "(recursive (recursive (recursive successor equal (chain successor successor)) successor zero) (recursive zero zero (recursive successor (transpose successor) successor)) (transpose successor))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (recursive (disjunction zero successor) equal (recursive (recursive equal successor (transpose successor)) (transpose successor) zero)) successor zero)\n)",
            "task_solution": "(recursive (recursive (disjunction zero successor) equal (recursive (recursive equal successor (transpose successor)) (transpose successor) zero)) successor zero)",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.3297200470115058,
            "num_unique_values": 116,
            "num_values_explored": 229,
            "solution": "(recursive successor (transpose (chain (recursive zero zero (transpose successor)) successor)) (chain (recursive successor successor (chain successor successor)) successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction successor (transpose (chain (recursive successor successor (chain successor successor)) (chain (recursive zero zero (transpose successor)) successor))))\n)",
            "task_solution": "(disjunction successor (transpose (chain (recursive successor successor (chain successor successor)) (chain (recursive zero zero (transpose successor)) successor))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.3923803739598952,
            "num_unique_values": 146,
            "num_values_explored": 286,
            "solution": "(disjunction (recursive equal successor (chain successor successor)) (recursive (chain successor (chain successor (chain successor successor))) successor equal))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True, False, False, False,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True, False, False, False,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True, False, False, False,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True, False, False, False,  True,\n         True],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n         True],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction (recursive equal successor (chain successor successor)) (recursive (chain successor (chain successor (chain successor successor))) successor equal))\n)",
            "task_solution": "(disjunction (recursive equal successor (chain successor successor)) (recursive (chain successor (chain successor (chain successor successor))) successor equal))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.7879485890152864,
            "num_unique_values": 236,
            "num_values_explored": 604,
            "solution": "(recursive (recursive (transpose (recursive (chain (transpose successor) (disjunction zero successor)) (chain successor successor) successor)) (transpose successor) zero) successor (transpose successor))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True, False, False,  True,  True,  True,  True,\n         True],\n       [ True,  True, False, False, False, False, False,  True,  True,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (recursive (recursive (chain (transpose successor) successor) successor (chain successor successor)) (transpose successor) zero) successor (transpose successor))\n)",
            "task_solution": "(recursive (recursive (recursive (chain (transpose successor) successor) successor (chain successor successor)) (transpose successor) zero) successor (transpose successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.5419395940261893,
            "num_unique_values": 176,
            "num_values_explored": 364,
            "solution": "(chain (disjunction equal (recursive successor (recursive equal (transpose successor) successor) (transpose (chain successor (chain successor successor))))) successor)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False,  True,  True, False, False,  True, False, False,\n         True],\n       [False, False, False,  True,  True,  True, False,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True, False,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n         True]])],\n    solution=(chain (disjunction equal (recursive successor (recursive equal (transpose successor) successor) (transpose (chain successor (chain successor successor))))) successor)\n)",
            "task_solution": "(chain (disjunction equal (recursive successor (recursive equal (transpose successor) successor) (transpose (chain successor (chain successor successor))))) successor)",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.48589876998448744,
            "num_unique_values": 159,
            "num_values_explored": 381,
            "solution": "(recursive (chain successor (recursive successor (transpose successor) successor)) (chain (recursive successor (transpose successor) successor) zero) (transpose successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (recursive successor (transpose successor) successor)) (chain (recursive successor (transpose successor) successor) zero) (transpose successor))\n)",
            "task_solution": "(recursive (chain successor (recursive successor (transpose successor) successor)) (chain (recursive successor (transpose successor) successor) zero) (transpose successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.21539640898117796,
            "num_unique_values": 79,
            "num_values_explored": 163,
            "solution": "(recursive (chain (transpose (chain successor successor)) successor) (recursive equal successor (chain successor successor)) (transpose (chain successor successor)))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (chain (transpose (chain successor successor)) successor) (recursive equal successor (chain successor successor)) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (chain (transpose (chain successor successor)) successor) (recursive equal successor (chain successor successor)) (transpose (chain successor successor)))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.5430281510343775,
            "num_unique_values": 198,
            "num_values_explored": 414,
            "solution": "(recursive (transpose (chain (disjunction successor equal) (recursive (transpose zero) (transpose successor) (transpose (chain successor successor))))) successor (disjunction successor equal))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (transpose (chain successor (chain successor (chain successor (chain successor (chain (recursive successor equal successor) successor)))))))\n)",
            "task_solution": "(chain successor (transpose (chain successor (chain successor (chain successor (chain successor (chain (recursive successor equal successor) successor)))))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.5152142629958689,
            "num_unique_values": 198,
            "num_values_explored": 386,
            "solution": "(recursive equal (transpose (chain successor (disjunction successor (transpose (chain successor (chain successor successor)))))) (recursive successor successor equal))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n         True]])],\n    solution=(recursive equal (transpose (chain successor (disjunction successor (transpose (chain successor (chain successor successor)))))) (recursive successor successor equal))\n)",
            "task_solution": "(recursive equal (transpose (chain successor (disjunction successor (transpose (chain successor (chain successor successor)))))) (recursive successor successor equal))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.507390389975626,
            "num_unique_values": 177,
            "num_values_explored": 394,
            "solution": "(chain successor (chain (disjunction (transpose successor) (recursive successor (recursive successor successor (chain successor successor)) (transpose successor))) (disjunction successor (transpose successor))))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (transpose (disjunction (chain successor successor) (recursive equal (transpose successor) (recursive successor successor (chain successor successor))))))\n)",
            "task_solution": "(chain successor (transpose (disjunction (chain successor successor) (recursive equal (transpose successor) (recursive successor successor (chain successor successor))))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 65.14510193897877,
            "num_unique_values": 4305,
            "num_values_explored": 50057,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal equal (recursive (transpose (recursive zero (transpose successor) (transpose successor))) (chain successor (chain successor successor)) successor))\n)",
            "task_solution": "(recursive equal equal (recursive (transpose (recursive zero (transpose successor) (transpose successor))) (chain successor (chain successor successor)) successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.5304593300097622,
            "num_unique_values": 196,
            "num_values_explored": 384,
            "solution": "(recursive equal (recursive (chain successor (chain successor (chain successor successor))) zero (transpose (chain successor successor))) (chain successor successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive successor (chain (recursive zero zero (recursive successor (transpose successor) successor)) successor) (transpose successor)) successor)\n)",
            "task_solution": "(recursive equal (recursive successor (chain (recursive zero zero (recursive successor (transpose successor) successor)) successor) (transpose successor)) successor)",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 42.43483159603784,
            "num_unique_values": 2570,
            "num_values_explored": 35834,
            "solution": "(chain successor (transpose (chain (disjunction zero successor) (chain (chain successor (disjunction equal (recursive successor successor (chain successor successor)))) successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (transpose (chain successor (chain successor (chain (disjunction equal (recursive successor successor (chain successor successor))) successor)))))\n)",
            "task_solution": "(chain successor (transpose (chain successor (chain successor (chain (disjunction equal (recursive successor successor (chain successor successor))) successor)))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.38431570801185444,
            "num_unique_values": 146,
            "num_values_explored": 272,
            "solution": "(disjunction equal (disjunction (recursive successor (chain successor successor) successor) (chain (disjunction (chain successor successor) (recursive successor equal successor)) successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (disjunction successor equal) (disjunction (recursive equal (chain successor successor) successor) (chain (recursive successor equal successor) successor)))\n)",
            "task_solution": "(chain (disjunction successor equal) (disjunction (recursive equal (chain successor successor) successor) (chain (recursive successor equal successor) successor)))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.3516700110048987,
            "num_unique_values": 139,
            "num_values_explored": 278,
            "solution": "(chain (transpose (chain successor successor)) (disjunction zero (recursive successor (disjunction successor (transpose (chain successor successor))) (transpose successor))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (transpose (chain successor successor)) (disjunction zero (recursive successor (disjunction successor (transpose (chain successor successor))) (transpose successor))))\n)",
            "task_solution": "(chain (transpose (chain successor successor)) (disjunction zero (recursive successor (disjunction successor (transpose (chain successor successor))) (transpose successor))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.24953803699463606,
            "num_unique_values": 77,
            "num_values_explored": 171,
            "solution": "(recursive (disjunction (transpose successor) (recursive (chain successor successor) (chain successor successor) successor)) (transpose (chain successor successor)) equal)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (disjunction (transpose successor) (recursive (chain successor successor) (chain successor successor) successor)) (transpose (chain successor successor)) equal)\n)",
            "task_solution": "(recursive (disjunction (transpose successor) (recursive (chain successor successor) (chain successor successor) successor)) (transpose (chain successor successor)) equal)",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.40404080401640385,
            "num_unique_values": 166,
            "num_values_explored": 291,
            "solution": "(transpose (disjunction equal (chain (recursive (chain successor successor) successor (recursive equal successor (transpose (chain successor successor)))) successor)))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n         True]])],\n    solution=(transpose (disjunction equal (chain successor (chain (recursive successor successor (recursive equal successor (transpose (chain successor successor)))) successor))))\n)",
            "task_solution": "(transpose (disjunction equal (chain successor (chain (recursive successor successor (recursive equal successor (transpose (chain successor successor)))) successor))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.39543320098891854,
            "num_unique_values": 156,
            "num_values_explored": 294,
            "solution": "(recursive (transpose (chain (disjunction zero (chain successor (chain successor successor))) successor)) (recursive successor successor equal) (transpose successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False]])],\n    solution=(recursive (transpose (chain (disjunction zero (chain successor (chain successor successor))) successor)) (recursive successor successor equal) (transpose successor))\n)",
            "task_solution": "(recursive (transpose (chain (disjunction zero (chain successor (chain successor successor))) successor)) (recursive successor successor equal) (transpose successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.38796674099285156,
            "num_unique_values": 146,
            "num_values_explored": 271,
            "solution": "(disjunction (chain successor successor) (transpose (chain (recursive successor successor (recursive equal (chain successor successor) (transpose successor))) successor)))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False]])],\n    solution=(disjunction (chain successor successor) (transpose (chain (recursive successor successor (recursive equal successor (transpose (chain successor successor)))) successor)))\n)",
            "task_solution": "(disjunction (chain successor successor) (transpose (chain (recursive successor successor (recursive equal successor (transpose (chain successor successor)))) successor)))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.978738211968448,
            "num_unique_values": 308,
            "num_values_explored": 736,
            "solution": "(disjunction equal (recursive (chain (recursive (chain successor successor) (transpose successor) successor) successor) (transpose successor) (recursive equal (transpose successor) successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(disjunction equal (chain (recursive (chain successor successor) (transpose successor) (disjunction successor (recursive equal (transpose successor) successor))) successor))\n)",
            "task_solution": "(disjunction equal (chain (recursive (chain successor successor) (transpose successor) (disjunction successor (recursive equal (transpose successor) successor))) successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 62.85811947402544,
            "num_unique_values": 3718,
            "num_values_explored": 50009,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (recursive (transpose successor) (disjunction successor (recursive equal (transpose successor) (transpose (chain successor successor)))) successor))\n)",
            "task_solution": "(recursive successor successor (recursive (transpose successor) (disjunction successor (recursive equal (transpose successor) (transpose (chain successor successor)))) successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.33740596898132935,
            "num_unique_values": 126,
            "num_values_explored": 248,
            "solution": "(transpose (disjunction zero (chain successor (recursive successor (transpose (disjunction zero successor)) (transpose (disjunction equal (chain successor successor)))))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(transpose (disjunction zero (chain successor (recursive successor (transpose (disjunction zero successor)) (transpose (disjunction equal (chain successor successor)))))))\n)",
            "task_solution": "(transpose (disjunction zero (chain successor (recursive successor (transpose (disjunction zero successor)) (transpose (disjunction equal (chain successor successor)))))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.31471480801701546,
            "num_unique_values": 116,
            "num_values_explored": 237,
            "solution": "(recursive (recursive (transpose successor) (transpose successor) (chain successor (chain successor successor))) successor (recursive (chain successor successor) zero successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True, False,  True,  True,  True, False, False,\n        False],\n       [ True, False,  True,  True, False, False,  True,  True, False,\n        False],\n       [ True, False, False, False,  True, False, False, False,  True,\n        False]])],\n    solution=(recursive (recursive (transpose successor) (transpose successor) (chain successor (chain successor successor))) successor (disjunction zero (chain successor successor)))\n)",
            "task_solution": "(recursive (recursive (transpose successor) (transpose successor) (chain successor (chain successor successor))) successor (disjunction zero (chain successor successor)))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.2693639739882201,
            "num_unique_values": 107,
            "num_values_explored": 205,
            "solution": "(disjunction equal (chain (recursive equal (recursive equal (chain successor successor) (recursive equal successor equal)) (chain successor successor)) successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n         True]])],\n    solution=(disjunction equal (chain (recursive equal (recursive equal (chain successor successor) (disjunction successor equal)) (chain successor successor)) successor))\n)",
            "task_solution": "(disjunction equal (chain (recursive equal (recursive equal (chain successor successor) (disjunction successor equal)) (chain successor successor)) successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.22809871204663068,
            "num_unique_values": 76,
            "num_values_explored": 168,
            "solution": "(recursive (chain (transpose successor) (disjunction (chain successor successor) equal)) successor (recursive (chain successor successor) successor (transpose successor)))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (chain (transpose successor) (disjunction equal (chain successor successor))) successor (recursive (chain successor successor) successor (transpose successor)))\n)",
            "task_solution": "(recursive (chain (transpose successor) (disjunction equal (chain successor successor))) successor (recursive (chain successor successor) successor (transpose successor)))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.41960314102470875,
            "num_unique_values": 159,
            "num_values_explored": 319,
            "solution": "(recursive equal successor (disjunction (chain (transpose successor) zero) (recursive successor (disjunction zero (chain successor successor)) (transpose successor))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False,  True, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False,  True, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False,  True, False,\n        False],\n       [ True, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (recursive (disjunction successor (transpose (chain zero successor))) (disjunction zero successor) (transpose (chain successor successor))))\n)",
            "task_solution": "(recursive equal successor (recursive (disjunction successor (transpose (chain zero successor))) (disjunction zero successor) (transpose (chain successor successor))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.34221628902014345,
            "num_unique_values": 136,
            "num_values_explored": 257,
            "solution": "(chain (disjunction (recursive equal (chain successor successor) successor) (recursive successor successor (transpose (chain successor successor)))) (transpose successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (disjunction (recursive equal (chain successor successor) successor) (recursive successor successor (transpose (chain successor successor)))) (transpose successor))\n)",
            "task_solution": "(chain (disjunction (recursive equal (chain successor successor) successor) (recursive successor successor (transpose (chain successor successor)))) (transpose successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.35017919598612934,
            "num_unique_values": 119,
            "num_values_explored": 240,
            "solution": "(recursive (disjunction (transpose successor) (chain (recursive (chain zero successor) (recursive successor equal successor) successor) successor)) successor successor)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False, False, False,  True, False, False, False,\n        False],\n       [ True,  True, False, False, False, False,  True, False, False,\n        False],\n       [False,  True, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (disjunction (transpose successor) (chain (recursive (chain zero successor) (recursive successor equal successor) successor) successor)) successor successor)\n)",
            "task_solution": "(recursive (disjunction (transpose successor) (chain (recursive (chain zero successor) (recursive successor equal successor) successor) successor)) successor successor)",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.39768879499752074,
            "num_unique_values": 147,
            "num_values_explored": 283,
            "solution": "(disjunction equal (chain successor (disjunction equal (chain (recursive successor (transpose successor) successor) (chain successor (chain successor successor))))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False,  True, False, False,\n        False],\n       [False, False,  True,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False,  True,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True,  True,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True,  True,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True,  True,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction successor (disjunction equal (chain successor (chain (recursive successor (transpose successor) successor) (chain successor (chain successor successor))))))\n)",
            "task_solution": "(disjunction successor (disjunction equal (chain successor (chain (recursive successor (transpose successor) successor) (chain successor (chain successor successor))))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.32774718396831304,
            "num_unique_values": 96,
            "num_values_explored": 209,
            "solution": "(chain (transpose (chain (disjunction equal (chain successor successor)) (recursive (chain successor successor) zero successor))) (disjunction zero successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False]])],\n    solution=(chain (transpose (chain (disjunction equal (chain successor successor)) (recursive (chain successor successor) zero successor))) (disjunction zero successor))\n)",
            "task_solution": "(chain (transpose (chain (disjunction equal (chain successor successor)) (recursive (chain successor successor) zero successor))) (disjunction zero successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.26212701795157045,
            "num_unique_values": 97,
            "num_values_explored": 195,
            "solution": "(chain (recursive (chain successor successor) (transpose (chain successor successor)) (chain successor (recursive equal (transpose successor) zero))) successor)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (recursive (chain successor successor) (transpose (chain successor successor)) (recursive (disjunction zero successor) (transpose successor) zero)) successor)\n)",
            "task_solution": "(chain (recursive (chain successor successor) (transpose (chain successor successor)) (recursive (disjunction zero successor) (transpose successor) zero)) successor)",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 64.10681523400126,
            "num_unique_values": 3018,
            "num_values_explored": 50067,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (recursive equal zero (transpose successor)) successor (chain successor (recursive successor (recursive zero (transpose successor) (transpose successor)) successor)))\n)",
            "task_solution": "(recursive (recursive equal zero (transpose successor)) successor (chain successor (recursive successor (recursive zero (transpose successor) (transpose successor)) successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 61.77426552801626,
            "num_unique_values": 3004,
            "num_values_explored": 50027,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True,  True, False, False, False,\n        False],\n       [False,  True,  True, False, False,  True,  True, False, False,\n        False],\n       [False, False,  True,  True, False, False,  True,  True, False,\n        False],\n       [False, False, False,  True, False, False, False,  True,  True,\n        False],\n       [ True, False, False, False,  True, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction equal (recursive successor (chain successor (chain successor (chain successor successor))) (recursive equal (chain successor successor) successor))))\n)",
            "task_solution": "(transpose (disjunction equal (recursive successor (chain successor (chain successor (chain successor successor))) (recursive equal (chain successor successor) successor))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.4196283739875071,
            "num_unique_values": 160,
            "num_values_explored": 311,
            "solution": "(recursive (recursive (transpose zero) (transpose successor) (recursive (chain zero (chain successor successor)) (transpose (chain successor successor)) successor)) (transpose successor) successor)",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (disjunction zero (chain (transpose successor) (chain zero (chain successor (chain successor (chain successor successor)))))) (transpose successor) successor)\n)",
            "task_solution": "(recursive (disjunction zero (chain (transpose successor) (chain zero (chain successor (chain successor (chain successor successor)))))) (transpose successor) successor)",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.39718357200035825,
            "num_unique_values": 146,
            "num_values_explored": 299,
            "solution": "(disjunction (transpose successor) (chain (chain successor (chain successor (recursive equal (transpose (chain successor successor)) zero))) (disjunction zero successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False, False, False,  True, False, False, False,\n        False],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False,  True, False,\n        False],\n       [False, False, False, False,  True, False, False, False,  True,\n        False],\n       [ True,  True, False, False, False,  True, False, False, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (chain successor (chain successor (chain (recursive equal (transpose (chain successor successor)) zero) (disjunction zero successor)))))\n)",
            "task_solution": "(disjunction (transpose successor) (chain successor (chain successor (chain (recursive equal (transpose (chain successor successor)) zero) (disjunction zero successor)))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 68.09131124801934,
            "num_unique_values": 4082,
            "num_values_explored": 50088,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive successor (transpose (chain successor successor)) (transpose (disjunction successor (recursive (chain successor successor) (transpose (chain successor successor)) successor))))\n)",
            "task_solution": "(recursive successor (transpose (chain successor successor)) (transpose (disjunction successor (recursive (chain successor successor) (transpose (chain successor successor)) successor))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 74.63359262200538,
            "num_unique_values": 4898,
            "num_values_explored": 50029,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (chain successor (disjunction successor (disjunction (transpose successor) (chain (recursive successor (transpose successor) successor) successor))))))\n)",
            "task_solution": "(chain successor (chain successor (chain successor (disjunction successor (disjunction (transpose successor) (chain (recursive successor (transpose successor) successor) successor))))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.36715409700991586,
            "num_unique_values": 138,
            "num_values_explored": 270,
            "solution": "(chain (recursive successor (recursive successor (chain (recursive successor successor (chain successor successor)) zero) equal) (transpose successor)) (transpose successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor (recursive successor (chain (recursive successor successor (chain successor successor)) zero) equal) (transpose successor)) (transpose successor))\n)",
            "task_solution": "(chain (recursive successor (recursive successor (chain (recursive successor successor (chain successor successor)) zero) equal) (transpose successor)) (transpose successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.2976451780414209,
            "num_unique_values": 106,
            "num_values_explored": 219,
            "solution": "(disjunction (chain (recursive successor (transpose successor) successor) zero) (recursive successor (transpose (disjunction zero (chain successor successor))) (transpose successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [ True, False, False, False, False, False,  True,  True,  True,\n         True]])],\n    solution=(disjunction (chain (recursive successor (transpose successor) successor) zero) (recursive successor (transpose (disjunction zero (chain successor successor))) (transpose successor)))\n)",
            "task_solution": "(disjunction (chain (recursive successor (transpose successor) successor) zero) (recursive successor (transpose (disjunction zero (chain successor successor))) (transpose successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 70.08861582702957,
            "num_unique_values": 4746,
            "num_values_explored": 50051,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n         True]])],\n    solution=(disjunction equal (recursive successor (transpose successor) (chain successor (chain successor (chain successor (recursive (transpose successor) (transpose successor) zero))))))\n)",
            "task_solution": "(disjunction equal (recursive successor (transpose successor) (chain successor (chain successor (chain successor (recursive (transpose successor) (transpose successor) zero))))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.41932988801272586,
            "num_unique_values": 136,
            "num_values_explored": 302,
            "solution": "(chain (disjunction zero (recursive (chain zero successor) (recursive equal (transpose successor) successor) (transpose successor))) (chain (disjunction zero successor) successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain zero (recursive successor successor equal)) (recursive equal (transpose successor) successor) (transpose (chain successor (chain successor successor))))\n)",
            "task_solution": "(recursive (chain zero (recursive successor successor equal)) (recursive equal (transpose successor) successor) (transpose (chain successor (chain successor successor))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.4294910639873706,
            "num_unique_values": 176,
            "num_values_explored": 312,
            "solution": "(chain successor (recursive equal (recursive (transpose (chain successor successor)) (recursive successor successor (recursive successor equal successor)) successor) successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False,  True, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False,  True,\n        False],\n       [ True,  True,  True,  True, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive equal (recursive (transpose (chain successor successor)) (recursive successor successor (recursive successor equal successor)) successor) successor))\n)",
            "task_solution": "(chain successor (recursive equal (recursive (transpose (chain successor successor)) (recursive successor successor (recursive successor equal successor)) successor) successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.3173000719980337,
            "num_unique_values": 118,
            "num_values_explored": 235,
            "solution": "(recursive equal (recursive zero (transpose (disjunction zero (chain successor successor))) (transpose successor)) (chain (recursive successor successor equal) successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True]])],\n    solution=(recursive equal (recursive zero (transpose (disjunction zero (chain successor successor))) (transpose successor)) (recursive (chain successor successor) successor equal))\n)",
            "task_solution": "(recursive equal (recursive zero (transpose (disjunction zero (chain successor successor))) (transpose successor)) (recursive (chain successor successor) successor equal))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.3286244450137019,
            "num_unique_values": 126,
            "num_values_explored": 237,
            "solution": "(transpose (disjunction equal (chain (recursive (disjunction equal (chain (recursive zero zero (transpose successor)) successor)) (transpose successor) successor) successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False,  True,\n        False],\n       [ True,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True,  True,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True,  True,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction equal (chain (recursive (disjunction equal (chain (recursive zero zero (transpose successor)) successor)) (transpose successor) successor) successor)))\n)",
            "task_solution": "(transpose (disjunction equal (chain (recursive (disjunction equal (chain (recursive zero zero (transpose successor)) successor)) (transpose successor) successor) successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 73.93137975898571,
            "num_unique_values": 4973,
            "num_values_explored": 50038,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [ True, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [ True, False, False, False, False,  True,  True, False,  True,\n        False],\n       [ True, False, False, False, False, False,  True,  True, False,\n        False],\n       [ True, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive successor (chain successor successor) (disjunction successor (transpose successor))) (recursive successor zero (recursive successor equal successor)))\n)",
            "task_solution": "(recursive equal (recursive successor (chain successor successor) (disjunction successor (transpose successor))) (recursive successor zero (recursive successor equal successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.321724116045516,
            "num_unique_values": 116,
            "num_values_explored": 231,
            "solution": "(recursive (chain successor (disjunction successor (recursive zero (transpose successor) (transpose successor)))) zero (transpose (chain successor (chain successor successor))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (disjunction successor (recursive zero (transpose successor) (transpose successor)))) zero (transpose (chain successor (chain successor successor))))\n)",
            "task_solution": "(recursive (chain successor (disjunction successor (recursive zero (transpose successor) (transpose successor)))) zero (transpose (chain successor (chain successor successor))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 61.981995071982965,
            "num_unique_values": 2854,
            "num_values_explored": 50018,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (disjunction zero (disjunction successor (transpose successor))) (recursive equal (recursive equal (transpose successor) (chain successor successor)) (transpose successor)))\n)",
            "task_solution": "(chain (disjunction zero (disjunction successor (transpose successor))) (recursive equal (recursive equal (transpose successor) (chain successor successor)) (transpose successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.7124314710381441,
            "num_unique_values": 243,
            "num_values_explored": 503,
            "solution": "(recursive (transpose (chain (recursive (chain successor (chain successor successor)) (transpose successor) (disjunction zero successor)) successor)) successor (transpose successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain (recursive (chain successor (chain successor successor)) (transpose successor) (disjunction zero successor)) successor)) successor (transpose successor))\n)",
            "task_solution": "(recursive (transpose (chain (recursive (chain successor (chain successor successor)) (transpose successor) (disjunction zero successor)) successor)) successor (transpose successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.3505149580305442,
            "num_unique_values": 129,
            "num_values_explored": 262,
            "solution": "(transpose (recursive (chain (disjunction (chain successor successor) (chain (transpose successor) zero)) (chain successor (chain successor successor))) zero successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False]])],\n    solution=(recursive (transpose (chain (disjunction (chain successor successor) (transpose (chain zero successor))) (chain successor (chain successor successor)))) successor zero)\n)",
            "task_solution": "(recursive (transpose (chain (disjunction (chain successor successor) (transpose (chain zero successor))) (chain successor (chain successor successor)))) successor zero)",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.2085162929724902,
            "num_unique_values": 73,
            "num_values_explored": 160,
            "solution": "(disjunction (transpose (chain zero successor)) (chain (recursive (disjunction (transpose successor) (chain successor successor)) (recursive successor equal successor) zero) successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True, False, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True, False, False,  True, False, False,\n        False],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False,  True, False, False, False,  True, False, False,  True,\n        False],\n       [False,  True, False, False, False, False,  True, False, False,\n         True],\n       [False,  True, False, False, False, False, False,  True, False,\n        False],\n       [False,  True, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction (chain (transpose successor) (disjunction zero successor)) (chain successor (chain (recursive (disjunction zero successor) (transpose successor) zero) successor)))\n)",
            "task_solution": "(disjunction (chain (transpose successor) (disjunction zero successor)) (chain successor (chain (recursive (disjunction zero successor) (transpose successor) zero) successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 74.8511827759794,
            "num_unique_values": 4574,
            "num_values_explored": 50006,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (recursive (chain successor successor) (transpose successor) successor) equal (recursive (transpose (chain successor (chain successor successor))) equal successor))\n)",
            "task_solution": "(recursive (recursive (chain successor successor) (transpose successor) successor) equal (recursive (transpose (chain successor (chain successor successor))) equal successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.35963610000908375,
            "num_unique_values": 126,
            "num_values_explored": 246,
            "solution": "(transpose (disjunction zero (chain (recursive successor (transpose (chain successor successor)) (disjunction zero successor)) (recursive successor zero (transpose successor)))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(transpose (disjunction zero (chain (recursive successor (transpose (chain successor successor)) (disjunction zero successor)) (recursive successor zero (transpose successor)))))\n)",
            "task_solution": "(transpose (disjunction zero (chain (recursive successor (transpose (chain successor successor)) (disjunction zero successor)) (recursive successor zero (transpose successor)))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 2.3906844860175624,
            "num_unique_values": 572,
            "num_values_explored": 2283,
            "solution": "(chain (recursive successor successor (recursive successor zero (transpose successor))) (recursive (chain (disjunction successor (transpose successor)) successor) (chain successor successor) successor))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction equal (chain successor (chain successor (recursive equal (transpose successor) zero)))) (recursive successor (chain successor successor) successor))\n)",
            "task_solution": "(chain (disjunction equal (chain successor (chain successor (recursive equal (transpose successor) zero)))) (recursive successor (chain successor successor) successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.7213334199623205,
            "num_unique_values": 270,
            "num_values_explored": 590,
            "solution": "(disjunction (transpose successor) (recursive equal successor (recursive (chain successor (chain successor successor)) successor (recursive successor successor (transpose successor)))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction successor (recursive equal (chain successor (chain successor successor)) (recursive successor (recursive successor successor (transpose successor)) successor))))\n)",
            "task_solution": "(transpose (disjunction successor (recursive equal (chain successor (chain successor successor)) (recursive successor (recursive successor successor (transpose successor)) successor))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 1.765132642001845,
            "num_unique_values": 406,
            "num_values_explored": 1570,
            "solution": "(chain (recursive (chain successor successor) (transpose successor) (recursive successor successor (recursive successor equal successor))) (disjunction zero (chain successor successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (recursive (chain successor successor) (transpose successor) (recursive successor (chain successor successor) successor)) (disjunction zero (chain successor successor)))\n)",
            "task_solution": "(chain (recursive (chain successor successor) (transpose successor) (recursive successor (chain successor successor) successor)) (disjunction zero (chain successor successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.38235306896967813,
            "num_unique_values": 136,
            "num_values_explored": 271,
            "solution": "(chain (recursive (disjunction equal (chain zero successor)) (transpose successor) (recursive (chain successor (chain successor successor)) successor equal)) successor)",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n        False],\n       [False,  True,  True, False, False, False,  True, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False]])],\n    solution=(chain (recursive (disjunction equal (chain zero successor)) (transpose successor) (recursive (chain successor (chain successor successor)) successor equal)) successor)\n)",
            "task_solution": "(chain (recursive (disjunction equal (chain zero successor)) (transpose successor) (recursive (chain successor (chain successor successor)) successor equal)) successor)",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.885752092988696,
            "num_unique_values": 279,
            "num_values_explored": 642,
            "solution": "(recursive (disjunction successor (transpose (chain (disjunction equal (recursive successor (transpose successor) equal)) successor))) (transpose (chain successor (chain successor successor))) equal)",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (recursive successor (transpose successor) (chain (disjunction zero successor) successor)) (transpose successor) (recursive (transpose successor) (transpose successor) zero))\n)",
            "task_solution": "(recursive (recursive successor (transpose successor) (chain (disjunction zero successor) successor)) (transpose successor) (recursive (transpose successor) (transpose successor) zero))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.3205284710275009,
            "num_unique_values": 116,
            "num_values_explored": 233,
            "solution": "(recursive (disjunction equal (recursive (chain zero successor) (transpose successor) (transpose (disjunction equal (chain successor successor))))) zero (transpose successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False,  True, False,  True,  True,  True, False,  True, False,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True, False,  True, False,  True,  True,  True, False,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(recursive (disjunction equal (recursive (chain zero successor) (transpose successor) (transpose (disjunction equal (chain successor successor))))) zero (transpose successor))\n)",
            "task_solution": "(recursive (disjunction equal (recursive (chain zero successor) (transpose successor) (transpose (disjunction equal (chain successor successor))))) zero (transpose successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.40686354803619906,
            "num_unique_values": 146,
            "num_values_explored": 291,
            "solution": "(disjunction (transpose successor) (chain successor (chain (recursive equal (transpose successor) zero) (recursive successor successor (transpose (chain successor successor))))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False,  True,  True, False,  True,  True,\n        False],\n       [ True,  True, False,  True,  True, False,  True,  True, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False,  True,  True, False,  True,  True, False,  True,  True,\n        False],\n       [False,  True, False,  True,  True, False,  True,  True, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False,  True, False, False,  True,  True, False,  True,  True,\n        False],\n       [False,  True, False, False,  True, False,  True,  True, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (chain successor (chain (recursive equal (transpose successor) zero) (recursive successor successor (transpose (chain successor successor))))))\n)",
            "task_solution": "(disjunction (transpose successor) (chain successor (chain (recursive equal (transpose successor) zero) (recursive successor successor (transpose (chain successor successor))))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 56.95876024698373,
            "num_unique_values": 2950,
            "num_values_explored": 50022,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) equal (recursive equal (disjunction successor (transpose successor)) (transpose (chain (disjunction zero successor) (chain successor successor)))))\n)",
            "task_solution": "(recursive (transpose successor) equal (recursive equal (disjunction successor (transpose successor)) (transpose (chain (disjunction zero successor) (chain successor successor)))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 64.3978149619652,
            "num_unique_values": 4110,
            "num_values_explored": 50094,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive successor (recursive successor (chain successor (chain successor successor)) (recursive successor (chain successor successor) successor)) successor))\n)",
            "task_solution": "(chain successor (recursive successor (recursive successor (chain successor (chain successor successor)) (recursive successor (chain successor successor) successor)) successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.5792716650175862,
            "num_unique_values": 228,
            "num_values_explored": 447,
            "solution": "(disjunction equal (chain (disjunction successor equal) (chain (recursive successor successor (recursive (recursive successor (transpose successor) successor) zero (transpose successor))) successor)))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n         True],\n       [False,  True, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain (recursive successor successor (recursive (disjunction equal (recursive successor (transpose successor) successor)) zero (transpose successor))) successor))\n)",
            "task_solution": "(disjunction equal (chain (recursive successor successor (recursive (disjunction equal (recursive successor (transpose successor) successor)) zero (transpose successor))) successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.2607097630389035,
            "num_unique_values": 98,
            "num_values_explored": 199,
            "solution": "(chain (recursive (recursive zero (transpose successor) (transpose successor)) zero (transpose successor)) (chain (recursive equal (transpose successor) zero) successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive (recursive zero (transpose successor) (transpose successor)) zero (transpose successor)) (chain (recursive equal (transpose successor) zero) successor))\n)",
            "task_solution": "(chain (recursive (recursive zero (transpose successor) (transpose successor)) zero (transpose successor)) (chain (recursive equal (transpose successor) zero) successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 68.61385402997257,
            "num_unique_values": 4479,
            "num_values_explored": 50014,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n         True],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False]])],\n    solution=(recursive (recursive successor (chain zero successor) (transpose successor)) (transpose successor) (recursive (chain successor successor) successor (chain successor successor)))\n)",
            "task_solution": "(recursive (recursive successor (chain zero successor) (transpose successor)) (transpose successor) (recursive (chain successor successor) successor (chain successor successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.8663867360446602,
            "num_unique_values": 286,
            "num_values_explored": 617,
            "solution": "(transpose (chain (disjunction zero (chain successor successor)) (chain successor (recursive successor (recursive zero (transpose successor) (transpose successor)) successor))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True,  True, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False]])],\n    solution=(transpose (chain (disjunction zero (chain successor successor)) (chain successor (recursive successor (recursive zero (transpose successor) (transpose successor)) successor))))\n)",
            "task_solution": "(transpose (chain (disjunction zero (chain successor successor)) (chain successor (recursive successor (recursive zero (transpose successor) (transpose successor)) successor))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.41821648605400696,
            "num_unique_values": 147,
            "num_values_explored": 282,
            "solution": "(disjunction equal (disjunction successor (recursive (recursive (transpose successor) (transpose successor) (chain successor successor)) (recursive successor successor equal) successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True, False,  True,  True, False,  True,  True,  True,\n        False],\n       [False,  True, False, False,  True, False, False,  True,  True,\n         True],\n       [False, False,  True, False, False,  True, False, False,  True,\n         True]])],\n    solution=(disjunction successor (transpose (disjunction equal (recursive (recursive successor successor (transpose (chain successor successor))) successor (recursive successor successor equal)))))\n)",
            "task_solution": "(disjunction successor (transpose (disjunction equal (recursive (recursive successor successor (transpose (chain successor successor))) successor (recursive successor successor equal)))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.29930737597169355,
            "num_unique_values": 116,
            "num_values_explored": 220,
            "solution": "(recursive (transpose successor) (recursive (chain successor successor) successor (recursive successor (chain successor successor) successor)) (transpose (chain successor successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True, False, False,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (recursive (chain successor successor) successor (recursive successor (chain successor successor) successor)) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (transpose successor) (recursive (chain successor successor) successor (recursive successor (chain successor successor) successor)) (transpose (chain successor successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.41840744903311133,
            "num_unique_values": 156,
            "num_values_explored": 320,
            "solution": "(recursive (transpose (chain (disjunction zero successor) (chain (disjunction successor equal) (recursive successor (transpose successor) (chain successor successor))))) zero successor)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True, False,  True,  True, False,  True,  True,\n        False],\n       [ True, False,  True,  True, False,  True,  True, False, False,\n        False],\n       [ True,  True, False,  True,  True, False,  True,  True, False,\n        False],\n       [False,  True,  True, False,  True,  True, False,  True,  True,\n        False],\n       [False, False,  True,  True, False,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True, False,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False]])],\n    solution=(transpose (chain (disjunction zero successor) (chain (disjunction successor equal) (recursive successor (transpose successor) (chain (disjunction zero successor) successor)))))\n)",
            "task_solution": "(transpose (chain (disjunction zero successor) (chain (disjunction successor equal) (recursive successor (transpose successor) (chain (disjunction zero successor) successor)))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.3242185069830157,
            "num_unique_values": 137,
            "num_values_explored": 247,
            "solution": "(chain (disjunction zero successor) (recursive equal (recursive (recursive successor (transpose successor) (chain successor successor)) zero (transpose successor)) successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction zero successor) (recursive equal (recursive (recursive successor (transpose successor) (chain successor successor)) zero (transpose successor)) successor))\n)",
            "task_solution": "(chain (disjunction zero successor) (recursive equal (recursive (recursive successor (transpose successor) (chain successor successor)) zero (transpose successor)) successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.34406360797584057,
            "num_unique_values": 126,
            "num_values_explored": 272,
            "solution": "(transpose (chain (recursive successor (chain (transpose successor) successor) successor) (recursive zero zero (recursive successor successor (chain successor successor)))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (chain (recursive successor (chain (transpose successor) successor) successor) (recursive zero zero (recursive successor successor (chain successor successor)))))\n)",
            "task_solution": "(transpose (chain (recursive successor (chain (transpose successor) successor) successor) (recursive zero zero (recursive successor successor (chain successor successor)))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.27724402298917994,
            "num_unique_values": 109,
            "num_values_explored": 214,
            "solution": "(disjunction zero (chain successor (disjunction successor (chain (recursive successor successor (chain successor successor)) (recursive successor zero (transpose successor))))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction zero (chain successor (chain (disjunction equal (recursive successor successor (chain successor successor))) (recursive successor zero (transpose successor)))))\n)",
            "task_solution": "(disjunction zero (chain successor (chain (disjunction equal (recursive successor successor (chain successor successor))) (recursive successor zero (transpose successor)))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.5458733729901724,
            "num_unique_values": 206,
            "num_values_explored": 431,
            "solution": "(transpose (chain successor (recursive (recursive (chain successor successor) zero successor) (transpose (chain successor (chain successor successor))) (transpose successor))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False, False,  True,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False]])],\n    solution=(transpose (chain successor (recursive (recursive (chain successor successor) zero successor) (transpose (chain successor (chain successor successor))) (transpose successor))))\n)",
            "task_solution": "(transpose (chain successor (recursive (recursive (chain successor successor) zero successor) (transpose (chain successor (chain successor successor))) (transpose successor))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.31695461296476424,
            "num_unique_values": 117,
            "num_values_explored": 241,
            "solution": "(recursive (chain successor (recursive (disjunction successor (transpose successor)) (recursive successor equal successor) zero)) successor (transpose (chain successor successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True,  True, False,  True,\n         True],\n       [ True,  True,  True,  True,  True, False,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True, False,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True,  True, False,\n         True],\n       [ True, False,  True, False,  True,  True, False,  True,  True,\n        False],\n       [ True, False,  True, False, False, False,  True, False,  True,\n         True],\n       [ True, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (disjunction successor (transpose successor))) successor (recursive (transpose (disjunction zero (chain successor successor))) zero (transpose successor)))\n)",
            "task_solution": "(recursive (chain successor (disjunction successor (transpose successor))) successor (recursive (transpose (disjunction zero (chain successor successor))) zero (transpose successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.38057446299353614,
            "num_unique_values": 147,
            "num_values_explored": 277,
            "solution": "(disjunction (transpose successor) (recursive successor successor (recursive successor (transpose (chain successor successor)) (chain successor (recursive successor equal successor)))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (recursive successor successor (recursive successor (transpose (chain successor successor)) (recursive (chain successor successor) equal successor))))\n)",
            "task_solution": "(disjunction (transpose successor) (recursive successor successor (recursive successor (transpose (chain successor successor)) (recursive (chain successor successor) equal successor))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.28085072099929675,
            "num_unique_values": 96,
            "num_values_explored": 199,
            "solution": "(chain (recursive (transpose successor) (disjunction successor (transpose successor)) zero) (recursive successor (transpose successor) (recursive (chain zero successor) (transpose successor) successor)))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n        False],\n       [ True,  True, False, False, False, False,  True, False, False,\n        False],\n       [False,  True, False, False, False, False, False,  True, False,\n        False],\n       [ True,  True, False, False, False, False, False, False,  True,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (recursive (transpose successor) (disjunction successor (transpose successor)) zero) (chain successor (recursive equal (transpose (chain successor successor)) zero)))\n)",
            "task_solution": "(chain (recursive (transpose successor) (disjunction successor (transpose successor)) zero) (chain successor (recursive equal (transpose (chain successor successor)) zero)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.5604007130023092,
            "num_unique_values": 204,
            "num_values_explored": 416,
            "solution": "(recursive (disjunction successor (recursive (disjunction equal (chain (disjunction zero (chain successor successor)) (chain successor successor))) (transpose successor) equal)) zero successor)",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (recursive (chain (disjunction equal (chain successor (chain successor successor))) (disjunction zero successor)) (transpose successor) equal) zero successor)\n)",
            "task_solution": "(recursive (recursive (chain (disjunction equal (chain successor (chain successor successor))) (disjunction zero successor)) (transpose successor) equal) zero successor)",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.43596215097932145,
            "num_unique_values": 156,
            "num_values_explored": 311,
            "solution": "(recursive successor (chain (transpose (chain (chain successor successor) (chain successor successor))) (recursive (chain successor successor) zero successor)) equal)",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive successor (chain (transpose (chain successor (chain successor (chain successor successor)))) (recursive (chain successor successor) zero successor)) equal)\n)",
            "task_solution": "(recursive successor (chain (transpose (chain successor (chain successor (chain successor successor)))) (recursive (chain successor successor) zero successor)) equal)",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.6714538389933296,
            "num_unique_values": 226,
            "num_values_explored": 542,
            "solution": "(disjunction (transpose successor) (recursive (recursive successor equal successor) (transpose (chain successor (chain successor (recursive equal (transpose successor) zero)))) successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (disjunction successor (transpose successor)) (transpose (disjunction equal (chain successor (chain successor (recursive equal (transpose successor) zero))))) successor)\n)",
            "task_solution": "(recursive (disjunction successor (transpose successor)) (transpose (disjunction equal (chain successor (chain successor (recursive equal (transpose successor) zero))))) successor)",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.3283801879733801,
            "num_unique_values": 117,
            "num_values_explored": 236,
            "solution": "(recursive (transpose (chain (disjunction zero (chain successor successor)) (recursive (chain successor successor) zero successor))) successor (chain (transpose successor) zero))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False]])],\n    solution=(recursive (transpose (chain (disjunction zero (chain successor (chain successor successor))) successor)) successor (disjunction successor (transpose (chain zero successor))))\n)",
            "task_solution": "(recursive (transpose (chain (disjunction zero (chain successor (chain successor successor))) successor)) successor (disjunction successor (transpose (chain zero successor))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.29035115300212055,
            "num_unique_values": 108,
            "num_values_explored": 223,
            "solution": "(disjunction (transpose successor) (chain successor (disjunction (chain successor (chain successor successor)) (recursive (transpose successor) successor (chain successor successor)))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False, False, False,  True, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False,  True,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n         True],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (chain successor (disjunction (chain successor (chain successor successor)) (recursive (transpose successor) successor (chain successor successor)))))\n)",
            "task_solution": "(disjunction (transpose successor) (chain successor (disjunction (chain successor (chain successor successor)) (recursive (transpose successor) successor (chain successor successor)))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.3852452790015377,
            "num_unique_values": 139,
            "num_values_explored": 288,
            "solution": "(chain (disjunction successor (disjunction equal (chain (recursive successor (disjunction zero (chain successor successor)) successor) (chain successor successor)))) successor)",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True, False,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True, False,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True, False,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction successor (disjunction equal (chain (recursive successor (disjunction zero (chain successor successor)) successor) (chain successor successor)))) successor)\n)",
            "task_solution": "(chain (disjunction successor (disjunction equal (chain (recursive successor (disjunction zero (chain successor successor)) successor) (chain successor successor)))) successor)",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 64.42100769397803,
            "num_unique_values": 3175,
            "num_values_explored": 50050,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor successor (transpose successor)) (transpose (chain (disjunction successor equal) (recursive equal (transpose successor) (transpose (chain successor successor))))))\n)",
            "task_solution": "(chain (recursive successor successor (transpose successor)) (transpose (chain (disjunction successor equal) (recursive equal (transpose successor) (transpose (chain successor successor))))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 65.30389524903148,
            "num_unique_values": 4508,
            "num_values_explored": 50088,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (transpose (chain zero successor)) (chain successor (transpose (chain successor successor))) (recursive (transpose (chain successor successor)) successor (transpose successor)))\n)",
            "task_solution": "(recursive (transpose (chain zero successor)) (chain successor (transpose (chain successor successor))) (recursive (transpose (chain successor successor)) successor (transpose successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 64.4891565470025,
            "num_unique_values": 3310,
            "num_values_explored": 50009,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False]])],\n    solution=(recursive (disjunction successor (recursive (transpose (chain successor successor)) (recursive successor (chain successor successor) successor) successor)) equal (chain successor successor))\n)",
            "task_solution": "(recursive (disjunction successor (recursive (transpose (chain successor successor)) (recursive successor (chain successor successor) successor) successor)) equal (chain successor successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.49981610296526924,
            "num_unique_values": 177,
            "num_values_explored": 393,
            "solution": "(chain successor (chain (recursive (chain successor successor) (chain (transpose (chain successor (chain successor successor))) (disjunction zero successor)) successor) successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False,  True,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False,  True,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain (recursive (chain successor successor) (chain (transpose (chain successor (chain successor successor))) (disjunction zero successor)) successor) successor))\n)",
            "task_solution": "(chain successor (chain (recursive (chain successor successor) (chain (transpose (chain successor (chain successor successor))) (disjunction zero successor)) successor) successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.31866870500380173,
            "num_unique_values": 126,
            "num_values_explored": 243,
            "solution": "(transpose (disjunction (recursive successor (transpose successor) (transpose (chain successor successor))) (recursive (chain successor successor) (transpose successor) (chain successor successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [ True, False,  True, False, False,  True, False, False,  True,\n        False],\n       [ True,  True, False,  True, False, False,  True, False, False,\n         True],\n       [False,  True,  True, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True,  True, False,  True, False, False,  True,\n        False],\n       [False, False,  True,  True,  True, False,  True, False, False,\n         True],\n       [False, False, False,  True,  True,  True, False,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(transpose (disjunction (recursive successor (transpose successor) (transpose (chain successor successor))) (recursive (chain successor successor) (transpose successor) (chain successor successor))))\n)",
            "task_solution": "(transpose (disjunction (recursive successor (transpose successor) (transpose (chain successor successor))) (recursive (chain successor successor) (transpose successor) (chain successor successor))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.46440269896993414,
            "num_unique_values": 148,
            "num_values_explored": 312,
            "solution": "(disjunction (transpose successor) (chain (disjunction (chain successor successor) (recursive (transpose (chain (disjunction zero successor) successor)) (transpose successor) successor)) successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n        False],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False, False, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False, False, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (chain (disjunction (chain successor successor) (recursive (transpose (chain (disjunction zero successor) successor)) (transpose successor) successor)) successor))\n)",
            "task_solution": "(disjunction (transpose successor) (chain (disjunction (chain successor successor) (recursive (transpose (chain (disjunction zero successor) successor)) (transpose successor) successor)) successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.37949291296536103,
            "num_unique_values": 146,
            "num_values_explored": 297,
            "solution": "(disjunction (transpose successor) (recursive successor (transpose (chain successor successor)) (disjunction zero (chain (transpose (disjunction zero successor)) (chain successor successor)))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True, False,  True, False, False, False,\n        False],\n       [ True, False, False,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True, False, False,  True,  True, False,  True, False,\n        False],\n       [ True, False,  True, False, False,  True,  True, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True,  True, False,\n         True],\n       [ True,  True, False, False,  True, False, False,  True,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (recursive successor (transpose (chain successor successor)) (disjunction zero (chain (transpose (disjunction zero successor)) (chain successor successor)))))\n)",
            "task_solution": "(disjunction (transpose successor) (recursive successor (transpose (chain successor successor)) (disjunction zero (chain (transpose (disjunction zero successor)) (chain successor successor)))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 60.0684060640051,
            "num_unique_values": 3664,
            "num_values_explored": 50092,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False, False, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False, False, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False, False, False,  True, False,\n         True],\n       [False, False, False, False,  True, False, False, False,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (disjunction (transpose successor) (chain (disjunction successor (transpose successor)) (chain (disjunction zero (chain successor successor)) (chain successor successor)))))\n)",
            "task_solution": "(chain successor (disjunction (transpose successor) (chain (disjunction successor (transpose successor)) (chain (disjunction zero (chain successor successor)) (chain successor successor)))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.45924980798736215,
            "num_unique_values": 176,
            "num_values_explored": 350,
            "solution": "(chain successor (disjunction (transpose successor) (chain (recursive (transpose successor) (transpose successor) (recursive successor zero (transpose successor))) (disjunction zero successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True, False,  True,  True,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True,  True,  True, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True,  True,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (transpose (disjunction successor (chain (transpose (disjunction zero successor)) (recursive successor (recursive successor zero (transpose successor)) (transpose successor))))))\n)",
            "task_solution": "(chain successor (transpose (disjunction successor (chain (transpose (disjunction zero successor)) (recursive successor (recursive successor zero (transpose successor)) (transpose successor))))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.48669812199659646,
            "num_unique_values": 168,
            "num_values_explored": 349,
            "solution": "(transpose (chain (recursive (chain successor (disjunction successor (transpose successor))) (transpose (chain successor (chain successor successor))) zero) (disjunction successor equal)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False,  True, False, False,\n         True],\n       [ True,  True, False,  True, False, False,  True, False, False,\n         True],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False]])],\n    solution=(transpose (chain (recursive (chain successor (disjunction successor (transpose successor))) (transpose (chain successor (chain successor successor))) zero) (disjunction successor equal)))\n)",
            "task_solution": "(transpose (chain (recursive (chain successor (disjunction successor (transpose successor))) (transpose (chain successor (chain successor successor))) zero) (disjunction successor equal)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 65.79067186202155,
            "num_unique_values": 3632,
            "num_values_explored": 50096,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(recursive (chain (transpose successor) (recursive (recursive successor (transpose (chain successor successor)) equal) zero (transpose successor))) successor (chain successor successor))\n)",
            "task_solution": "(recursive (chain (transpose successor) (recursive (recursive successor (transpose (chain successor successor)) equal) zero (transpose successor))) successor (chain successor successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 4.759304481034633,
            "num_unique_values": 848,
            "num_values_explored": 4423,
            "solution": "(chain successor (chain (recursive equal (transpose (chain successor (chain successor (chain (recursive successor equal (chain successor successor)) successor)))) successor) successor))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n         True],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain (recursive equal (transpose (chain successor (chain successor (chain successor (recursive successor (transpose successor) successor))))) successor) successor))\n)",
            "task_solution": "(chain successor (chain (recursive equal (transpose (chain successor (chain successor (chain successor (recursive successor (transpose successor) successor))))) successor) successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 65.77354263997404,
            "num_unique_values": 4306,
            "num_values_explored": 50084,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive successor (recursive (transpose zero) (transpose (chain (recursive successor (transpose successor) successor) (chain successor successor))) (transpose successor)) (transpose successor))\n)",
            "task_solution": "(recursive successor (recursive (transpose zero) (transpose (chain (recursive successor (transpose successor) successor) (chain successor successor))) (transpose successor)) (transpose successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 1.6606850079842843,
            "num_unique_values": 413,
            "num_values_explored": 1373,
            "solution": "(chain (recursive (disjunction zero (chain successor (chain (transpose (chain successor (chain successor (chain successor successor)))) successor))) successor equal) successor)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (disjunction zero (chain successor (chain (transpose (chain successor (chain successor (chain successor successor)))) successor))) successor) successor equal)\n)",
            "task_solution": "(recursive (chain (disjunction zero (chain successor (chain (transpose (chain successor (chain successor (chain successor successor)))) successor))) successor) successor equal)",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.5815850120270625,
            "num_unique_values": 188,
            "num_values_explored": 378,
            "solution": "(disjunction (transpose (chain (recursive zero zero (transpose successor)) successor)) (chain (chain (recursive equal (chain successor successor) successor) successor) successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction (transpose (chain (recursive zero zero (transpose successor)) successor)) (chain (recursive equal (chain successor successor) successor) (chain successor successor)))\n)",
            "task_solution": "(disjunction (transpose (chain (recursive zero zero (transpose successor)) successor)) (chain (recursive equal (chain successor successor) successor) (chain successor successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 60.40903028898174,
            "num_unique_values": 3742,
            "num_values_explored": 50002,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True, False,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True]])],\n    solution=(recursive (disjunction zero successor) (recursive equal (transpose successor) successor) (recursive (transpose (chain successor (chain successor successor))) (transpose successor) zero))\n)",
            "task_solution": "(recursive (disjunction zero successor) (recursive equal (transpose successor) successor) (recursive (transpose (chain successor (chain successor successor))) (transpose successor) zero))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 1.6687643469776958,
            "num_unique_values": 411,
            "num_values_explored": 1493,
            "solution": "(transpose (recursive (transpose zero) (transpose (recursive (chain successor successor) (chain zero successor) equal)) (transpose (chain (recursive successor successor equal) successor))))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (transpose zero) (recursive (transpose (chain successor successor)) equal successor) (recursive (transpose (chain successor successor)) equal (chain zero successor)))\n)",
            "task_solution": "(recursive (transpose zero) (recursive (transpose (chain successor successor)) equal successor) (recursive (transpose (chain successor successor)) equal (chain zero successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 59.84843347599963,
            "num_unique_values": 3040,
            "num_values_explored": 50041,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (recursive (chain successor (chain successor successor)) (recursive zero zero (transpose successor)) successor) (transpose successor) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (recursive (chain successor (chain successor successor)) (recursive zero zero (transpose successor)) successor) (transpose successor) (transpose (chain successor successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 67.28630943299504,
            "num_unique_values": 3503,
            "num_values_explored": 50098,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (chain (recursive (chain zero (recursive successor successor (transpose successor))) (transpose successor) (recursive successor (chain successor successor) successor)) successor))\n)",
            "task_solution": "(transpose (chain (recursive (chain zero (recursive successor successor (transpose successor))) (transpose successor) (recursive successor (chain successor successor) successor)) successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 64.23696029395796,
            "num_unique_values": 3069,
            "num_values_explored": 50087,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain zero (recursive successor (chain successor successor) successor)) (recursive (transpose successor) (transpose (chain successor successor)) (transpose successor)) successor)\n)",
            "task_solution": "(recursive (chain zero (recursive successor (chain successor successor) successor)) (recursive (transpose successor) (transpose (chain successor successor)) (transpose successor)) successor)",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.5335265560424887,
            "num_unique_values": 204,
            "num_values_explored": 426,
            "solution": "(recursive (chain (transpose (chain successor successor)) successor) (transpose successor) (recursive (disjunction zero successor) successor (chain successor (chain successor successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (chain (transpose (chain successor successor)) successor) (transpose successor) (recursive (disjunction zero successor) successor (chain successor (chain successor successor))))\n)",
            "task_solution": "(recursive (chain (transpose (chain successor successor)) successor) (transpose successor) (recursive (disjunction zero successor) successor (chain successor (chain successor successor))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.2116221109754406,
            "num_unique_values": 84,
            "num_values_explored": 160,
            "solution": "(recursive (recursive (chain (transpose successor) successor) successor (chain successor successor)) successor (chain (transpose successor) (recursive successor successor (transpose successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (recursive (chain (transpose successor) successor) successor (chain successor successor)) successor (transpose (chain (recursive successor (transpose successor) successor) successor)))\n)",
            "task_solution": "(recursive (recursive (chain (transpose successor) successor) successor (chain successor successor)) successor (transpose (chain (recursive successor (transpose successor) successor) successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 1.6596891289809719,
            "num_unique_values": 378,
            "num_values_explored": 1487,
            "solution": "(chain (disjunction successor (transpose successor)) (disjunction (transpose successor) (chain (recursive (disjunction successor equal) (transpose successor) zero) (chain successor successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True, False,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [False, False,  True, False, False,  True, False,  True,  True,\n         True],\n       [False, False,  True, False, False, False,  True, False,  True,\n         True],\n       [False, False,  True, False, False, False, False,  True, False,\n        False]])],\n    solution=(chain (disjunction successor (transpose successor)) (disjunction (transpose successor) (chain (recursive (disjunction successor equal) (transpose successor) zero) (chain successor successor))))\n)",
            "task_solution": "(chain (disjunction successor (transpose successor)) (disjunction (transpose successor) (chain (recursive (disjunction successor equal) (transpose successor) zero) (chain successor successor))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.28218582895351574,
            "num_unique_values": 106,
            "num_values_explored": 213,
            "solution": "(disjunction equal (chain (recursive (chain (recursive successor equal successor) (chain successor successor)) successor successor) (chain (disjunction zero successor) successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain (recursive (chain (recursive successor equal successor) (chain successor successor)) successor successor) (chain (disjunction zero successor) successor)))\n)",
            "task_solution": "(disjunction equal (chain (recursive (chain (recursive successor equal successor) (chain successor successor)) successor successor) (chain (disjunction zero successor) successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.9948349629994482,
            "num_unique_values": 282,
            "num_values_explored": 759,
            "solution": "(recursive (transpose (disjunction equal (chain (disjunction equal (recursive successor successor (chain successor (chain successor successor)))) (chain successor successor)))) successor zero)",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n         True]])],\n    solution=(transpose (disjunction equal (chain (disjunction zero (chain (disjunction equal (recursive successor successor (chain successor (chain successor successor)))) successor)) successor)))\n)",
            "task_solution": "(transpose (disjunction equal (chain (disjunction zero (chain (disjunction equal (recursive successor successor (chain successor (chain successor successor)))) successor)) successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.36933362600393593,
            "num_unique_values": 154,
            "num_values_explored": 280,
            "solution": "(disjunction (recursive equal (transpose successor) (recursive successor (transpose successor) successor)) (recursive successor (recursive successor (transpose successor) successor) (chain successor successor)))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [ True,  True,  True,  True,  True, False,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n         True]])],\n    solution=(disjunction (transpose (chain (recursive successor (transpose successor) successor) successor)) (recursive successor (recursive successor (transpose successor) successor) (chain successor successor)))\n)",
            "task_solution": "(disjunction (transpose (chain (recursive successor (transpose successor) successor) successor)) (recursive successor (recursive successor (transpose successor) successor) (chain successor successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 64.03960141498828,
            "num_unique_values": 3746,
            "num_values_explored": 50050,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False, False,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True,  True, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True, False,  True,  True, False,\n        False],\n       [ True, False,  True,  True,  True,  True, False,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n         True]])],\n    solution=(transpose (disjunction equal (chain (disjunction successor (transpose (chain successor successor))) (recursive (chain successor (chain successor successor)) successor (transpose successor)))))\n)",
            "task_solution": "(transpose (disjunction equal (chain (disjunction successor (transpose (chain successor successor))) (recursive (chain successor (chain successor successor)) successor (transpose successor)))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.6339334289659746,
            "num_unique_values": 216,
            "num_values_explored": 463,
            "solution": "(chain (recursive (recursive equal successor (transpose successor)) successor (recursive successor (disjunction zero successor) (recursive (transpose successor) successor (transpose successor)))) successor)",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain (recursive (recursive (transpose successor) (transpose successor) (disjunction zero successor)) (chain successor successor) (disjunction successor equal)) successor))\n)",
            "task_solution": "(chain successor (chain (recursive (recursive (transpose successor) (transpose successor) (disjunction zero successor)) (chain successor successor) (disjunction successor equal)) successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 62.89512458600802,
            "num_unique_values": 2729,
            "num_values_explored": 50018,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (chain (disjunction equal (chain (transpose successor) (chain successor successor))) (disjunction equal (chain successor (chain successor successor)))) equal successor)\n)",
            "task_solution": "(recursive (chain (disjunction equal (chain (transpose successor) (chain successor successor))) (disjunction equal (chain successor (chain successor successor)))) equal successor)",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 58.78870716498932,
            "num_unique_values": 3586,
            "num_values_explored": 50002,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (transpose (disjunction zero successor)) (recursive (transpose successor) (recursive zero zero (recursive successor equal (chain successor successor))) successor) successor)\n)",
            "task_solution": "(recursive (transpose (disjunction zero successor)) (recursive (transpose successor) (recursive zero zero (recursive successor equal (chain successor successor))) successor) successor)",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.656842311960645,
            "num_unique_values": 227,
            "num_values_explored": 517,
            "solution": "(disjunction (recursive equal (recursive successor successor (chain successor successor)) successor) (chain (recursive successor (transpose successor) successor) (chain successor successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n         True]])],\n    solution=(disjunction (recursive equal (recursive successor successor (chain successor successor)) successor) (chain (recursive successor (transpose successor) successor) (chain successor successor)))\n)",
            "task_solution": "(disjunction (recursive equal (recursive successor successor (chain successor successor)) successor) (chain (recursive successor (transpose successor) successor) (chain successor successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 66.34563584200805,
            "num_unique_values": 3642,
            "num_values_explored": 50049,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True, False, False,  True, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False,  True, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False,  True,  True, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n         True],\n       [ True,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False,  True,  True, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n        False]])],\n    solution=(recursive (chain successor (chain successor successor)) (recursive successor (recursive (transpose (chain successor successor)) equal (chain zero successor)) successor) successor)\n)",
            "task_solution": "(recursive (chain successor (chain successor successor)) (recursive successor (recursive (transpose (chain successor successor)) equal (chain zero successor)) successor) successor)",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.30629835097352043,
            "num_unique_values": 106,
            "num_values_explored": 220,
            "solution": "(disjunction (transpose successor) (chain (disjunction zero (chain (disjunction successor (transpose successor)) (recursive (chain successor successor) zero (transpose successor)))) successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False, False,  True, False,  True, False, False,\n        False],\n       [False, False,  True, False, False,  True, False,  True, False,\n        False],\n       [False, False, False,  True, False, False,  True, False,  True,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n         True],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (chain (disjunction zero (chain (disjunction successor (transpose successor)) (recursive (chain successor successor) zero (transpose successor)))) successor))\n)",
            "task_solution": "(disjunction (transpose successor) (chain (disjunction zero (chain (disjunction successor (transpose successor)) (recursive (chain successor successor) zero (transpose successor)))) successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.36414874298498034,
            "num_unique_values": 136,
            "num_values_explored": 275,
            "solution": "(chain (recursive (chain zero (chain successor successor)) (transpose (chain successor (chain successor successor))) (disjunction (chain successor successor) equal)) successor)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain zero (chain successor (chain successor successor))) (transpose (chain successor (chain successor successor))) (recursive equal successor (transpose successor)))\n)",
            "task_solution": "(recursive (chain zero (chain successor (chain successor successor))) (transpose (chain successor (chain successor successor))) (recursive equal successor (transpose successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 60.479681563039776,
            "num_unique_values": 2987,
            "num_values_explored": 50081,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n         True]])],\n    solution=(transpose (disjunction equal (chain successor (chain successor (disjunction equal (chain (recursive successor (recursive equal (transpose successor) zero) successor) successor))))))\n)",
            "task_solution": "(transpose (disjunction equal (chain successor (chain successor (disjunction equal (chain (recursive successor (recursive equal (transpose successor) zero) successor) successor))))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.27827372803585604,
            "num_unique_values": 97,
            "num_values_explored": 199,
            "solution": "(chain (recursive (chain successor successor) (transpose (disjunction zero (chain successor successor))) successor) (disjunction zero (chain successor (chain successor successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [ True, False, False,  True,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n         True],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n         True],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False]])],\n    solution=(chain (recursive (chain successor successor) (transpose (disjunction zero (chain successor successor))) successor) (disjunction zero (chain successor (chain successor successor))))\n)",
            "task_solution": "(chain (recursive (chain successor successor) (transpose (disjunction zero (chain successor successor))) successor) (disjunction zero (chain successor (chain successor successor))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.39017323503503576,
            "num_unique_values": 148,
            "num_values_explored": 283,
            "solution": "(disjunction zero (chain successor (disjunction successor (recursive equal (chain (transpose (chain successor successor)) (recursive successor zero (transpose successor))) successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True,  True, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False,  True,  True,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n         True],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction zero successor) (disjunction successor (recursive equal (chain (transpose (chain successor successor)) (recursive successor zero (transpose successor))) successor)))\n)",
            "task_solution": "(chain (disjunction zero successor) (disjunction successor (recursive equal (chain (transpose (chain successor successor)) (recursive successor zero (transpose successor))) successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 59.42692942195572,
            "num_unique_values": 2548,
            "num_values_explored": 50062,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True]])],\n    solution=(transpose (disjunction successor (disjunction equal (recursive (disjunction (chain successor successor) (transpose (chain successor successor))) (recursive equal successor equal) successor))))\n)",
            "task_solution": "(transpose (disjunction successor (disjunction equal (recursive (disjunction (chain successor successor) (transpose (chain successor successor))) (recursive equal successor equal) successor))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.3644888609996997,
            "num_unique_values": 106,
            "num_values_explored": 219,
            "solution": "(disjunction (chain (transpose successor) (recursive successor equal successor)) (chain (recursive zero (transpose successor) (transpose successor)) (recursive successor successor equal)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(disjunction (recursive (chain (transpose successor) successor) equal successor) (recursive (chain zero successor) (recursive equal (transpose successor) successor) (transpose successor)))\n)",
            "task_solution": "(disjunction (recursive (chain (transpose successor) successor) equal successor) (recursive (chain zero successor) (recursive equal (transpose successor) successor) (transpose successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.3762694110046141,
            "num_unique_values": 148,
            "num_values_explored": 303,
            "solution": "(disjunction (recursive successor (recursive successor zero (transpose successor)) successor) (recursive successor (transpose successor) (recursive successor (transpose (chain zero successor)) equal)))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (recursive successor (transpose successor) (recursive successor (transpose (chain zero successor)) equal)) zero (recursive equal successor (chain successor successor)))\n)",
            "task_solution": "(recursive (recursive successor (transpose successor) (recursive successor (transpose (chain zero successor)) equal)) zero (recursive equal successor (chain successor successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 68.93776732601691,
            "num_unique_values": 4534,
            "num_values_explored": 50027,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True, False, False, False, False,  True,  True,  True, False,\n        False],\n       [ True,  True,  True, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (recursive successor (chain (recursive successor equal (chain successor successor)) zero) (transpose (chain successor successor))) (chain successor successor))\n)",
            "task_solution": "(recursive successor (recursive successor (chain (recursive successor equal (chain successor successor)) zero) (transpose (chain successor successor))) (chain successor successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 64.05558218597434,
            "num_unique_values": 4153,
            "num_values_explored": 50059,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain (recursive successor (chain successor successor) (recursive equal successor (recursive (transpose successor) (chain successor successor) successor))) successor))\n)",
            "task_solution": "(chain successor (chain (recursive successor (chain successor successor) (recursive equal successor (recursive (transpose successor) (chain successor successor) successor))) successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 60.97653901297599,
            "num_unique_values": 2883,
            "num_values_explored": 50006,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True, False,  True,  True, False,  True, False,\n        False]])],\n    solution=(chain (disjunction successor equal) (recursive (chain successor (transpose (chain successor (disjunction successor (transpose successor))))) (transpose (chain successor successor)) successor))\n)",
            "task_solution": "(chain (disjunction successor equal) (recursive (chain successor (transpose (chain successor (disjunction successor (transpose successor))))) (transpose (chain successor successor)) successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.842532012029551,
            "num_unique_values": 281,
            "num_values_explored": 637,
            "solution": "(recursive (chain (disjunction successor (transpose (chain successor successor))) (disjunction zero successor)) (chain successor (recursive (transpose successor) (transpose successor) successor)) equal)",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (recursive equal successor (recursive successor successor (transpose successor))) (chain (disjunction successor (transpose (chain successor successor))) (disjunction zero successor)))\n)",
            "task_solution": "(chain (recursive equal successor (recursive successor successor (transpose successor))) (chain (disjunction successor (transpose (chain successor successor))) (disjunction zero successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.348367186030373,
            "num_unique_values": 137,
            "num_values_explored": 263,
            "solution": "(chain successor (disjunction (recursive successor successor (chain successor successor)) (recursive equal (transpose successor) (recursive zero (transpose successor) (transpose successor)))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive (disjunction equal (recursive successor successor (chain successor successor))) (transpose successor) (recursive zero (transpose successor) (transpose successor))))\n)",
            "task_solution": "(chain successor (recursive (disjunction equal (recursive successor successor (chain successor successor))) (transpose successor) (recursive zero (transpose successor) (transpose successor))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 69.97445701801917,
            "num_unique_values": 4482,
            "num_values_explored": 50030,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (disjunction successor (recursive zero zero (transpose (chain successor successor)))) (recursive (transpose successor) (transpose successor) (chain successor successor)))\n)",
            "task_solution": "(recursive equal (disjunction successor (recursive zero zero (transpose (chain successor successor)))) (recursive (transpose successor) (transpose successor) (chain successor successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.49267288600094616,
            "num_unique_values": 166,
            "num_values_explored": 346,
            "solution": "(transpose (chain (disjunction zero successor) (disjunction (transpose successor) (recursive (chain successor successor) (transpose successor) (chain (chain successor successor) successor)))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False,  True, False, False, False,\n        False],\n       [False,  True,  True, False, False, False,  True, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False,  True, False,\n        False],\n       [ True, False, False,  True,  True, False, False, False,  True,\n        False],\n       [False,  True, False, False,  True,  True, False, False, False,\n        False],\n       [False, False,  True, False, False,  True,  True, False, False,\n        False],\n       [False, False, False,  True, False, False,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False]])],\n    solution=(transpose (chain (disjunction zero successor) (disjunction (transpose successor) (recursive (chain successor successor) (transpose successor) (chain successor (chain successor successor))))))\n)",
            "task_solution": "(transpose (chain (disjunction zero successor) (disjunction (transpose successor) (recursive (chain successor successor) (transpose successor) (chain successor (chain successor successor))))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 70.87885678798193,
            "num_unique_values": 4442,
            "num_values_explored": 50068,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False]])],\n    solution=(transpose (chain (recursive (chain (disjunction (chain successor successor) (transpose (chain zero successor))) (disjunction zero successor)) (transpose successor) successor) successor))\n)",
            "task_solution": "(transpose (chain (recursive (chain (disjunction (chain successor successor) (transpose (chain zero successor))) (disjunction zero successor)) (transpose successor) successor) successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 9.824461576004978,
            "num_unique_values": 1303,
            "num_values_explored": 8906,
            "solution": "(transpose (disjunction successor (chain (transpose successor) (recursive successor (transpose (chain (chain (transpose successor) (disjunction zero successor)) (chain successor successor))) successor))))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False,  True,  True, False, False,\n         True],\n       [ True,  True, False,  True,  True, False, False,  True, False,\n        False],\n       [False,  True,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False,  True,  True, False, False,  True, False, False,\n         True],\n       [False, False, False,  True,  True, False, False,  True, False,\n        False],\n       [False, False, False, False,  True,  True, False, False,  True,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n         True],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction successor (chain (transpose successor) (recursive successor (chain (transpose (chain (disjunction zero successor) (chain successor successor))) successor) successor))))\n)",
            "task_solution": "(transpose (disjunction successor (chain (transpose successor) (recursive successor (chain (transpose (chain (disjunction zero successor) (chain successor successor))) successor) successor))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.26848242903361097,
            "num_unique_values": 97,
            "num_values_explored": 196,
            "solution": "(chain (disjunction equal (chain successor successor)) (disjunction equal (chain successor (recursive successor (disjunction (transpose successor) (chain successor successor)) successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (disjunction equal (chain successor successor)) (disjunction equal (chain successor (recursive successor (disjunction (transpose successor) (chain successor successor)) successor))))\n)",
            "task_solution": "(chain (disjunction equal (chain successor successor)) (disjunction equal (chain successor (recursive successor (disjunction (transpose successor) (chain successor successor)) successor))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.07488330599153414,
            "num_unique_values": 12,
            "num_values_explored": 73,
            "solution": "(transpose (recursive successor equal successor))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) successor equal)\n)",
            "task_solution": "(recursive (transpose successor) successor equal)",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.0931561819743365,
            "num_unique_values": 17,
            "num_values_explored": 86,
            "solution": "(chain (recursive successor zero successor) successor)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction zero successor) successor)\n)",
            "task_solution": "(chain (disjunction zero successor) successor)",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.16842815198469907,
            "num_unique_values": 56,
            "num_values_explored": 139,
            "solution": "(chain successor (chain successor successor))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor successor))\n)",
            "task_solution": "(chain successor (chain successor successor))",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.07490570703521371,
            "num_unique_values": 12,
            "num_values_explored": 73,
            "solution": "(transpose (recursive successor successor equal))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (transpose successor) equal successor)\n)",
            "task_solution": "(recursive (transpose successor) equal successor)",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.13350232498487458,
            "num_unique_values": 38,
            "num_values_explored": 109,
            "solution": "(recursive successor zero (transpose successor))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor zero (transpose successor))\n)",
            "task_solution": "(recursive successor zero (transpose successor))",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.1337966900318861,
            "num_unique_values": 36,
            "num_values_explored": 109,
            "solution": "(recursive successor successor (transpose successor))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (transpose successor))\n)",
            "task_solution": "(recursive successor successor (transpose successor))",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.1416038420284167,
            "num_unique_values": 40,
            "num_values_explored": 107,
            "solution": "(recursive equal (transpose successor) successor)",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(recursive equal (transpose successor) successor)\n)",
            "task_solution": "(recursive equal (transpose successor) successor)",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.14467776997480541,
            "num_unique_values": 36,
            "num_values_explored": 107,
            "solution": "(recursive equal successor (transpose successor))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (transpose successor))\n)",
            "task_solution": "(recursive equal successor (transpose successor))",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.13474961696192622,
            "num_unique_values": 36,
            "num_values_explored": 107,
            "solution": "(recursive equal zero (transpose successor))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal zero (transpose successor))\n)",
            "task_solution": "(recursive equal zero (transpose successor))",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.10913842497393489,
            "num_unique_values": 26,
            "num_values_explored": 98,
            "solution": "(disjunction equal (chain successor successor))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain successor successor))\n)",
            "task_solution": "(disjunction equal (chain successor successor))",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.14147146395407617,
            "num_unique_values": 36,
            "num_values_explored": 109,
            "solution": "(recursive successor (transpose successor) successor)",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive successor (transpose successor) successor)\n)",
            "task_solution": "(recursive successor (transpose successor) successor)",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.13232955301646143,
            "num_unique_values": 36,
            "num_values_explored": 108,
            "solution": "(recursive equal (transpose successor) zero)",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [ True, False, False, False, False,  True, False, False, False,\n        False],\n       [ True, False, False, False, False, False,  True, False, False,\n        False],\n       [ True, False, False, False, False, False, False,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (transpose successor) zero)\n)",
            "task_solution": "(recursive equal (transpose successor) zero)",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.16795208398252726,
            "num_unique_values": 56,
            "num_values_explored": 138,
            "solution": "(chain zero (chain successor successor))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain zero (chain successor successor))\n)",
            "task_solution": "(chain zero (chain successor successor))",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.18643162195803598,
            "num_unique_values": 56,
            "num_values_explored": 139,
            "solution": "(chain (transpose successor) (chain zero successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (transpose successor) (chain zero successor))\n)",
            "task_solution": "(chain (transpose successor) (chain zero successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.15893507102737203,
            "num_unique_values": 46,
            "num_values_explored": 129,
            "solution": "(transpose (chain (disjunction zero successor) successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(transpose (chain (disjunction zero successor) successor))\n)",
            "task_solution": "(transpose (chain (disjunction zero successor) successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.1357032160158269,
            "num_unique_values": 40,
            "num_values_explored": 110,
            "solution": "(recursive successor (chain zero successor) equal)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (chain zero successor) equal)\n)",
            "task_solution": "(recursive successor (chain zero successor) equal)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.1598431000020355,
            "num_unique_values": 46,
            "num_values_explored": 131,
            "solution": "(transpose (disjunction successor (chain successor (transpose successor))))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (disjunction successor equal) (transpose successor))\n)",
            "task_solution": "(chain (disjunction successor equal) (transpose successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.1514447060180828,
            "num_unique_values": 46,
            "num_values_explored": 122,
            "solution": "(transpose (disjunction equal (chain successor (disjunction zero successor))))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True]])],\n    solution=(transpose (disjunction equal (chain successor successor)))\n)",
            "task_solution": "(transpose (disjunction equal (chain successor successor)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.1375892180367373,
            "num_unique_values": 40,
            "num_values_explored": 109,
            "solution": "(recursive (disjunction successor equal) equal successor)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (disjunction successor equal) equal successor)\n)",
            "task_solution": "(recursive (disjunction successor equal) equal successor)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.13381307903910056,
            "num_unique_values": 36,
            "num_values_explored": 106,
            "solution": "(recursive (chain successor successor) zero successor)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor successor) zero successor)\n)",
            "task_solution": "(recursive (chain successor successor) zero successor)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.14293700404232368,
            "num_unique_values": 36,
            "num_values_explored": 109,
            "solution": "(recursive (transpose successor) successor (transpose successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) successor (transpose successor))\n)",
            "task_solution": "(recursive (transpose successor) successor (transpose successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.10840646497672424,
            "num_unique_values": 34,
            "num_values_explored": 97,
            "solution": "(disjunction (chain successor (transpose successor)) (chain successor (disjunction zero successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (disjunction successor (transpose successor)))\n)",
            "task_solution": "(chain successor (disjunction successor (transpose successor)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.09188923699548468,
            "num_unique_values": 17,
            "num_values_explored": 86,
            "solution": "(chain (recursive successor equal successor) zero)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor equal successor) zero)\n)",
            "task_solution": "(chain (recursive successor equal successor) zero)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.15051959600532427,
            "num_unique_values": 51,
            "num_values_explored": 125,
            "solution": "(transpose (chain zero (recursive equal successor equal)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (transpose zero) (transpose successor) zero)\n)",
            "task_solution": "(recursive (transpose zero) (transpose successor) zero)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.17538907000562176,
            "num_unique_values": 56,
            "num_values_explored": 139,
            "solution": "(chain (transpose successor) (disjunction zero successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (transpose successor) (disjunction zero successor))\n)",
            "task_solution": "(chain (transpose successor) (disjunction zero successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.13847057695966214,
            "num_unique_values": 37,
            "num_values_explored": 110,
            "solution": "(recursive equal (chain successor successor) successor)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (chain successor successor) successor)\n)",
            "task_solution": "(recursive equal (chain successor successor) successor)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.09306071494938806,
            "num_unique_values": 21,
            "num_values_explored": 83,
            "solution": "(chain (transpose successor) (recursive equal successor equal))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(recursive (transpose successor) equal (transpose successor))\n)",
            "task_solution": "(recursive (transpose successor) equal (transpose successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.09050378302345052,
            "num_unique_values": 22,
            "num_values_explored": 85,
            "solution": "(chain successor (recursive successor successor equal))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor successor) successor equal)\n)",
            "task_solution": "(recursive (chain successor successor) successor equal)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.11650662904139608,
            "num_unique_values": 26,
            "num_values_explored": 98,
            "solution": "(disjunction (transpose successor) (chain successor successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (chain successor successor))\n)",
            "task_solution": "(disjunction (transpose successor) (chain successor successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.1668043620302342,
            "num_unique_values": 58,
            "num_values_explored": 136,
            "solution": "(chain (transpose (chain successor successor)) successor)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (transpose (chain successor successor)) successor)\n)",
            "task_solution": "(chain (transpose (chain successor successor)) successor)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.09008716302923858,
            "num_unique_values": 16,
            "num_values_explored": 85,
            "solution": "(chain (recursive successor equal successor) successor)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor equal successor) successor)\n)",
            "task_solution": "(chain (recursive successor equal successor) successor)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.10785680904518813,
            "num_unique_values": 28,
            "num_values_explored": 98,
            "solution": "(disjunction successor (chain (transpose successor) zero))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction successor (transpose (chain zero successor)))\n)",
            "task_solution": "(disjunction successor (transpose (chain zero successor)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.09076406300300732,
            "num_unique_values": 22,
            "num_values_explored": 86,
            "solution": "(chain (transpose (recursive successor zero successor)) successor)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (transpose (disjunction zero successor)) successor)\n)",
            "task_solution": "(chain (transpose (disjunction zero successor)) successor)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.13141999702202156,
            "num_unique_values": 36,
            "num_values_explored": 110,
            "solution": "(recursive (transpose successor) (transpose successor) zero)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [ True, False, False, False, False,  True, False, False, False,\n        False],\n       [ True, False, False, False, False, False,  True, False, False,\n        False],\n       [ True, False, False, False, False, False, False,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (transpose successor) zero)\n)",
            "task_solution": "(recursive (transpose successor) (transpose successor) zero)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.2293402130017057,
            "num_unique_values": 86,
            "num_values_explored": 181,
            "solution": "(transpose (chain successor (disjunction equal successor)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False]])],\n    solution=(transpose (chain successor (disjunction successor equal)))\n)",
            "task_solution": "(transpose (chain successor (disjunction successor equal)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.14670842699706554,
            "num_unique_values": 37,
            "num_values_explored": 108,
            "solution": "(recursive equal successor (chain successor successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (chain successor successor))\n)",
            "task_solution": "(recursive equal successor (chain successor successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.13945850997697562,
            "num_unique_values": 36,
            "num_values_explored": 107,
            "solution": "(recursive successor successor (chain successor successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (chain successor successor))\n)",
            "task_solution": "(recursive successor successor (chain successor successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.21961975999874994,
            "num_unique_values": 77,
            "num_values_explored": 171,
            "solution": "(recursive (chain (disjunction zero successor) (disjunction equal successor)) successor equal)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (disjunction zero successor) successor equal)\n)",
            "task_solution": "(recursive (disjunction zero successor) successor equal)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.1104707540362142,
            "num_unique_values": 29,
            "num_values_explored": 100,
            "solution": "(disjunction successor (chain successor (transpose successor)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (transpose (disjunction successor equal)))\n)",
            "task_solution": "(chain successor (transpose (disjunction successor equal)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.15508463099831715,
            "num_unique_values": 46,
            "num_values_explored": 125,
            "solution": "(transpose (disjunction zero (chain successor successor)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(transpose (disjunction zero (chain successor successor)))\n)",
            "task_solution": "(transpose (disjunction zero (chain successor successor)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.16211879695765674,
            "num_unique_values": 57,
            "num_values_explored": 135,
            "solution": "(chain (transpose successor) (chain successor successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (transpose successor) (chain successor successor))\n)",
            "task_solution": "(chain (transpose successor) (chain successor successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.16383715200936422,
            "num_unique_values": 56,
            "num_values_explored": 138,
            "solution": "(chain successor (transpose (chain successor successor)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (transpose (chain successor successor)))\n)",
            "task_solution": "(chain successor (transpose (chain successor successor)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.18081523303408176,
            "num_unique_values": 56,
            "num_values_explored": 143,
            "solution": "(chain (disjunction (transpose successor) successor) successor)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (disjunction successor (transpose successor)) successor)\n)",
            "task_solution": "(chain (disjunction successor (transpose successor)) successor)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.22367691301042214,
            "num_unique_values": 86,
            "num_values_explored": 171,
            "solution": "(transpose (chain zero (chain successor successor)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (chain zero (chain successor successor)))\n)",
            "task_solution": "(transpose (chain zero (chain successor successor)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.08985036297235638,
            "num_unique_values": 17,
            "num_values_explored": 83,
            "solution": "(chain zero (recursive successor successor equal))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain zero (recursive successor successor equal))\n)",
            "task_solution": "(chain zero (recursive successor successor equal))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.2214871269534342,
            "num_unique_values": 86,
            "num_values_explored": 177,
            "solution": "(transpose (chain successor (chain successor successor)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False]])],\n    solution=(transpose (chain successor (chain successor successor)))\n)",
            "task_solution": "(transpose (chain successor (chain successor successor)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.10942724300548434,
            "num_unique_values": 26,
            "num_values_explored": 98,
            "solution": "(disjunction (transpose successor) (chain zero successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (chain zero successor))\n)",
            "task_solution": "(disjunction (transpose successor) (chain zero successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.14186906802933663,
            "num_unique_values": 50,
            "num_values_explored": 122,
            "solution": "(transpose (disjunction successor (chain (transpose successor) successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(chain (transpose successor) (disjunction successor equal))\n)",
            "task_solution": "(chain (transpose successor) (disjunction successor equal))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.19415760901756585,
            "num_unique_values": 67,
            "num_values_explored": 160,
            "solution": "(disjunction zero (disjunction successor (transpose successor)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction zero (disjunction successor (transpose successor)))\n)",
            "task_solution": "(disjunction zero (disjunction successor (transpose successor)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.13109252601861954,
            "num_unique_values": 38,
            "num_values_explored": 107,
            "solution": "(recursive zero (transpose successor) (transpose successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([ True, False,  True, False,  True, False,  True, False,  True,\n       False])],\n    solution=(recursive zero (transpose successor) (transpose successor))\n)",
            "task_solution": "(recursive zero (transpose successor) (transpose successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.17687079700408503,
            "num_unique_values": 69,
            "num_values_explored": 148,
            "solution": "(disjunction successor (transpose (disjunction equal successor)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(disjunction successor (transpose (disjunction successor equal)))\n)",
            "task_solution": "(disjunction successor (transpose (disjunction successor equal)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.1422903859638609,
            "num_unique_values": 36,
            "num_values_explored": 109,
            "solution": "(recursive successor (chain successor successor) successor)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (chain successor successor) successor)\n)",
            "task_solution": "(recursive successor (chain successor successor) successor)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.15009374200599268,
            "num_unique_values": 46,
            "num_values_explored": 128,
            "solution": "(transpose (recursive zero zero (transpose successor)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (recursive zero zero (transpose successor)))\n)",
            "task_solution": "(transpose (recursive zero zero (transpose successor)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.18884304899256676,
            "num_unique_values": 67,
            "num_values_explored": 162,
            "solution": "(disjunction successor (recursive zero zero (transpose successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction successor (recursive zero zero (transpose successor)))\n)",
            "task_solution": "(disjunction successor (recursive zero zero (transpose successor)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.1522035960224457,
            "num_unique_values": 51,
            "num_values_explored": 121,
            "solution": "(transpose (recursive (disjunction successor equal) equal successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(recursive (transpose (disjunction successor equal)) successor equal)\n)",
            "task_solution": "(recursive (transpose (disjunction successor equal)) successor equal)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.1663295620237477,
            "num_unique_values": 58,
            "num_values_explored": 135,
            "solution": "(chain zero (recursive equal successor (transpose successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain zero (recursive equal successor (transpose successor)))\n)",
            "task_solution": "(chain zero (recursive equal successor (transpose successor)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.19407815200975165,
            "num_unique_values": 66,
            "num_values_explored": 159,
            "solution": "(disjunction equal (chain successor (chain successor successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain successor (chain successor successor)))\n)",
            "task_solution": "(disjunction equal (chain successor (chain successor successor)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.1406222810037434,
            "num_unique_values": 40,
            "num_values_explored": 110,
            "solution": "(recursive successor (chain (transpose successor) zero) equal)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (transpose (chain zero successor)) equal)\n)",
            "task_solution": "(recursive successor (transpose (chain zero successor)) equal)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.17459521401906386,
            "num_unique_values": 58,
            "num_values_explored": 139,
            "solution": "(chain (recursive equal (transpose successor) successor) zero)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive equal (transpose successor) successor) zero)\n)",
            "task_solution": "(chain (recursive equal (transpose successor) successor) zero)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.255603096971754,
            "num_unique_values": 97,
            "num_values_explored": 204,
            "solution": "(chain zero (chain successor (chain successor successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain zero (chain successor (chain successor successor)))\n)",
            "task_solution": "(chain zero (chain successor (chain successor successor)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.27314237400423735,
            "num_unique_values": 98,
            "num_values_explored": 203,
            "solution": "(chain (transpose (recursive successor successor equal)) successor)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (recursive (transpose successor) equal successor) successor)\n)",
            "task_solution": "(chain (recursive (transpose successor) equal successor) successor)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.1341108499909751,
            "num_unique_values": 39,
            "num_values_explored": 112,
            "solution": "(recursive (disjunction zero successor) (transpose successor) zero)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [ True, False, False, False, False,  True, False, False, False,\n        False],\n       [ True, False, False, False, False, False,  True, False, False,\n        False],\n       [ True, False, False, False, False, False, False,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n         True],\n       [ True, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (disjunction zero successor) (transpose successor) zero)\n)",
            "task_solution": "(recursive (disjunction zero successor) (transpose successor) zero)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.1359514279756695,
            "num_unique_values": 38,
            "num_values_explored": 109,
            "solution": "(recursive (chain successor successor) zero (transpose successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor successor) zero (transpose successor))\n)",
            "task_solution": "(recursive (chain successor successor) zero (transpose successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.11429508699802682,
            "num_unique_values": 28,
            "num_values_explored": 98,
            "solution": "(disjunction equal (chain (disjunction zero successor) successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain (disjunction zero successor) successor))\n)",
            "task_solution": "(disjunction equal (chain (disjunction zero successor) successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.15042017796076834,
            "num_unique_values": 46,
            "num_values_explored": 124,
            "solution": "(transpose (recursive zero (transpose successor) (transpose successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (recursive zero (transpose successor) (transpose successor)))\n)",
            "task_solution": "(transpose (recursive zero (transpose successor) (transpose successor)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.16752754402114078,
            "num_unique_values": 57,
            "num_values_explored": 135,
            "solution": "(chain successor (disjunction successor (chain successor successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (disjunction successor equal)))\n)",
            "task_solution": "(chain successor (chain successor (disjunction successor equal)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.16750736901303753,
            "num_unique_values": 53,
            "num_values_explored": 125,
            "solution": "(transpose (chain successor (recursive successor equal successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain successor successor)) successor equal)\n)",
            "task_solution": "(recursive (transpose (chain successor successor)) successor equal)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.14342176995705813,
            "num_unique_values": 42,
            "num_values_explored": 109,
            "solution": "(recursive zero (recursive successor equal successor) successor)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([ True,  True,  True,  True,  True,  True,  True,  True, False,\n       False])],\n    solution=(recursive zero (recursive successor equal successor) successor)\n)",
            "task_solution": "(recursive zero (recursive successor equal successor) successor)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.1338550319778733,
            "num_unique_values": 41,
            "num_values_explored": 109,
            "solution": "(recursive successor (transpose (disjunction zero successor)) successor)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive successor (transpose (disjunction zero successor)) successor)\n)",
            "task_solution": "(recursive successor (transpose (disjunction zero successor)) successor)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.17099472699919716,
            "num_unique_values": 57,
            "num_values_explored": 137,
            "solution": "(chain zero (disjunction zero (chain successor successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain zero (disjunction zero (chain successor successor)))\n)",
            "task_solution": "(chain zero (disjunction zero (chain successor successor)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.15141977602615952,
            "num_unique_values": 47,
            "num_values_explored": 123,
            "solution": "(transpose (chain (recursive successor equal successor) zero))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (chain (recursive successor equal successor) zero))\n)",
            "task_solution": "(transpose (chain (recursive successor equal successor) zero))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 2.014622567978222,
            "num_unique_values": 564,
            "num_values_explored": 1754,
            "solution": "(recursive zero (recursive successor (transpose successor) (chain successor (chain successor (disjunction successor equal)))) successor)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([ True,  True,  True,  True,  True,  True,  True,  True,  True,\n       False])],\n    solution=(recursive zero zero (recursive successor equal successor))\n)",
            "task_solution": "(recursive zero zero (recursive successor equal successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.18002049904316664,
            "num_unique_values": 56,
            "num_values_explored": 145,
            "solution": "(chain (recursive zero zero (transpose successor)) successor)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive zero zero (transpose successor)) successor)\n)",
            "task_solution": "(chain (recursive zero zero (transpose successor)) successor)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.1471976800239645,
            "num_unique_values": 39,
            "num_values_explored": 112,
            "solution": "(recursive (chain zero successor) (transpose successor) equal)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain zero successor) (transpose successor) equal)\n)",
            "task_solution": "(recursive (chain zero successor) (transpose successor) equal)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.11228564096381888,
            "num_unique_values": 31,
            "num_values_explored": 96,
            "solution": "(disjunction successor (transpose (recursive successor successor equal)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(disjunction successor (recursive (transpose successor) equal successor))\n)",
            "task_solution": "(disjunction successor (recursive (transpose successor) equal successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.09771090897265822,
            "num_unique_values": 22,
            "num_values_explored": 84,
            "solution": "(chain (recursive successor successor equal) (transpose successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (transpose successor)) successor equal)\n)",
            "task_solution": "(recursive (chain successor (transpose successor)) successor equal)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.1579460429493338,
            "num_unique_values": 36,
            "num_values_explored": 113,
            "solution": "(recursive (disjunction successor equal) (transpose successor) zero)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False, False,  True,  True, False, False, False, False,\n        False],\n       [ True, False, False, False,  True,  True, False, False, False,\n        False],\n       [ True, False, False, False, False,  True,  True, False, False,\n        False],\n       [ True, False, False, False, False, False,  True,  True, False,\n        False],\n       [ True, False, False, False, False, False, False,  True,  True,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n         True],\n       [ True, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (disjunction successor equal) (transpose successor) zero)\n)",
            "task_solution": "(recursive (disjunction successor equal) (transpose successor) zero)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.14934582699788734,
            "num_unique_values": 37,
            "num_values_explored": 110,
            "solution": "(recursive successor zero (recursive successor equal successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor zero (recursive successor equal successor))\n)",
            "task_solution": "(recursive successor zero (recursive successor equal successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.18713672499870881,
            "num_unique_values": 71,
            "num_values_explored": 153,
            "solution": "(disjunction (chain (transpose successor) zero) (chain zero successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain zero successor) (transpose successor) successor)\n)",
            "task_solution": "(recursive (chain zero successor) (transpose successor) successor)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.13675702101318166,
            "num_unique_values": 37,
            "num_values_explored": 112,
            "solution": "(recursive successor equal (recursive successor equal successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor equal (recursive successor equal successor))\n)",
            "task_solution": "(recursive successor equal (recursive successor equal successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.1373944540391676,
            "num_unique_values": 45,
            "num_values_explored": 108,
            "solution": "(recursive successor successor (recursive successor equal successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (recursive successor equal successor))\n)",
            "task_solution": "(recursive successor successor (recursive successor equal successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.2149052619934082,
            "num_unique_values": 78,
            "num_values_explored": 167,
            "solution": "(recursive successor zero (transpose (chain successor successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor zero (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive successor zero (transpose (chain successor successor)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.13442953600315377,
            "num_unique_values": 36,
            "num_values_explored": 109,
            "solution": "(recursive (disjunction successor equal) zero (transpose successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (disjunction successor equal) zero (transpose successor))\n)",
            "task_solution": "(recursive (disjunction successor equal) zero (transpose successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.14859518298180774,
            "num_unique_values": 47,
            "num_values_explored": 123,
            "solution": "(transpose (disjunction (chain (transpose successor) successor) (chain successor successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True]])],\n    solution=(transpose (chain (disjunction successor (transpose successor)) successor))\n)",
            "task_solution": "(transpose (chain (disjunction successor (transpose successor)) successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.13905882800463587,
            "num_unique_values": 37,
            "num_values_explored": 113,
            "solution": "(recursive equal successor (recursive successor equal successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (recursive successor equal successor))\n)",
            "task_solution": "(recursive equal successor (recursive successor equal successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.15400323300855234,
            "num_unique_values": 50,
            "num_values_explored": 127,
            "solution": "(transpose (chain (recursive successor successor equal) successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain successor successor)) equal successor)\n)",
            "task_solution": "(recursive (transpose (chain successor successor)) equal successor)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.0941038410528563,
            "num_unique_values": 22,
            "num_values_explored": 84,
            "solution": "(chain (transpose successor) (recursive successor equal successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (chain (transpose successor) successor) equal successor)\n)",
            "task_solution": "(recursive (chain (transpose successor) successor) equal successor)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.21310452499892563,
            "num_unique_values": 76,
            "num_values_explored": 160,
            "solution": "(recursive zero zero (transpose (chain successor successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([ True, False,  True, False, False, False, False, False, False,\n       False])],\n    solution=(recursive zero zero (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive zero zero (transpose (chain successor successor)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.10844864201499149,
            "num_unique_values": 29,
            "num_values_explored": 98,
            "solution": "(disjunction successor (transpose (recursive successor equal successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction successor (recursive (transpose successor) successor equal))\n)",
            "task_solution": "(disjunction successor (recursive (transpose successor) successor equal))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.13459307700395584,
            "num_unique_values": 37,
            "num_values_explored": 108,
            "solution": "(recursive successor (transpose successor) (disjunction successor equal))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive successor (transpose successor) (disjunction successor equal))\n)",
            "task_solution": "(recursive successor (transpose successor) (disjunction successor equal))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.17955370200797915,
            "num_unique_values": 56,
            "num_values_explored": 140,
            "solution": "(chain (disjunction successor equal) (disjunction successor equal))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (disjunction successor equal) (disjunction successor equal))\n)",
            "task_solution": "(chain (disjunction successor equal) (disjunction successor equal))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.10803589201532304,
            "num_unique_values": 26,
            "num_values_explored": 94,
            "solution": "(disjunction (transpose successor) (recursive successor successor equal))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (recursive successor successor equal))\n)",
            "task_solution": "(disjunction (transpose successor) (recursive successor successor equal))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.13303747796453536,
            "num_unique_values": 36,
            "num_values_explored": 108,
            "solution": "(recursive (transpose successor) successor (chain successor successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) successor (chain successor successor))\n)",
            "task_solution": "(recursive (transpose successor) successor (chain successor successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.1329169679665938,
            "num_unique_values": 37,
            "num_values_explored": 108,
            "solution": "(recursive successor (transpose successor) (disjunction zero successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive successor (transpose successor) (disjunction zero successor))\n)",
            "task_solution": "(recursive successor (transpose successor) (disjunction zero successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.14931306103244424,
            "num_unique_values": 38,
            "num_values_explored": 110,
            "solution": "(recursive equal (transpose successor) (chain zero successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (transpose successor) (chain zero successor))\n)",
            "task_solution": "(recursive equal (transpose successor) (chain zero successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.14631998795084655,
            "num_unique_values": 46,
            "num_values_explored": 122,
            "solution": "(transpose (chain (recursive successor equal successor) successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False]])],\n    solution=(transpose (chain (recursive successor equal successor) successor))\n)",
            "task_solution": "(transpose (chain (recursive successor equal successor) successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.13481438701273873,
            "num_unique_values": 43,
            "num_values_explored": 108,
            "solution": "(recursive (chain successor successor) successor (transpose successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor successor) successor (transpose successor))\n)",
            "task_solution": "(recursive (chain successor successor) successor (transpose successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.13362190400948748,
            "num_unique_values": 39,
            "num_values_explored": 109,
            "solution": "(recursive (transpose successor) (chain successor successor) successor)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (chain successor successor) successor)\n)",
            "task_solution": "(recursive (transpose successor) (chain successor successor) successor)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.20517487003235146,
            "num_unique_values": 66,
            "num_values_explored": 155,
            "solution": "(disjunction successor (recursive equal successor (transpose successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True,  True,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True,  True,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction successor (recursive equal successor (transpose successor)))\n)",
            "task_solution": "(disjunction successor (recursive equal successor (transpose successor)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.1463135799858719,
            "num_unique_values": 36,
            "num_values_explored": 108,
            "solution": "(recursive equal (disjunction zero successor) (transpose successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (disjunction zero successor) (transpose successor))\n)",
            "task_solution": "(recursive equal (disjunction zero successor) (transpose successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.2300641739857383,
            "num_unique_values": 79,
            "num_values_explored": 163,
            "solution": "(recursive (recursive equal (chain successor successor) successor) equal (recursive successor equal successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive equal equal (recursive successor equal successor))\n)",
            "task_solution": "(recursive equal equal (recursive successor equal successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.08976164396153763,
            "num_unique_values": 19,
            "num_values_explored": 84,
            "solution": "(chain (transpose successor) (recursive successor successor equal))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (transpose successor) (recursive successor successor equal))\n)",
            "task_solution": "(chain (transpose successor) (recursive successor successor equal))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.13421807502163574,
            "num_unique_values": 42,
            "num_values_explored": 108,
            "solution": "(recursive equal (chain zero successor) (transpose successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (chain zero successor) (transpose successor))\n)",
            "task_solution": "(recursive equal (chain zero successor) (transpose successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.1887714010081254,
            "num_unique_values": 70,
            "num_values_explored": 157,
            "solution": "(disjunction zero (disjunction (transpose successor) (chain successor successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction zero (disjunction (transpose successor) (chain successor successor)))\n)",
            "task_solution": "(disjunction zero (disjunction (transpose successor) (chain successor successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1336935720173642,
            "num_unique_values": 41,
            "num_values_explored": 110,
            "solution": "(recursive equal (transpose successor) (recursive successor successor equal))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True]])],\n    solution=(recursive equal (transpose successor) (recursive successor successor equal))\n)",
            "task_solution": "(recursive equal (transpose successor) (recursive successor successor equal))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.2266737130121328,
            "num_unique_values": 86,
            "num_values_explored": 183,
            "solution": "(transpose (chain successor (recursive successor (transpose successor) successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(transpose (chain successor (recursive successor (transpose successor) successor)))\n)",
            "task_solution": "(transpose (chain successor (recursive successor (transpose successor) successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.18430308700772002,
            "num_unique_values": 67,
            "num_values_explored": 147,
            "solution": "(disjunction successor (transpose (chain (disjunction zero successor) successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(disjunction successor (transpose (chain (disjunction zero successor) successor)))\n)",
            "task_solution": "(disjunction successor (transpose (chain (disjunction zero successor) successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.13531806599348783,
            "num_unique_values": 42,
            "num_values_explored": 110,
            "solution": "(recursive equal (transpose successor) (chain (transpose successor) successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive equal (transpose successor) (chain (transpose successor) successor))\n)",
            "task_solution": "(recursive equal (transpose successor) (chain (transpose successor) successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1710503430222161,
            "num_unique_values": 56,
            "num_values_explored": 140,
            "solution": "(chain zero (recursive successor (chain successor successor) successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain zero (recursive successor (chain successor successor) successor))\n)",
            "task_solution": "(chain zero (recursive successor (chain successor successor) successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.16446833399822935,
            "num_unique_values": 57,
            "num_values_explored": 136,
            "solution": "(chain (recursive successor successor (chain successor successor)) zero)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor successor (chain successor successor)) zero)\n)",
            "task_solution": "(chain (recursive successor successor (chain successor successor)) zero)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1461084419861436,
            "num_unique_values": 54,
            "num_values_explored": 124,
            "solution": "(transpose (recursive successor (transpose successor) (chain successor successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n         True],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) successor (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (transpose successor) successor (transpose (chain successor successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.3328459110343829,
            "num_unique_values": 126,
            "num_values_explored": 254,
            "solution": "(transpose (chain (chain zero (disjunction zero successor)) successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (chain zero (chain successor (disjunction successor equal))))\n)",
            "task_solution": "(transpose (chain zero (chain successor (disjunction successor equal))))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1926328800036572,
            "num_unique_values": 73,
            "num_values_explored": 152,
            "solution": "(disjunction (recursive successor equal successor) (recursive successor (chain successor successor) (recursive equal successor equal)))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (recursive successor successor (transpose successor)) equal successor)\n)",
            "task_solution": "(recursive (recursive successor successor (transpose successor)) equal successor)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1625360010075383,
            "num_unique_values": 47,
            "num_values_explored": 122,
            "solution": "(transpose (disjunction zero (recursive successor (transpose successor) equal)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction zero (recursive successor (transpose successor) equal)))\n)",
            "task_solution": "(transpose (disjunction zero (recursive successor (transpose successor) equal)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1766298110014759,
            "num_unique_values": 58,
            "num_values_explored": 135,
            "solution": "(chain (transpose successor) (disjunction (chain successor successor) equal))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (transpose successor) (disjunction equal (chain successor successor)))\n)",
            "task_solution": "(chain (transpose successor) (disjunction equal (chain successor successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.14843799802474678,
            "num_unique_values": 42,
            "num_values_explored": 111,
            "solution": "(recursive (transpose successor) equal (recursive successor equal successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (transpose successor) equal (recursive successor equal successor))\n)",
            "task_solution": "(recursive (transpose successor) equal (recursive successor equal successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1423597169923596,
            "num_unique_values": 37,
            "num_values_explored": 106,
            "solution": "(recursive (chain (transpose successor) successor) successor (transpose successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (chain (transpose successor) successor) successor (transpose successor))\n)",
            "task_solution": "(recursive (chain (transpose successor) successor) successor (transpose successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.17763738700887188,
            "num_unique_values": 56,
            "num_values_explored": 137,
            "solution": "(chain (transpose (chain successor successor)) (chain successor successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (transpose (chain successor successor)) (chain successor successor))\n)",
            "task_solution": "(chain (transpose (chain successor successor)) (chain successor successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.22367079998366535,
            "num_unique_values": 78,
            "num_values_explored": 163,
            "solution": "(recursive equal (chain (recursive (transpose successor) successor (transpose successor)) successor) successor)",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive equal (recursive equal successor (transpose successor)) successor)\n)",
            "task_solution": "(recursive equal (recursive equal successor (transpose successor)) successor)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1759753900114447,
            "num_unique_values": 57,
            "num_values_explored": 145,
            "solution": "(chain (disjunction (chain zero successor) (transpose successor)) successor)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (disjunction (transpose successor) (chain zero successor)) successor)\n)",
            "task_solution": "(chain (disjunction (transpose successor) (chain zero successor)) successor)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1686169250169769,
            "num_unique_values": 60,
            "num_values_explored": 139,
            "solution": "(chain (transpose (chain (disjunction zero successor) successor)) successor)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (transpose (chain (disjunction zero successor) successor)) successor)\n)",
            "task_solution": "(chain (transpose (chain (disjunction zero successor) successor)) successor)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.21796916995663196,
            "num_unique_values": 76,
            "num_values_explored": 172,
            "solution": "(recursive (chain successor (chain successor successor)) zero successor)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (chain successor successor)) zero successor)\n)",
            "task_solution": "(recursive (chain successor (chain successor successor)) zero successor)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1640912659931928,
            "num_unique_values": 56,
            "num_values_explored": 140,
            "solution": "(chain (disjunction successor equal) (disjunction successor (transpose successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (disjunction successor equal) (disjunction successor (transpose successor)))\n)",
            "task_solution": "(chain (disjunction successor equal) (disjunction successor (transpose successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.2131208369974047,
            "num_unique_values": 83,
            "num_values_explored": 167,
            "solution": "(recursive (chain successor (chain successor successor)) successor (recursive equal equal successor))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (chain successor successor)) successor equal)\n)",
            "task_solution": "(recursive (chain successor (chain successor successor)) successor equal)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.28655854699900374,
            "num_unique_values": 122,
            "num_values_explored": 220,
            "solution": "(recursive equal successor (recursive equal successor (transpose successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (recursive equal successor (transpose successor)))\n)",
            "task_solution": "(recursive equal successor (recursive equal successor (transpose successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.20453181100310758,
            "num_unique_values": 78,
            "num_values_explored": 161,
            "solution": "(recursive (disjunction successor (disjunction (transpose successor) (chain successor successor))) equal (transpose successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(recursive (transpose successor) (disjunction successor equal) (transpose successor))\n)",
            "task_solution": "(recursive (transpose successor) (disjunction successor equal) (transpose successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.12806634802836925,
            "num_unique_values": 36,
            "num_values_explored": 106,
            "solution": "(recursive (chain successor successor) equal (chain successor successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor successor) equal (chain successor successor))\n)",
            "task_solution": "(recursive (chain successor successor) equal (chain successor successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.14567044796422124,
            "num_unique_values": 50,
            "num_values_explored": 126,
            "solution": "(transpose (recursive successor equal (disjunction successor (transpose successor))))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (transpose successor) (disjunction successor (transpose successor)) equal)\n)",
            "task_solution": "(recursive (transpose successor) (disjunction successor (transpose successor)) equal)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1702782299835235,
            "num_unique_values": 57,
            "num_values_explored": 143,
            "solution": "(chain successor (disjunction (transpose successor) (chain successor successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (disjunction (transpose successor) (chain successor successor)))\n)",
            "task_solution": "(chain successor (disjunction (transpose successor) (chain successor successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.18094395898515359,
            "num_unique_values": 66,
            "num_values_explored": 154,
            "solution": "(disjunction zero (disjunction successor (transpose (chain successor successor))))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(disjunction zero (disjunction successor (transpose (chain successor successor))))\n)",
            "task_solution": "(disjunction zero (disjunction successor (transpose (chain successor successor))))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1398394710267894,
            "num_unique_values": 44,
            "num_values_explored": 115,
            "solution": "(recursive (recursive successor equal successor) (transpose successor) (chain zero successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (recursive equal (transpose successor) zero) successor)\n)",
            "task_solution": "(recursive successor (recursive equal (transpose successor) zero) successor)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.25110923999454826,
            "num_unique_values": 99,
            "num_values_explored": 198,
            "solution": "(chain (disjunction successor (transpose (disjunction successor equal))) successor)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (disjunction successor (transpose (disjunction successor equal))) successor)\n)",
            "task_solution": "(chain (disjunction successor (transpose (disjunction successor equal))) successor)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.20210984395816922,
            "num_unique_values": 66,
            "num_values_explored": 149,
            "solution": "(disjunction (transpose successor) (chain successor (chain successor successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n        False],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [False, False, False,  True, False, False, False,  True, False,\n        False],\n       [False, False, False, False,  True, False, False, False,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (chain successor (chain successor successor)))\n)",
            "task_solution": "(disjunction (transpose successor) (chain successor (chain successor successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1913123470149003,
            "num_unique_values": 66,
            "num_values_explored": 159,
            "solution": "(disjunction successor (chain (disjunction equal successor) (transpose successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction successor (chain (disjunction successor equal) (transpose successor)))\n)",
            "task_solution": "(disjunction successor (chain (disjunction successor equal) (transpose successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1347476000082679,
            "num_unique_values": 36,
            "num_values_explored": 109,
            "solution": "(recursive (chain successor successor) (chain successor successor) successor)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor successor) (chain successor successor) successor)\n)",
            "task_solution": "(recursive (chain successor successor) (chain successor successor) successor)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.21401960297953337,
            "num_unique_values": 77,
            "num_values_explored": 161,
            "solution": "(recursive equal (transpose (chain successor successor)) (transpose successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive equal (transpose (chain successor successor)) (transpose successor))\n)",
            "task_solution": "(recursive equal (transpose (chain successor successor)) (transpose successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.13419475796399638,
            "num_unique_values": 36,
            "num_values_explored": 111,
            "solution": "(recursive successor successor (transpose (recursive successor successor equal)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (recursive (transpose successor) equal successor))\n)",
            "task_solution": "(recursive successor successor (recursive (transpose successor) equal successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.14385926903923973,
            "num_unique_values": 40,
            "num_values_explored": 110,
            "solution": "(recursive (disjunction equal (transpose successor)) zero (transpose successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(recursive (transpose (disjunction successor equal)) zero (transpose successor))\n)",
            "task_solution": "(recursive (transpose (disjunction successor equal)) zero (transpose successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.2683584970072843,
            "num_unique_values": 86,
            "num_values_explored": 177,
            "solution": "(transpose (chain (disjunction successor equal) (disjunction successor equal)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True]])],\n    solution=(transpose (chain (disjunction successor equal) (disjunction successor equal)))\n)",
            "task_solution": "(transpose (chain (disjunction successor equal) (disjunction successor equal)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.18174484401242808,
            "num_unique_values": 59,
            "num_values_explored": 137,
            "solution": "(chain (recursive successor successor (chain successor successor)) successor)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor successor (chain successor successor)) successor)\n)",
            "task_solution": "(chain (recursive successor successor (chain successor successor)) successor)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.23513233300764114,
            "num_unique_values": 86,
            "num_values_explored": 191,
            "solution": "(transpose (chain successor (disjunction successor (chain successor successor))))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False]])],\n    solution=(transpose (chain successor (chain successor (disjunction successor equal))))\n)",
            "task_solution": "(transpose (chain successor (chain successor (disjunction successor equal))))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1813323479727842,
            "num_unique_values": 67,
            "num_values_explored": 150,
            "solution": "(disjunction equal (chain (transpose (chain successor successor)) successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(disjunction equal (chain (transpose (chain successor successor)) successor))\n)",
            "task_solution": "(disjunction equal (chain (transpose (chain successor successor)) successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.11276231100782752,
            "num_unique_values": 31,
            "num_values_explored": 97,
            "solution": "(disjunction equal (chain successor (recursive successor successor equal)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (recursive (transpose successor) equal successor))\n)",
            "task_solution": "(recursive equal successor (recursive (transpose successor) equal successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.18852439004695043,
            "num_unique_values": 62,
            "num_values_explored": 140,
            "solution": "(chain (transpose (chain successor successor)) (chain zero successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (transpose (chain successor successor)) (chain zero successor))\n)",
            "task_solution": "(chain (transpose (chain successor successor)) (chain zero successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.2672721709823236,
            "num_unique_values": 86,
            "num_values_explored": 196,
            "solution": "(transpose (recursive zero zero (transpose (chain successor successor))))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (recursive zero zero (transpose (chain successor successor))))\n)",
            "task_solution": "(transpose (recursive zero zero (transpose (chain successor successor))))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.2282704830286093,
            "num_unique_values": 81,
            "num_values_explored": 162,
            "solution": "(recursive successor successor (chain successor (chain successor successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (chain successor (chain successor successor)))\n)",
            "task_solution": "(recursive successor successor (chain successor (chain successor successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.14195246301824227,
            "num_unique_values": 36,
            "num_values_explored": 110,
            "solution": "(recursive (disjunction successor equal) (chain zero successor) equal)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (disjunction successor equal) (chain zero successor) equal)\n)",
            "task_solution": "(recursive (disjunction successor equal) (chain zero successor) equal)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1708924500271678,
            "num_unique_values": 57,
            "num_values_explored": 141,
            "solution": "(chain successor (disjunction successor (chain successor (transpose successor))))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (transpose (disjunction successor equal))))\n)",
            "task_solution": "(chain successor (chain successor (transpose (disjunction successor equal))))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1954197200248018,
            "num_unique_values": 56,
            "num_values_explored": 140,
            "solution": "(chain (transpose successor) (disjunction (chain successor successor) successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (transpose successor) (chain successor (disjunction successor equal)))\n)",
            "task_solution": "(chain (transpose successor) (chain successor (disjunction successor equal)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.3373759069945663,
            "num_unique_values": 126,
            "num_values_explored": 266,
            "solution": "(transpose (chain zero (chain successor (chain successor successor))))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (chain zero (chain successor (chain successor successor))))\n)",
            "task_solution": "(transpose (chain zero (chain successor (chain successor successor))))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.2245736009790562,
            "num_unique_values": 86,
            "num_values_explored": 176,
            "solution": "(transpose (disjunction equal (chain successor (chain successor successor))))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True]])],\n    solution=(transpose (disjunction equal (chain successor (chain successor successor))))\n)",
            "task_solution": "(transpose (disjunction equal (chain successor (chain successor successor))))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.18690986896399409,
            "num_unique_values": 69,
            "num_values_explored": 156,
            "solution": "(disjunction (transpose successor) (chain (recursive successor (transpose successor) successor) zero))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [ True, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (transpose (chain successor successor)) zero)\n)",
            "task_solution": "(recursive (transpose successor) (transpose (chain successor successor)) zero)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.2556531709851697,
            "num_unique_values": 88,
            "num_values_explored": 185,
            "solution": "(transpose (disjunction successor (recursive equal (transpose successor) successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False,  True,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False,  True,  True, False,  True, False,\n         True],\n       [False, False, False, False, False,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction successor (recursive equal (transpose successor) successor)))\n)",
            "task_solution": "(transpose (disjunction successor (recursive equal (transpose successor) successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.3124273860012181,
            "num_unique_values": 111,
            "num_values_explored": 221,
            "solution": "(disjunction (recursive equal (transpose successor) successor) (transpose (disjunction equal (chain zero (chain (recursive successor successor equal) successor)))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(recursive equal (transpose successor) (recursive successor zero (transpose successor)))\n)",
            "task_solution": "(recursive equal (transpose successor) (recursive successor zero (transpose successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1411867579445243,
            "num_unique_values": 44,
            "num_values_explored": 108,
            "solution": "(recursive (disjunction successor equal) successor (recursive successor equal successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (disjunction successor equal) successor (recursive successor equal successor))\n)",
            "task_solution": "(recursive (disjunction successor equal) successor (recursive successor equal successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.14114739798242226,
            "num_unique_values": 38,
            "num_values_explored": 109,
            "solution": "(recursive (transpose successor) (chain successor (transpose successor)) (transpose successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (chain successor (transpose successor)) (transpose successor))\n)",
            "task_solution": "(recursive (transpose successor) (chain successor (transpose successor)) (transpose successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.23883739300072193,
            "num_unique_values": 87,
            "num_values_explored": 179,
            "solution": "(transpose (disjunction equal (recursive successor successor (chain successor successor))))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction equal (recursive successor successor (chain successor successor))))\n)",
            "task_solution": "(transpose (disjunction equal (recursive successor successor (chain successor successor))))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.17886676301714033,
            "num_unique_values": 56,
            "num_values_explored": 135,
            "solution": "(chain (disjunction zero (chain successor successor)) (chain successor successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction zero (chain successor successor)) (chain successor successor))\n)",
            "task_solution": "(chain (disjunction zero (chain successor successor)) (chain successor successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.11327709798933938,
            "num_unique_values": 27,
            "num_values_explored": 96,
            "solution": "(disjunction (chain successor successor) (transpose (recursive successor equal successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (chain successor successor) (recursive (transpose successor) successor equal))\n)",
            "task_solution": "(disjunction (chain successor successor) (recursive (transpose successor) successor equal))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.2492602719576098,
            "num_unique_values": 87,
            "num_values_explored": 181,
            "solution": "(transpose (chain (disjunction (transpose successor) successor) (disjunction equal successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True]])],\n    solution=(transpose (chain (disjunction successor (transpose successor)) (disjunction successor equal)))\n)",
            "task_solution": "(transpose (chain (disjunction successor (transpose successor)) (disjunction successor equal)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.21852450800361112,
            "num_unique_values": 76,
            "num_values_explored": 161,
            "solution": "(recursive equal (chain successor (disjunction successor (transpose successor))) successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (chain successor (disjunction successor (transpose successor))) successor)\n)",
            "task_solution": "(recursive equal (chain successor (disjunction successor (transpose successor))) successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1300362009787932,
            "num_unique_values": 37,
            "num_values_explored": 107,
            "solution": "(recursive successor (chain successor successor) (disjunction successor (transpose successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (chain successor successor) (disjunction successor (transpose successor)))\n)",
            "task_solution": "(recursive successor (chain successor successor) (disjunction successor (transpose successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.17739690298913047,
            "num_unique_values": 59,
            "num_values_explored": 135,
            "solution": "(chain successor (transpose (chain (recursive successor successor equal) successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (transpose (chain successor successor))) equal successor)\n)",
            "task_solution": "(recursive (chain successor (transpose (chain successor successor))) equal successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.30295978899812326,
            "num_unique_values": 96,
            "num_values_explored": 202,
            "solution": "(chain zero (disjunction successor (recursive equal successor (transpose successor))))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain zero (disjunction successor (recursive equal successor (transpose successor))))\n)",
            "task_solution": "(chain zero (disjunction successor (recursive equal successor (transpose successor))))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1744851419935003,
            "num_unique_values": 58,
            "num_values_explored": 140,
            "solution": "(chain (transpose successor) (recursive (chain successor successor) zero successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (transpose successor) (recursive (chain successor successor) zero successor))\n)",
            "task_solution": "(chain (transpose successor) (recursive (chain successor successor) zero successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.24154684599488974,
            "num_unique_values": 86,
            "num_values_explored": 183,
            "solution": "(transpose (disjunction equal (recursive (chain successor successor) equal successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True]])],\n    solution=(transpose (disjunction equal (recursive (chain successor successor) equal successor)))\n)",
            "task_solution": "(transpose (disjunction equal (recursive (chain successor successor) equal successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.21469306602375582,
            "num_unique_values": 76,
            "num_values_explored": 161,
            "solution": "(recursive successor (chain (transpose (chain successor successor)) successor) successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive successor (chain (transpose (chain successor successor)) successor) successor)\n)",
            "task_solution": "(recursive successor (chain (transpose (chain successor successor)) successor) successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1697322940453887,
            "num_unique_values": 56,
            "num_values_explored": 137,
            "solution": "(chain (recursive successor (transpose successor) (disjunction successor equal)) successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (recursive successor (transpose successor) (disjunction successor equal)) successor)\n)",
            "task_solution": "(chain (recursive successor (transpose successor) (disjunction successor equal)) successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.20096734899561852,
            "num_unique_values": 71,
            "num_values_explored": 163,
            "solution": "(disjunction (chain zero successor) (recursive zero zero (transpose successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (transpose (recursive zero zero (transpose successor))) successor equal)\n)",
            "task_solution": "(recursive (transpose (recursive zero zero (transpose successor))) successor equal)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.130787838017568,
            "num_unique_values": 37,
            "num_values_explored": 108,
            "solution": "(recursive (transpose successor) (recursive successor successor equal) (disjunction (chain successor successor) equal))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) successor (disjunction equal (chain successor successor)))\n)",
            "task_solution": "(recursive (transpose successor) successor (disjunction equal (chain successor successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.22733821300789714,
            "num_unique_values": 88,
            "num_values_explored": 179,
            "solution": "(transpose (chain (recursive successor (chain successor successor) successor) successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False]])],\n    solution=(transpose (chain (recursive successor (chain successor successor) successor) successor))\n)",
            "task_solution": "(transpose (chain (recursive successor (chain successor successor) successor) successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.23748927103588358,
            "num_unique_values": 100,
            "num_values_explored": 186,
            "solution": "(chain (chain successor successor) (chain successor (chain successor successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (chain successor (chain successor successor))))\n)",
            "task_solution": "(chain successor (chain successor (chain successor (chain successor successor))))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.28707034402759746,
            "num_unique_values": 100,
            "num_values_explored": 204,
            "solution": "(chain (disjunction (chain successor successor) equal) (disjunction successor equal))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (disjunction successor equal) (disjunction equal (chain successor successor)))\n)",
            "task_solution": "(chain (disjunction successor equal) (disjunction equal (chain successor successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1897499089827761,
            "num_unique_values": 63,
            "num_values_explored": 142,
            "solution": "(chain (recursive equal (transpose successor) successor) (disjunction zero successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (disjunction zero successor) (transpose (chain successor successor)) equal)\n)",
            "task_solution": "(recursive (disjunction zero successor) (transpose (chain successor successor)) equal)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.14202560699777678,
            "num_unique_values": 42,
            "num_values_explored": 107,
            "solution": "(recursive (disjunction zero (chain successor successor)) successor (transpose successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (disjunction zero (chain successor successor)) successor (transpose successor))\n)",
            "task_solution": "(recursive (disjunction zero (chain successor successor)) successor (transpose successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.22027660702588037,
            "num_unique_values": 84,
            "num_values_explored": 158,
            "solution": "(recursive successor successor (recursive equal (chain successor successor) successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (recursive equal (chain successor successor) successor))\n)",
            "task_solution": "(recursive successor successor (recursive equal (chain successor successor) successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.19185983901843429,
            "num_unique_values": 66,
            "num_values_explored": 157,
            "solution": "(disjunction equal (recursive (chain successor successor) zero (transpose successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (recursive (chain successor successor) zero (transpose successor)))\n)",
            "task_solution": "(disjunction equal (recursive (chain successor successor) zero (transpose successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.13239546300610527,
            "num_unique_values": 39,
            "num_values_explored": 108,
            "solution": "(recursive (chain successor successor) (disjunction zero successor) (transpose successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor successor) (disjunction zero successor) (transpose successor))\n)",
            "task_solution": "(recursive (chain successor successor) (disjunction zero successor) (transpose successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.16703848796896636,
            "num_unique_values": 56,
            "num_values_explored": 130,
            "solution": "(chain (disjunction successor equal) (recursive (disjunction successor (transpose successor)) (transpose successor) successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(chain (disjunction successor equal) (recursive successor (transpose successor) successor))\n)",
            "task_solution": "(chain (disjunction successor equal) (recursive successor (transpose successor) successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.2442045509815216,
            "num_unique_values": 86,
            "num_values_explored": 191,
            "solution": "(transpose (chain (disjunction successor (transpose (chain successor successor))) successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(transpose (chain (disjunction successor (transpose (chain successor successor))) successor))\n)",
            "task_solution": "(transpose (chain (disjunction successor (transpose (chain successor successor))) successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.13294074597069994,
            "num_unique_values": 42,
            "num_values_explored": 109,
            "solution": "(recursive (transpose successor) (transpose (recursive successor equal successor)) successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (recursive (transpose successor) successor equal) successor)\n)",
            "task_solution": "(recursive (transpose successor) (recursive (transpose successor) successor equal) successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.17253450804855675,
            "num_unique_values": 57,
            "num_values_explored": 141,
            "solution": "(chain (recursive (disjunction zero successor) successor (transpose successor)) successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (disjunction zero successor) successor) successor (transpose successor))\n)",
            "task_solution": "(recursive (chain (disjunction zero successor) successor) successor (transpose successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.2203502680058591,
            "num_unique_values": 81,
            "num_values_explored": 165,
            "solution": "(recursive equal (chain zero successor) (transpose (chain successor successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (chain zero successor) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive equal (chain zero successor) (transpose (chain successor successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.15191777900326997,
            "num_unique_values": 37,
            "num_values_explored": 109,
            "solution": "(recursive (disjunction successor equal) equal (recursive successor equal successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (disjunction successor equal) equal (recursive successor equal successor))\n)",
            "task_solution": "(recursive (disjunction successor equal) equal (recursive successor equal successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.17952658899594098,
            "num_unique_values": 56,
            "num_values_explored": 137,
            "solution": "(chain (disjunction zero (chain successor successor)) (disjunction zero successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction zero (chain successor successor)) (disjunction zero successor))\n)",
            "task_solution": "(chain (disjunction zero (chain successor successor)) (disjunction zero successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.16159824101487175,
            "num_unique_values": 56,
            "num_values_explored": 135,
            "solution": "(chain successor (disjunction successor (transpose (recursive successor successor equal))))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (disjunction successor (recursive (transpose successor) equal successor)))\n)",
            "task_solution": "(chain successor (disjunction successor (recursive (transpose successor) equal successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.21553142002085224,
            "num_unique_values": 79,
            "num_values_explored": 162,
            "solution": "(recursive successor (recursive successor successor (chain successor successor)) (recursive equal equal successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (recursive successor successor (chain successor successor)) equal)\n)",
            "task_solution": "(recursive successor (recursive successor successor (chain successor successor)) equal)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.22561169601976871,
            "num_unique_values": 76,
            "num_values_explored": 179,
            "solution": "(recursive (recursive (transpose successor) equal (chain zero successor)) successor zero)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose (disjunction zero successor)) equal (chain zero successor))\n)",
            "task_solution": "(recursive (transpose (disjunction zero successor)) equal (chain zero successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1728467220091261,
            "num_unique_values": 59,
            "num_values_explored": 138,
            "solution": "(chain (recursive successor (chain (transpose successor) successor) successor) successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor (chain (transpose successor) successor) successor) successor)\n)",
            "task_solution": "(chain (recursive successor (chain (transpose successor) successor) successor) successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.21548822603654116,
            "num_unique_values": 76,
            "num_values_explored": 165,
            "solution": "(recursive (chain successor (chain successor successor)) (transpose successor) successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False]])],\n    solution=(recursive (chain successor (chain successor successor)) (transpose successor) successor)\n)",
            "task_solution": "(recursive (chain successor (chain successor successor)) (transpose successor) successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.17603000602684915,
            "num_unique_values": 56,
            "num_values_explored": 137,
            "solution": "(chain (recursive successor (transpose successor) successor) (disjunction zero successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(chain (recursive successor (transpose successor) successor) (disjunction zero successor))\n)",
            "task_solution": "(chain (recursive successor (transpose successor) successor) (disjunction zero successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.187811887008138,
            "num_unique_values": 66,
            "num_values_explored": 158,
            "solution": "(disjunction equal (chain successor (recursive successor (transpose successor) successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain successor (recursive successor (transpose successor) successor)))\n)",
            "task_solution": "(disjunction equal (chain successor (recursive successor (transpose successor) successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.2139960369677283,
            "num_unique_values": 78,
            "num_values_explored": 168,
            "solution": "(recursive (transpose successor) (chain (disjunction zero successor) successor) equal)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (chain (disjunction zero successor) successor) equal)\n)",
            "task_solution": "(recursive (transpose successor) (chain (disjunction zero successor) successor) equal)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.21801112295361236,
            "num_unique_values": 76,
            "num_values_explored": 167,
            "solution": "(recursive (recursive (chain successor successor) (recursive successor equal successor) equal) (transpose successor) equal)",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (chain successor successor) (disjunction successor (transpose successor)) equal)\n)",
            "task_solution": "(recursive (chain successor successor) (disjunction successor (transpose successor)) equal)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.19621228700270876,
            "num_unique_values": 66,
            "num_values_explored": 153,
            "solution": "(disjunction equal (recursive successor (transpose successor) (disjunction zero successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True,  True,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n         True]])],\n    solution=(disjunction equal (recursive successor (transpose successor) (disjunction zero successor)))\n)",
            "task_solution": "(disjunction equal (recursive successor (transpose successor) (disjunction zero successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.13566478196298704,
            "num_unique_values": 37,
            "num_values_explored": 110,
            "solution": "(recursive (disjunction (chain successor successor) (transpose successor)) zero successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (disjunction (transpose successor) (chain successor successor)) zero successor)\n)",
            "task_solution": "(recursive (disjunction (transpose successor) (chain successor successor)) zero successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.15306823595892638,
            "num_unique_values": 46,
            "num_values_explored": 122,
            "solution": "(transpose (recursive (chain successor successor) equal (chain successor successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain successor successor)) (chain successor successor) equal)\n)",
            "task_solution": "(recursive (transpose (chain successor successor)) (chain successor successor) equal)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1382746720337309,
            "num_unique_values": 36,
            "num_values_explored": 105,
            "solution": "(recursive equal (disjunction successor (transpose successor)) (chain successor successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True,  True,\n        False],\n       [ True,  True,  True,  True, False,  True,  True, False, False,\n         True]])],\n    solution=(recursive equal (disjunction successor (transpose successor)) (chain successor successor))\n)",
            "task_solution": "(recursive equal (disjunction successor (transpose successor)) (chain successor successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.13191205804469064,
            "num_unique_values": 39,
            "num_values_explored": 108,
            "solution": "(recursive successor (recursive equal successor equal) (chain successor successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (recursive equal successor equal) (chain successor successor))\n)",
            "task_solution": "(recursive successor (recursive equal successor equal) (chain successor successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.2387419940205291,
            "num_unique_values": 87,
            "num_values_explored": 183,
            "solution": "(transpose (chain (disjunction (transpose successor) (chain successor successor)) successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True]])],\n    solution=(transpose (chain (disjunction (transpose successor) (chain successor successor)) successor))\n)",
            "task_solution": "(transpose (chain (disjunction (transpose successor) (chain successor successor)) successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.22958742402261123,
            "num_unique_values": 76,
            "num_values_explored": 171,
            "solution": "(recursive (transpose (chain (disjunction zero successor) successor)) equal successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain (disjunction zero successor) successor)) equal successor)\n)",
            "task_solution": "(recursive (transpose (chain (disjunction zero successor) successor)) equal successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.13313327200012282,
            "num_unique_values": 36,
            "num_values_explored": 108,
            "solution": "(recursive (transpose successor) (chain successor successor) (disjunction successor equal))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (chain successor successor) (disjunction successor equal))\n)",
            "task_solution": "(recursive (transpose successor) (chain successor successor) (disjunction successor equal))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.18896882003173232,
            "num_unique_values": 70,
            "num_values_explored": 154,
            "solution": "(disjunction (recursive successor (transpose successor) (recursive equal equal successor)) (recursive (transpose successor) (transpose successor) (recursive equal equal successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive successor (transpose successor) (recursive successor (transpose successor) equal))\n)",
            "task_solution": "(recursive successor (transpose successor) (recursive successor (transpose successor) equal))",
            "task_solution_weight": 9
        }
    ],
    "success_rate": 0.9445234708392604
}
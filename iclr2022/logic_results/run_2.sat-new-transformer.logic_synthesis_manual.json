{
    "num_tasks": 30,
    "num_tasks_solved": 28,
    "results": [
        {
            "elapsed_time": 0.12291219498729333,
            "num_unique_values": 26,
            "num_values_explored": 97,
            "solution": "(disjunction successor (transpose successor))",
            "solution_weight": 4,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction successor (transpose successor))\n)",
            "task_solution": "(disjunction successor (transpose successor))",
            "task_solution_weight": 4
        },
        {
            "elapsed_time": 0.19468828901881352,
            "num_unique_values": 66,
            "num_values_explored": 151,
            "solution": "(disjunction (chain successor successor) (transpose (chain successor successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n        False],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [False, False, False,  True, False, False, False,  True, False,\n        False],\n       [False, False, False, False,  True, False, False, False,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(disjunction (chain successor successor) (transpose (chain successor successor)))\n)",
            "task_solution": "(disjunction (chain successor successor) (transpose (chain successor successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.2799999369890429,
            "num_unique_values": 106,
            "num_values_explored": 203,
            "solution": "(disjunction (transpose (chain successor (chain successor successor))) (chain successor (chain successor successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [ True, False, False, False, False, False,  True, False, False,\n        False],\n       [False,  True, False, False, False, False, False,  True, False,\n        False],\n       [False, False,  True, False, False, False, False, False,  True,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n         True],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False]])],\n    solution=(disjunction (chain successor (chain successor successor)) (transpose (chain successor (chain successor successor))))\n)",
            "task_solution": "(disjunction (chain successor (chain successor successor)) (transpose (chain successor (chain successor successor))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.30361747299320996,
            "num_unique_values": 106,
            "num_values_explored": 209,
            "solution": "(disjunction (chain (chain successor successor) (chain successor successor)) (transpose (chain (chain successor successor) (chain successor successor))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n         True],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False]])],\n    solution=(disjunction (chain successor (chain successor (chain successor successor))) (transpose (chain successor (chain successor (chain successor successor)))))\n)",
            "task_solution": "(disjunction (chain successor (chain successor (chain successor successor))) (transpose (chain successor (chain successor (chain successor successor)))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.5227413410320878,
            "num_unique_values": 187,
            "num_values_explored": 387,
            "solution": "(disjunction (chain (chain successor successor) (chain successor (chain successor successor))) (transpose (chain (chain successor successor) (chain successor (chain successor successor)))))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False]])],\n    solution=(disjunction (chain successor (chain successor (chain successor (chain successor successor)))) (transpose (chain successor (chain successor (chain successor (chain successor successor))))))\n)",
            "task_solution": "(disjunction (chain successor (chain successor (chain successor (chain successor successor)))) (transpose (chain successor (chain successor (chain successor (chain successor successor))))))",
            "task_solution_weight": 20
        },
        {
            "elapsed_time": 50.03193195100175,
            "num_unique_values": 1257,
            "num_values_explored": 50073,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False]])],\n    solution=(disjunction (chain successor (chain successor (chain successor (chain successor (chain successor successor))))) (transpose (chain successor (chain successor (chain successor (chain successor (chain successor successor)))))))\n)",
            "task_solution": "(disjunction (chain successor (chain successor (chain successor (chain successor (chain successor successor))))) (transpose (chain successor (chain successor (chain successor (chain successor (chain successor successor)))))))",
            "task_solution_weight": 24
        },
        {
            "elapsed_time": 59.08946318895323,
            "num_unique_values": 2117,
            "num_values_explored": 50014,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction (chain successor (chain successor (chain successor (chain successor (chain successor (chain successor successor)))))) (transpose (chain successor (chain successor (chain successor (chain successor (chain successor (chain successor successor))))))))\n)",
            "task_solution": "(disjunction (chain successor (chain successor (chain successor (chain successor (chain successor (chain successor successor)))))) (transpose (chain successor (chain successor (chain successor (chain successor (chain successor (chain successor successor))))))))",
            "task_solution_weight": 28
        },
        {
            "elapsed_time": 0.13887152704410255,
            "num_unique_values": 37,
            "num_values_explored": 107,
            "solution": "(recursive zero (transpose successor) (transpose successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([ True, False,  True, False,  True, False,  True, False,  True,\n       False])],\n    solution=(recursive zero (transpose (chain successor successor)) equal)\n)",
            "task_solution": "(recursive zero (transpose (chain successor successor)) equal)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.22600101900752634,
            "num_unique_values": 76,
            "num_values_explored": 164,
            "solution": "(recursive zero (transpose successor) (transpose (chain successor successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([ True, False, False,  True, False, False,  True, False, False,\n        True])],\n    solution=(recursive zero (transpose (chain successor (chain successor successor))) equal)\n)",
            "task_solution": "(recursive zero (transpose (chain successor (chain successor successor))) equal)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.3989172690198757,
            "num_unique_values": 161,
            "num_values_explored": 308,
            "solution": "(recursive zero (transpose successor) (transpose (chain successor (chain successor successor))))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([ True, False, False, False,  True, False, False, False,  True,\n       False])],\n    solution=(recursive zero (transpose (chain successor (chain successor (chain successor successor)))) equal)\n)",
            "task_solution": "(recursive zero (transpose (chain successor (chain successor (chain successor successor)))) equal)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.09312564798165113,
            "num_unique_values": 16,
            "num_values_explored": 85,
            "solution": "(chain successor successor)",
            "solution_weight": 3,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor successor)\n)",
            "task_solution": "(chain successor successor)",
            "task_solution_weight": 3
        },
        {
            "elapsed_time": 0.16874137800186872,
            "num_unique_values": 56,
            "num_values_explored": 140,
            "solution": "(chain successor (chain successor successor))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor successor))\n)",
            "task_solution": "(chain successor (chain successor successor))",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.24333651701454073,
            "num_unique_values": 96,
            "num_values_explored": 194,
            "solution": "(chain successor (chain successor (chain successor successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (chain successor successor)))\n)",
            "task_solution": "(chain successor (chain successor (chain successor successor)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.2588769139838405,
            "num_unique_values": 101,
            "num_values_explored": 201,
            "solution": "(chain successor (chain (disjunction zero (chain successor successor)) (chain successor successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (chain successor (chain successor successor))))\n)",
            "task_solution": "(chain successor (chain successor (chain successor (chain successor successor))))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.45463972102152184,
            "num_unique_values": 176,
            "num_values_explored": 337,
            "solution": "(chain successor (chain successor (recursive (chain successor (chain successor (chain successor successor))) successor (transpose (chain successor (chain successor successor))))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (chain successor (chain successor (chain successor successor)))))\n)",
            "task_solution": "(chain successor (chain successor (chain successor (chain successor (chain successor successor)))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.1531376369530335,
            "num_unique_values": 46,
            "num_values_explored": 129,
            "solution": "(transpose (chain successor successor))",
            "solution_weight": 4,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(transpose (chain successor successor))\n)",
            "task_solution": "(transpose (chain successor successor))",
            "task_solution_weight": 4
        },
        {
            "elapsed_time": 0.23113705002469942,
            "num_unique_values": 86,
            "num_values_explored": 178,
            "solution": "(transpose (chain successor (chain successor successor)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False]])],\n    solution=(transpose (chain successor (chain successor successor)))\n)",
            "task_solution": "(transpose (chain successor (chain successor successor)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.31567894597537816,
            "num_unique_values": 126,
            "num_values_explored": 252,
            "solution": "(transpose (chain successor (chain successor (chain successor successor))))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False]])],\n    solution=(transpose (chain successor (chain successor (chain successor successor))))\n)",
            "task_solution": "(transpose (chain successor (chain successor (chain successor successor))))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.43654080701526254,
            "num_unique_values": 168,
            "num_values_explored": 314,
            "solution": "(transpose (chain successor (chain successor (chain successor (chain successor successor)))))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False]])],\n    solution=(transpose (chain successor (chain successor (chain successor (chain successor successor)))))\n)",
            "task_solution": "(transpose (chain successor (chain successor (chain successor (chain successor successor)))))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.39758085599169135,
            "num_unique_values": 167,
            "num_values_explored": 299,
            "solution": "(transpose (chain successor (chain (disjunction zero (chain successor successor)) (chain successor (chain successor successor)))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False]])],\n    solution=(transpose (chain successor (chain successor (chain successor (chain successor (chain successor successor))))))\n)",
            "task_solution": "(transpose (chain successor (chain successor (chain successor (chain successor (chain successor successor))))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.2260151759837754,
            "num_unique_values": 76,
            "num_values_explored": 175,
            "solution": "(recursive (transpose zero) (transpose (chain successor successor)) (transpose successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (transpose zero) (transpose (chain successor successor)) (transpose successor))\n)",
            "task_solution": "(recursive (transpose zero) (transpose (chain successor successor)) (transpose successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.3122650849982165,
            "num_unique_values": 116,
            "num_values_explored": 228,
            "solution": "(recursive (transpose zero) (transpose (chain successor (chain successor successor))) (transpose successor))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False]])],\n    solution=(recursive (transpose zero) (transpose (chain successor (chain successor successor))) (transpose successor))\n)",
            "task_solution": "(recursive (transpose zero) (transpose (chain successor (chain successor successor))) (transpose successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.40218801802257076,
            "num_unique_values": 156,
            "num_values_explored": 319,
            "solution": "(recursive (transpose zero) (transpose (chain successor (chain successor (chain successor successor)))) (transpose successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (transpose zero) (transpose (chain successor (chain successor (chain successor successor)))) (transpose successor))\n)",
            "task_solution": "(recursive (transpose zero) (transpose (chain successor (chain successor (chain successor successor)))) (transpose successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.23716914595570415,
            "num_unique_values": 76,
            "num_values_explored": 172,
            "solution": "(recursive (transpose zero) (transpose successor) (transpose (chain successor successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (transpose zero) (transpose successor) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (transpose zero) (transpose successor) (transpose (chain successor successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.3261317670112476,
            "num_unique_values": 116,
            "num_values_explored": 250,
            "solution": "(recursive (transpose zero) (transpose successor) (transpose (chain successor (chain successor successor))))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (transpose zero) (transpose successor) (transpose (chain successor (chain successor successor))))\n)",
            "task_solution": "(recursive (transpose zero) (transpose successor) (transpose (chain successor (chain successor successor))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.4059840500121936,
            "num_unique_values": 156,
            "num_values_explored": 319,
            "solution": "(recursive (transpose zero) (transpose successor) (transpose (chain successor (chain successor (chain successor successor)))))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (transpose zero) (transpose successor) (transpose (chain successor (chain successor (chain successor successor)))))\n)",
            "task_solution": "(recursive (transpose zero) (transpose successor) (transpose (chain successor (chain successor (chain successor successor)))))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.07060559699311852,
            "num_unique_values": 5,
            "num_values_explored": 64,
            "solution": "(recursive successor successor equal)",
            "solution_weight": 4,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor equal)\n)",
            "task_solution": "(recursive successor successor equal)",
            "task_solution_weight": 4
        },
        {
            "elapsed_time": 0.08502211899030954,
            "num_unique_values": 12,
            "num_values_explored": 73,
            "solution": "(transpose (recursive successor successor equal))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (transpose successor) (transpose successor) equal)\n)",
            "task_solution": "(recursive (transpose successor) (transpose successor) equal)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.07885660999454558,
            "num_unique_values": 5,
            "num_values_explored": 64,
            "solution": "(recursive equal successor equal)",
            "solution_weight": 4,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction (recursive successor successor equal) equal)\n)",
            "task_solution": "(disjunction (recursive successor successor equal) equal)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.070045676024165,
            "num_unique_values": 5,
            "num_values_explored": 64,
            "solution": "(recursive equal equal successor)",
            "solution_weight": 4,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(disjunction (recursive (transpose successor) (transpose successor) equal) equal)\n)",
            "task_solution": "(disjunction (recursive (transpose successor) (transpose successor) equal) equal)",
            "task_solution_weight": 8
        }
    ],
    "success_rate": 0.9333333333333333
}
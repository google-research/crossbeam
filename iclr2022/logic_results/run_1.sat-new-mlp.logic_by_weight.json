{
    "num_tasks": 703,
    "num_tasks_solved": 647,
    "results": [
        {
            "elapsed_time": 0.23713013500673696,
            "num_unique_values": 108,
            "num_values_explored": 222,
            "solution": "(disjunction (chain successor successor) (chain (transpose (chain successor (chain successor successor))) successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n        False],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [False, False, False,  True, False, False, False,  True, False,\n        False],\n       [False, False, False, False,  True, False, False, False,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(chain (disjunction successor (transpose (chain successor (chain successor successor)))) successor)\n)",
            "task_solution": "(chain (disjunction successor (transpose (chain successor (chain successor successor)))) successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.14765965502010658,
            "num_unique_values": 71,
            "num_values_explored": 148,
            "solution": "(disjunction equal (chain (recursive successor (disjunction zero successor) (transpose successor)) (transpose successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive successor (disjunction zero successor) (transpose successor)) successor)\n)",
            "task_solution": "(recursive equal (recursive successor (disjunction zero successor) (transpose successor)) successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.188782841025386,
            "num_unique_values": 87,
            "num_values_explored": 185,
            "solution": "(transpose (chain (recursive successor (transpose successor) successor) (chain successor successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False]])],\n    solution=(transpose (chain (recursive successor (transpose successor) successor) (chain successor successor)))\n)",
            "task_solution": "(transpose (chain (recursive successor (transpose successor) successor) (chain successor successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.15644450898980722,
            "num_unique_values": 66,
            "num_values_explored": 147,
            "solution": "(disjunction (chain (transpose successor) successor) (recursive successor successor (transpose successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False,  True,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False,  True,  True, False,  True, False,\n         True],\n       [False, False, False, False, False,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (transpose (disjunction successor (recursive equal (transpose successor) successor))) successor)\n)",
            "task_solution": "(chain (transpose (disjunction successor (recursive equal (transpose successor) successor))) successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.17529806203674525,
            "num_unique_values": 82,
            "num_values_explored": 164,
            "solution": "(recursive successor (recursive (transpose successor) (transpose successor) successor) (transpose successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive successor (recursive (transpose successor) (transpose successor) successor) (transpose successor))\n)",
            "task_solution": "(recursive successor (recursive (transpose successor) (transpose successor) successor) (transpose successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.13802915095584467,
            "num_unique_values": 59,
            "num_values_explored": 131,
            "solution": "(chain (recursive equal successor (chain successor successor)) (chain zero successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive equal successor (chain successor successor)) (chain zero successor))\n)",
            "task_solution": "(chain (recursive equal successor (chain successor successor)) (chain zero successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.24250643095001578,
            "num_unique_values": 96,
            "num_values_explored": 221,
            "solution": "(chain (disjunction (chain zero successor) (transpose (chain successor successor))) successor)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (disjunction (chain zero successor) (transpose (chain successor successor))) successor)\n)",
            "task_solution": "(chain (disjunction (chain zero successor) (transpose (chain successor successor))) successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.3035969579941593,
            "num_unique_values": 156,
            "num_values_explored": 288,
            "solution": "(recursive (transpose (chain successor (disjunction equal successor))) equal (recursive (chain successor (chain successor successor)) equal successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (transpose successor) equal (recursive successor successor (chain successor successor)))\n)",
            "task_solution": "(recursive (transpose successor) equal (recursive successor successor (chain successor successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.3235782999545336,
            "num_unique_values": 147,
            "num_values_explored": 299,
            "solution": "(disjunction successor (chain (recursive successor (disjunction (chain successor successor) (transpose (chain successor successor))) successor) (chain (disjunction equal successor) (transpose successor))))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False]])],\n    solution=(recursive successor (recursive (chain successor successor) (transpose successor) successor) successor)\n)",
            "task_solution": "(recursive successor (recursive (chain successor successor) (transpose successor) successor) successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.192559317976702,
            "num_unique_values": 91,
            "num_values_explored": 185,
            "solution": "(transpose (disjunction (transpose successor) (chain (recursive successor (transpose successor) successor) successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True,  True,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True,  True,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True,  True,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True]])],\n    solution=(disjunction successor (transpose (chain (recursive successor (transpose successor) successor) successor)))\n)",
            "task_solution": "(disjunction successor (transpose (chain (recursive successor (transpose successor) successor) successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.18732290499610826,
            "num_unique_values": 76,
            "num_values_explored": 167,
            "solution": "(recursive (chain (transpose successor) (chain successor successor)) (transpose successor) successor)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (chain (transpose successor) (chain successor successor)) (transpose successor) successor)\n)",
            "task_solution": "(recursive (chain (transpose successor) (chain successor successor)) (transpose successor) successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.1358598800143227,
            "num_unique_values": 56,
            "num_values_explored": 136,
            "solution": "(chain (recursive successor (chain successor successor) (transpose successor)) (transpose successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False,  True, False, False,\n        False],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor successor (transpose (chain successor successor))) (transpose successor))\n)",
            "task_solution": "(chain (recursive successor successor (transpose (chain successor successor))) (transpose successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.18721039197407663,
            "num_unique_values": 86,
            "num_values_explored": 178,
            "solution": "(transpose (disjunction (recursive equal (transpose successor) successor) (chain (recursive equal equal successor) successor)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(recursive (transpose (disjunction successor equal)) equal (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (transpose (disjunction successor equal)) equal (transpose (chain successor successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.11384390195598826,
            "num_unique_values": 42,
            "num_values_explored": 108,
            "solution": "(recursive (disjunction equal (chain successor successor)) equal (chain zero successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (disjunction equal (chain successor successor)) equal (chain zero successor))\n)",
            "task_solution": "(recursive (disjunction equal (chain successor successor)) equal (chain zero successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.15721687499899417,
            "num_unique_values": 74,
            "num_values_explored": 152,
            "solution": "(disjunction equal (chain (transpose (chain successor successor)) (disjunction zero (chain zero successor))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive zero zero (transpose (chain successor successor))) successor)\n)",
            "task_solution": "(recursive equal (recursive zero zero (transpose (chain successor successor))) successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.16155891196103767,
            "num_unique_values": 66,
            "num_values_explored": 150,
            "solution": "(disjunction (transpose successor) (recursive successor (chain zero successor) (transpose successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (disjunction successor (transpose successor)) (chain zero successor) (transpose successor))\n)",
            "task_solution": "(recursive (disjunction successor (transpose successor)) (chain zero successor) (transpose successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.11335550900548697,
            "num_unique_values": 37,
            "num_values_explored": 109,
            "solution": "(recursive successor (chain (transpose (disjunction zero successor)) successor) (transpose successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (chain (transpose (disjunction zero successor)) successor) (transpose successor))\n)",
            "task_solution": "(recursive successor (chain (transpose (disjunction zero successor)) successor) (transpose successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.22980243002530187,
            "num_unique_values": 106,
            "num_values_explored": 208,
            "solution": "(disjunction equal (recursive successor (recursive successor successor (transpose successor)) successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False,  True,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False,  True,  True, False,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (recursive successor (recursive successor successor (transpose successor)) successor))\n)",
            "task_solution": "(disjunction equal (recursive successor (recursive successor successor (transpose successor)) successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.18939353397581726,
            "num_unique_values": 77,
            "num_values_explored": 168,
            "solution": "(recursive (transpose successor) (recursive zero (transpose successor) (transpose successor)) successor)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (recursive zero (transpose successor) (transpose successor)) successor)\n)",
            "task_solution": "(recursive (transpose successor) (recursive zero (transpose successor) (transpose successor)) successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.14841928298119456,
            "num_unique_values": 66,
            "num_values_explored": 145,
            "solution": "(disjunction equal (chain (recursive successor equal (chain successor successor)) successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain (recursive successor equal (chain successor successor)) successor))\n)",
            "task_solution": "(disjunction equal (chain (recursive successor equal (chain successor successor)) successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.22359437501290813,
            "num_unique_values": 96,
            "num_values_explored": 191,
            "solution": "(chain (transpose successor) (disjunction successor (recursive equal successor (transpose successor))))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True,  True,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True,  True,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(chain (transpose successor) (disjunction successor (recursive equal successor (transpose successor))))\n)",
            "task_solution": "(chain (transpose successor) (disjunction successor (recursive equal successor (transpose successor))))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.18964639498153701,
            "num_unique_values": 79,
            "num_values_explored": 167,
            "solution": "(recursive successor (chain successor successor) (transpose (recursive successor equal successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (chain successor successor) (recursive (transpose successor) successor equal))\n)",
            "task_solution": "(recursive successor (chain successor successor) (recursive (transpose successor) successor equal))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.2234545040410012,
            "num_unique_values": 106,
            "num_values_explored": 205,
            "solution": "(disjunction (transpose successor) (chain successor (chain successor (chain successor successor))))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False,  True, False, False, False, False,\n        False],\n       [ True, False, False, False, False,  True, False, False, False,\n        False],\n       [False,  True, False, False, False, False,  True, False, False,\n        False],\n       [False, False,  True, False, False, False, False,  True, False,\n        False],\n       [False, False, False,  True, False, False, False, False,  True,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n         True],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (chain successor (chain successor (chain successor successor))))\n)",
            "task_solution": "(disjunction (transpose successor) (chain successor (chain successor (chain successor successor))))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.18782266799826175,
            "num_unique_values": 78,
            "num_values_explored": 164,
            "solution": "(recursive equal (transpose (disjunction successor equal)) (transpose (chain successor successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (transpose (disjunction successor equal)) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive equal (transpose (disjunction successor equal)) (transpose (chain successor successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.15793978900182992,
            "num_unique_values": 66,
            "num_values_explored": 153,
            "solution": "(disjunction equal (disjunction (chain zero successor) (transpose (chain successor successor))))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True]])],\n    solution=(disjunction equal (disjunction (chain zero successor) (transpose (chain successor successor))))\n)",
            "task_solution": "(disjunction equal (disjunction (chain zero successor) (transpose (chain successor successor))))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.2260603160248138,
            "num_unique_values": 106,
            "num_values_explored": 208,
            "solution": "(disjunction successor (transpose (disjunction equal (chain successor (chain successor successor)))))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False, False,  True,  True, False, False, False, False,\n        False],\n       [False,  True, False, False,  True,  True, False, False, False,\n        False],\n       [False, False,  True, False, False,  True,  True, False, False,\n        False],\n       [False, False, False,  True, False, False,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False, False,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n         True]])],\n    solution=(disjunction successor (transpose (disjunction equal (chain successor (chain successor successor)))))\n)",
            "task_solution": "(disjunction successor (transpose (disjunction equal (chain successor (chain successor successor)))))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.328266597003676,
            "num_unique_values": 157,
            "num_values_explored": 297,
            "solution": "(recursive successor successor (chain successor (transpose (disjunction (recursive successor equal successor) (recursive successor successor (transpose (chain successor successor)))))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (recursive successor equal (recursive successor equal successor)))\n)",
            "task_solution": "(recursive successor successor (recursive successor equal (recursive successor equal successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.13636048301123083,
            "num_unique_values": 56,
            "num_values_explored": 127,
            "solution": "(chain successor (recursive (disjunction successor (transpose successor)) (transpose successor) zero))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True, False, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False, False, False,  True, False,  True, False, False,\n        False],\n       [ True, False, False, False, False,  True, False,  True, False,\n        False],\n       [ True, False, False, False, False, False,  True, False,  True,\n        False],\n       [ True, False, False, False, False, False, False,  True, False,\n         True],\n       [ True, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive (disjunction successor (transpose successor)) (transpose successor) zero))\n)",
            "task_solution": "(chain successor (recursive (disjunction successor (transpose successor)) (transpose successor) zero))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.14281386201037094,
            "num_unique_values": 74,
            "num_values_explored": 144,
            "solution": "(disjunction (transpose (chain successor successor)) (recursive successor (transpose successor) successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True,  True,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True,  True,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n        False]])],\n    solution=(disjunction (transpose (chain successor successor)) (recursive successor (transpose successor) successor))\n)",
            "task_solution": "(disjunction (transpose (chain successor successor)) (recursive successor (transpose successor) successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.1805266109877266,
            "num_unique_values": 78,
            "num_values_explored": 162,
            "solution": "(recursive successor (recursive (chain successor successor) (transpose successor) successor) equal)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive successor (recursive (chain successor successor) (transpose successor) successor) equal)\n)",
            "task_solution": "(recursive successor (recursive (chain successor successor) (transpose successor) successor) equal)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.25499989598756656,
            "num_unique_values": 109,
            "num_values_explored": 227,
            "solution": "(disjunction successor (disjunction (transpose successor) (recursive (disjunction equal (chain zero successor)) (transpose successor) successor)))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True, False,  True,  True,  True,  True, False, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True,  True, False,\n        False],\n       [False,  True, False,  True, False,  True,  True,  True,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True]])],\n    solution=(disjunction successor (transpose (disjunction successor (recursive equal successor (transpose successor)))))\n)",
            "task_solution": "(disjunction successor (transpose (disjunction successor (recursive equal successor (transpose successor)))))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.15071232401533052,
            "num_unique_values": 71,
            "num_values_explored": 146,
            "solution": "(disjunction equal (recursive successor (recursive equal equal successor) (chain successor successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True]])],\n    solution=(disjunction equal (recursive successor (recursive equal (transpose successor) successor) successor))\n)",
            "task_solution": "(disjunction equal (recursive successor (recursive equal (transpose successor) successor) successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.27929777902318165,
            "num_unique_values": 126,
            "num_values_explored": 263,
            "solution": "(transpose (chain (disjunction equal successor) (recursive successor (transpose (recursive successor successor equal)) (transpose successor))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True]])],\n    solution=(transpose (chain (disjunction zero (recursive successor (transpose successor) equal)) successor))\n)",
            "task_solution": "(transpose (chain (disjunction zero (recursive successor (transpose successor) equal)) successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.15714001300511882,
            "num_unique_values": 66,
            "num_values_explored": 153,
            "solution": "(disjunction equal (chain (transpose (disjunction successor equal)) (chain successor successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain (transpose (disjunction successor equal)) (chain successor successor)))\n)",
            "task_solution": "(disjunction equal (chain (transpose (disjunction successor equal)) (chain successor successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.11258158000418916,
            "num_unique_values": 37,
            "num_values_explored": 109,
            "solution": "(recursive (disjunction zero (chain successor successor)) (chain zero successor) equal)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (disjunction zero (chain successor successor)) (chain zero successor) equal)\n)",
            "task_solution": "(recursive (disjunction zero (chain successor successor)) (chain zero successor) equal)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.14043604501057416,
            "num_unique_values": 57,
            "num_values_explored": 137,
            "solution": "(chain successor (transpose (recursive (disjunction successor equal) equal (chain successor successor))))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor successor (transpose successor)) (transpose (disjunction successor equal)))\n)",
            "task_solution": "(chain (recursive successor successor (transpose successor)) (transpose (disjunction successor equal)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.1646883959765546,
            "num_unique_values": 77,
            "num_values_explored": 160,
            "solution": "(recursive equal (disjunction equal successor) (chain successor (chain successor successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True, False,  True,  True, False,  True,  True, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n         True]])],\n    solution=(recursive equal (disjunction successor equal) (chain successor (chain successor successor)))\n)",
            "task_solution": "(recursive equal (disjunction successor equal) (chain successor (chain successor successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.14246244996320456,
            "num_unique_values": 63,
            "num_values_explored": 142,
            "solution": "(chain (transpose (disjunction zero (chain successor successor))) (disjunction successor equal))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False]])],\n    solution=(chain (transpose (disjunction zero (chain successor successor))) (disjunction successor equal))\n)",
            "task_solution": "(chain (transpose (disjunction zero (chain successor successor))) (disjunction successor equal))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.12869718903675675,
            "num_unique_values": 37,
            "num_values_explored": 109,
            "solution": "(recursive equal (transpose successor) (chain zero (recursive successor successor equal)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [ True, False, False, False, False,  True, False, False, False,\n        False],\n       [ True, False, False, False, False, False,  True, False, False,\n        False],\n       [ True, False, False, False, False, False, False,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (transpose successor) (chain zero (recursive successor successor equal)))\n)",
            "task_solution": "(recursive equal (transpose successor) (chain zero (recursive successor successor equal)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.24515793903265148,
            "num_unique_values": 123,
            "num_values_explored": 226,
            "solution": "(recursive successor (transpose successor) (transpose (chain successor (chain successor successor))))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (transpose successor) (transpose (chain successor (chain successor successor))))\n)",
            "task_solution": "(recursive successor (transpose successor) (transpose (chain successor (chain successor successor))))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.15885148697998375,
            "num_unique_values": 74,
            "num_values_explored": 153,
            "solution": "(disjunction (chain (recursive successor equal successor) zero) (recursive (chain zero successor) (transpose successor) equal))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (recursive (chain zero successor) (transpose successor) equal) successor successor)\n)",
            "task_solution": "(recursive (recursive (chain zero successor) (transpose successor) equal) successor successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.18691095401300117,
            "num_unique_values": 81,
            "num_values_explored": 168,
            "solution": "(recursive (transpose successor) (transpose (disjunction equal successor)) (chain zero successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (transpose (disjunction successor equal)) (chain zero successor))\n)",
            "task_solution": "(recursive (transpose successor) (transpose (disjunction successor equal)) (chain zero successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.15362666302826256,
            "num_unique_values": 67,
            "num_values_explored": 149,
            "solution": "(disjunction (transpose successor) (chain zero (recursive successor successor (transpose successor))))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(transpose (disjunction successor (chain (recursive successor (transpose successor) successor) zero)))\n)",
            "task_solution": "(transpose (disjunction successor (chain (recursive successor (transpose successor) successor) zero)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.1734044699696824,
            "num_unique_values": 79,
            "num_values_explored": 162,
            "solution": "(recursive (recursive successor (transpose successor) successor) (chain successor successor) successor)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (recursive successor (transpose successor) successor) (chain successor successor) successor)\n)",
            "task_solution": "(recursive (recursive successor (transpose successor) successor) (chain successor successor) successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.26375035400269553,
            "num_unique_values": 116,
            "num_values_explored": 238,
            "solution": "(recursive (chain successor (chain successor (chain successor successor))) zero successor)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (chain successor (chain successor successor))) zero successor)\n)",
            "task_solution": "(recursive (chain successor (chain successor (chain successor successor))) zero successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.15158783900551498,
            "num_unique_values": 68,
            "num_values_explored": 152,
            "solution": "(disjunction (chain successor successor) (transpose (chain (disjunction zero successor) successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n        False],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [False, False, False,  True, False, False, False,  True, False,\n        False],\n       [False, False, False, False,  True, False, False, False,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(disjunction (chain successor successor) (transpose (chain (disjunction zero successor) successor)))\n)",
            "task_solution": "(disjunction (chain successor successor) (transpose (chain (disjunction zero successor) successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.1984569409978576,
            "num_unique_values": 97,
            "num_values_explored": 202,
            "solution": "(chain successor (chain successor (chain successor (disjunction successor (transpose successor)))))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (chain successor (disjunction successor (transpose successor)))))\n)",
            "task_solution": "(chain successor (chain successor (chain successor (disjunction successor (transpose successor)))))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.15549891698174179,
            "num_unique_values": 66,
            "num_values_explored": 154,
            "solution": "(disjunction equal (chain (disjunction successor (transpose (chain successor successor))) successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True, False,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True, False,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True, False,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(disjunction equal (chain (disjunction successor (transpose (chain successor successor))) successor))\n)",
            "task_solution": "(disjunction equal (chain (disjunction successor (transpose (chain successor successor))) successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.3534806480165571,
            "num_unique_values": 162,
            "num_values_explored": 320,
            "solution": "(recursive (disjunction (chain (transpose successor) zero) (recursive successor (chain zero successor) equal)) zero (transpose successor))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (disjunction successor (transpose (chain zero successor))) zero (transpose successor))\n)",
            "task_solution": "(recursive (disjunction successor (transpose (chain zero successor))) zero (transpose successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.14368681597989053,
            "num_unique_values": 67,
            "num_values_explored": 148,
            "solution": "(disjunction successor (recursive (transpose successor) (transpose successor) (chain successor successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True, False, False,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False, False,  True, False,  True, False, False,\n        False],\n       [False, False,  True, False, False,  True, False,  True, False,\n        False],\n       [ True, False, False,  True, False, False,  True, False,  True,\n        False],\n       [False,  True, False, False,  True, False, False,  True, False,\n         True],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False]])],\n    solution=(disjunction successor (recursive (transpose successor) (transpose successor) (chain successor successor)))\n)",
            "task_solution": "(disjunction successor (recursive (transpose successor) (transpose successor) (chain successor successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.2090593060129322,
            "num_unique_values": 96,
            "num_values_explored": 196,
            "solution": "(chain (transpose successor) (recursive (chain zero (chain successor successor)) (transpose successor) (recursive zero (transpose successor) (transpose successor))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive (transpose successor) equal successor) (chain zero (chain successor successor)))\n)",
            "task_solution": "(chain (recursive (transpose successor) equal successor) (chain zero (chain successor successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.24146037903847173,
            "num_unique_values": 96,
            "num_values_explored": 210,
            "solution": "(chain (transpose successor) (chain (recursive (chain successor successor) zero successor) successor))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (transpose successor) (chain (recursive (chain successor successor) zero successor) successor))\n)",
            "task_solution": "(chain (transpose successor) (chain (recursive (chain successor successor) zero successor) successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2477112429914996,
            "num_unique_values": 117,
            "num_values_explored": 230,
            "solution": "(recursive (transpose successor) (chain (disjunction zero successor) (chain successor successor)) successor)",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (chain (disjunction zero successor) (chain successor successor)) successor)\n)",
            "task_solution": "(recursive (transpose successor) (chain (disjunction zero successor) (chain successor successor)) successor)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.13053211505757645,
            "num_unique_values": 56,
            "num_values_explored": 133,
            "solution": "(chain successor (recursive (disjunction equal successor) (transpose successor) (chain successor successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True,  True, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True,  True, False, False,\n        False],\n       [ True,  True, False,  True,  True, False,  True,  True, False,\n        False],\n       [False,  True,  True, False,  True,  True, False,  True,  True,\n        False],\n       [ True, False,  True,  True, False,  True,  True, False,  True,\n         True],\n       [ True,  True, False,  True,  True, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive (disjunction successor equal) (transpose successor) (chain successor successor)))\n)",
            "task_solution": "(chain successor (recursive (disjunction successor equal) (transpose successor) (chain successor successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.1505468440009281,
            "num_unique_values": 71,
            "num_values_explored": 148,
            "solution": "(disjunction successor (chain (transpose successor) (recursive (chain successor successor) (chain successor successor) successor)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (chain (transpose successor) (chain successor (chain successor successor))) successor)\n)",
            "task_solution": "(recursive successor (chain (transpose successor) (chain successor (chain successor successor))) successor)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 2.396468188962899,
            "num_unique_values": 483,
            "num_values_explored": 2360,
            "solution": "(chain (recursive (disjunction successor (chain successor (transpose successor))) (recursive (transpose successor) (transpose successor) zero) (transpose (chain zero successor))) successor)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True, False,  True,  True, False, False, False,\n        False],\n       [False, False,  True, False, False,  True,  True, False, False,\n        False],\n       [False, False,  True, False, False, False,  True,  True, False,\n        False],\n       [False, False,  True, False, False, False, False,  True,  True,\n        False],\n       [False, False,  True, False, False, False, False, False,  True,\n         True],\n       [False, False,  True, False, False, False, False, False, False,\n         True],\n       [False, False,  True, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction equal (chain (recursive equal (transpose successor) zero) successor)) successor)\n)",
            "task_solution": "(chain (disjunction equal (chain (recursive equal (transpose successor) zero) successor)) successor)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.195635921030771,
            "num_unique_values": 77,
            "num_values_explored": 170,
            "solution": "(recursive (transpose (disjunction zero successor)) (transpose successor) (recursive (disjunction equal (chain zero successor)) successor (chain successor successor)))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (transpose zero) (transpose successor) (recursive equal successor (chain successor successor)))\n)",
            "task_solution": "(recursive (transpose zero) (transpose successor) (recursive equal successor (chain successor successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.16267359699122608,
            "num_unique_values": 72,
            "num_values_explored": 154,
            "solution": "(disjunction zero (chain (recursive (disjunction successor equal) equal (chain zero successor)) successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction successor equal) (disjunction successor (recursive zero zero (transpose successor))))\n)",
            "task_solution": "(chain (disjunction successor equal) (disjunction successor (recursive zero zero (transpose successor))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.24925586901372299,
            "num_unique_values": 125,
            "num_values_explored": 221,
            "solution": "(recursive (disjunction equal (chain successor (chain successor (transpose successor)))) (chain (recursive successor (chain successor successor) successor) successor) successor)",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (chain (recursive successor (chain successor successor) successor) successor) successor)\n)",
            "task_solution": "(recursive equal (chain (recursive successor (chain successor successor) successor) successor) successor)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.733132204040885,
            "num_unique_values": 258,
            "num_values_explored": 688,
            "solution": "(chain successor (transpose (recursive (chain successor (transpose (chain successor (disjunction successor (transpose successor))))) (transpose successor) (chain zero successor))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (transpose (chain successor (disjunction successor (transpose successor))))))\n)",
            "task_solution": "(chain successor (chain successor (transpose (chain successor (disjunction successor (transpose successor))))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.1874274180154316,
            "num_unique_values": 81,
            "num_values_explored": 166,
            "solution": "(recursive equal (recursive equal (transpose successor) zero) (transpose (chain successor successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n         True]])],\n    solution=(recursive equal (recursive equal (transpose successor) zero) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive equal (recursive equal (transpose successor) zero) (transpose (chain successor successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.15294416598044336,
            "num_unique_values": 67,
            "num_values_explored": 147,
            "solution": "(disjunction (recursive successor (transpose successor) successor) (recursive successor (transpose successor) equal))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(disjunction (recursive successor (transpose successor) successor) (recursive successor (transpose successor) equal))\n)",
            "task_solution": "(disjunction (recursive successor (transpose successor) successor) (recursive successor (transpose successor) equal))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.1536645440501161,
            "num_unique_values": 66,
            "num_values_explored": 149,
            "solution": "(disjunction (transpose successor) (recursive successor equal (chain (disjunction zero successor) successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (recursive successor equal (chain (disjunction zero successor) successor)))\n)",
            "task_solution": "(disjunction (transpose successor) (recursive successor equal (chain (disjunction zero successor) successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.19223864300874993,
            "num_unique_values": 86,
            "num_values_explored": 184,
            "solution": "(transpose (disjunction successor (disjunction equal (chain successor (recursive successor equal successor)))))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True]])],\n    solution=(transpose (disjunction successor (disjunction equal (recursive (chain successor successor) equal successor))))\n)",
            "task_solution": "(transpose (disjunction successor (disjunction equal (recursive (chain successor successor) equal successor))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.18711589300073683,
            "num_unique_values": 76,
            "num_values_explored": 167,
            "solution": "(recursive successor (chain (transpose (chain successor successor)) (chain successor successor)) successor)",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (chain (transpose (chain successor successor)) (chain successor successor)) successor)\n)",
            "task_solution": "(recursive successor (chain (transpose (chain successor successor)) (chain successor successor)) successor)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.34274993604049087,
            "num_unique_values": 176,
            "num_values_explored": 332,
            "solution": "(chain successor (chain successor (chain successor (chain successor (chain successor successor)))))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (chain successor (chain successor (chain successor successor)))))\n)",
            "task_solution": "(chain successor (chain successor (chain successor (chain successor (chain successor successor)))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.1758872939972207,
            "num_unique_values": 76,
            "num_values_explored": 165,
            "solution": "(recursive equal (disjunction successor (transpose successor)) (chain successor (chain successor successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n         True]])],\n    solution=(recursive equal (disjunction successor (transpose successor)) (chain successor (chain successor successor)))\n)",
            "task_solution": "(recursive equal (disjunction successor (transpose successor)) (chain successor (chain successor successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.24314821598818526,
            "num_unique_values": 118,
            "num_values_explored": 216,
            "solution": "(recursive successor (chain zero successor) (transpose (chain successor (disjunction equal successor))))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (chain zero successor) (transpose (chain successor (disjunction successor equal))))\n)",
            "task_solution": "(recursive successor (chain zero successor) (transpose (chain successor (disjunction successor equal))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.1739970960188657,
            "num_unique_values": 76,
            "num_values_explored": 161,
            "solution": "(recursive (chain successor successor) (disjunction zero successor) (transpose (chain successor successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False, False,  True, False, False,\n         True],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor successor) (disjunction zero successor) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (chain successor successor) (disjunction zero successor) (transpose (chain successor successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 51.20083396602422,
            "num_unique_values": 2722,
            "num_values_explored": 50015,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive (chain successor successor) successor (chain successor successor)) equal)\n)",
            "task_solution": "(recursive equal (recursive (chain successor successor) successor (chain successor successor)) equal)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.27607434801757336,
            "num_unique_values": 139,
            "num_values_explored": 269,
            "solution": "(chain (disjunction zero successor) (recursive (transpose zero) (chain successor (transpose (recursive successor (chain successor successor) successor))) (transpose successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (transpose zero) (recursive successor successor (chain successor successor)) (transpose successor))\n)",
            "task_solution": "(recursive (transpose zero) (recursive successor successor (chain successor successor)) (transpose successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.17164061998482794,
            "num_unique_values": 77,
            "num_values_explored": 161,
            "solution": "(recursive (disjunction equal (chain successor successor)) zero (transpose (chain successor successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (disjunction equal (chain successor successor)) zero (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (disjunction equal (chain successor successor)) zero (transpose (chain successor successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.23356292099924758,
            "num_unique_values": 98,
            "num_values_explored": 211,
            "solution": "(chain (disjunction zero successor) (disjunction zero (chain (recursive equal (transpose successor) zero) successor)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n        False],\n       [False,  True, False, False, False, False,  True, False, False,\n        False],\n       [False,  True, False, False, False, False, False,  True, False,\n        False],\n       [False,  True, False, False, False, False, False, False,  True,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n         True],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction zero (chain successor (chain (recursive equal (transpose successor) zero) successor)))\n)",
            "task_solution": "(disjunction zero (chain successor (chain (recursive equal (transpose successor) zero) successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.34974860900547355,
            "num_unique_values": 157,
            "num_values_explored": 295,
            "solution": "(recursive successor (disjunction successor (transpose (chain zero (chain successor successor)))) equal)",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (disjunction successor (transpose (chain zero (chain successor successor)))) equal)\n)",
            "task_solution": "(recursive successor (disjunction successor (transpose (chain zero (chain successor successor)))) equal)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.20147254195762798,
            "num_unique_values": 82,
            "num_values_explored": 168,
            "solution": "(recursive (disjunction successor (transpose (chain successor (recursive successor successor equal)))) zero successor)",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False]])],\n    solution=(disjunction zero (disjunction successor (recursive (transpose (chain successor successor)) equal successor)))\n)",
            "task_solution": "(disjunction zero (disjunction successor (recursive (transpose (chain successor successor)) equal successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.39588302798802033,
            "num_unique_values": 198,
            "num_values_explored": 403,
            "solution": "(recursive equal zero (recursive equal successor (chain successor (chain successor (chain successor (chain successor successor))))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False,  True, False, False, False,  True,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal zero (transpose (chain successor (chain successor (chain successor successor)))))\n)",
            "task_solution": "(recursive equal zero (transpose (chain successor (chain successor (chain successor successor)))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.1326407400192693,
            "num_unique_values": 65,
            "num_values_explored": 133,
            "solution": "(chain (disjunction zero successor) (recursive (disjunction zero successor) successor (transpose successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor successor) (disjunction zero successor) (disjunction successor (transpose successor)))\n)",
            "task_solution": "(recursive (chain successor successor) (disjunction zero successor) (disjunction successor (transpose successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.27722074202029034,
            "num_unique_values": 127,
            "num_values_explored": 254,
            "solution": "(transpose (chain (disjunction equal successor) (recursive successor (transpose (chain successor successor)) (chain (disjunction successor equal) (transpose successor)))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True]])],\n    solution=(transpose (chain (recursive (recursive successor (transpose successor) equal) successor successor) successor))\n)",
            "task_solution": "(transpose (chain (recursive (recursive successor (transpose successor) equal) successor successor) successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.1317037179833278,
            "num_unique_values": 58,
            "num_values_explored": 134,
            "solution": "(chain (recursive successor successor (recursive successor successor equal)) (disjunction (transpose successor) (recursive successor successor equal)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (transpose successor)) successor (recursive (transpose successor) successor equal))\n)",
            "task_solution": "(recursive (chain successor (transpose successor)) successor (recursive (transpose successor) successor equal))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.18235595797887072,
            "num_unique_values": 77,
            "num_values_explored": 157,
            "solution": "(recursive successor (chain (recursive successor equal (chain successor successor)) zero) equal)",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False,  True, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False,  True, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (chain (recursive successor equal (chain successor successor)) zero) equal)\n)",
            "task_solution": "(recursive successor (chain (recursive successor equal (chain successor successor)) zero) equal)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.20599179901182652,
            "num_unique_values": 86,
            "num_values_explored": 190,
            "solution": "(transpose (recursive (disjunction equal (chain (recursive successor equal (recursive successor equal successor)) successor)) (transpose successor) zero))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (recursive equal zero (transpose successor)) equal (recursive successor equal successor))\n)",
            "task_solution": "(recursive (recursive equal zero (transpose successor)) equal (recursive successor equal successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.1069902169983834,
            "num_unique_values": 45,
            "num_values_explored": 105,
            "solution": "(recursive (disjunction (transpose successor) (chain successor successor)) (chain successor successor) equal)",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (disjunction (transpose successor) (chain successor successor)) (chain successor successor) equal)\n)",
            "task_solution": "(recursive (disjunction (transpose successor) (chain successor successor)) (chain successor successor) equal)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.1517990580177866,
            "num_unique_values": 68,
            "num_values_explored": 147,
            "solution": "(disjunction successor (chain (transpose (chain successor successor)) (recursive successor successor equal)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(disjunction successor (chain (transpose (chain successor successor)) (recursive successor successor equal)))\n)",
            "task_solution": "(disjunction successor (chain (transpose (chain successor successor)) (recursive successor successor equal)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2538071110029705,
            "num_unique_values": 127,
            "num_values_explored": 247,
            "solution": "(transpose (disjunction successor (recursive zero (transpose successor) (transpose (chain successor successor)))))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction successor (recursive zero (transpose successor) (transpose (chain successor successor)))))\n)",
            "task_solution": "(transpose (disjunction successor (recursive zero (transpose successor) (transpose (chain successor successor)))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.22156088502379134,
            "num_unique_values": 97,
            "num_values_explored": 209,
            "solution": "(chain (recursive successor (transpose successor) (disjunction zero successor)) (disjunction zero successor))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(chain (recursive successor (transpose successor) (disjunction zero successor)) (disjunction zero successor))\n)",
            "task_solution": "(chain (recursive successor (transpose successor) (disjunction zero successor)) (disjunction zero successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.14374137297272682,
            "num_unique_values": 56,
            "num_values_explored": 143,
            "solution": "(chain successor (recursive (transpose successor) (transpose successor) (recursive successor successor equal)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive (transpose successor) (transpose successor) (recursive successor successor equal)))\n)",
            "task_solution": "(chain successor (recursive (transpose successor) (transpose successor) (recursive successor successor equal)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.18478499999037012,
            "num_unique_values": 82,
            "num_values_explored": 172,
            "solution": "(recursive (recursive successor (transpose successor) successor) successor (chain (transpose successor) successor))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (recursive successor (transpose successor) successor) successor (chain (transpose successor) successor))\n)",
            "task_solution": "(recursive (recursive successor (transpose successor) successor) successor (chain (transpose successor) successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.24017426499631256,
            "num_unique_values": 106,
            "num_values_explored": 214,
            "solution": "(disjunction equal (chain (disjunction successor (recursive equal (transpose successor) successor)) successor))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True, False,\n        False],\n       [False,  True, False,  True, False,  True,  True,  True,  True,\n        False],\n       [False, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n         True]])],\n    solution=(disjunction equal (chain (disjunction successor (recursive equal (transpose successor) successor)) successor))\n)",
            "task_solution": "(disjunction equal (chain (disjunction successor (recursive equal (transpose successor) successor)) successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.32065898203291,
            "num_unique_values": 157,
            "num_values_explored": 298,
            "solution": "(recursive (recursive (transpose successor) (transpose successor) (transpose (chain successor successor))) (transpose successor) successor)",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (transpose successor) (transpose successor) (disjunction successor (transpose (chain successor successor))))\n)",
            "task_solution": "(recursive (transpose successor) (transpose successor) (disjunction successor (transpose (chain successor successor))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.16515131702180952,
            "num_unique_values": 78,
            "num_values_explored": 156,
            "solution": "(recursive equal successor (recursive successor (disjunction equal (chain successor successor)) successor))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (recursive successor (disjunction equal (chain successor successor)) successor))\n)",
            "task_solution": "(recursive equal successor (recursive successor (disjunction equal (chain successor successor)) successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.1764594690175727,
            "num_unique_values": 79,
            "num_values_explored": 168,
            "solution": "(recursive (chain successor (chain successor successor)) (transpose (disjunction equal successor)) successor)",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False]])],\n    solution=(recursive (chain successor (chain successor successor)) (transpose (disjunction successor equal)) successor)\n)",
            "task_solution": "(recursive (chain successor (chain successor successor)) (transpose (disjunction successor equal)) successor)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.20002601598389447,
            "num_unique_values": 109,
            "num_values_explored": 198,
            "solution": "(disjunction (chain successor successor) (chain (recursive zero zero (transpose (chain successor successor))) (disjunction (chain successor successor) equal)))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction (chain successor successor) (recursive zero zero (transpose (chain successor successor))))\n)",
            "task_solution": "(disjunction (chain successor successor) (recursive zero zero (transpose (chain successor successor))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.24383310397388414,
            "num_unique_values": 123,
            "num_values_explored": 237,
            "solution": "(recursive successor (transpose successor) (chain successor (disjunction zero (chain successor (chain successor successor)))))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [ True, False, False, False, False,  True, False, False, False,\n        False],\n       [False,  True, False, False, False, False,  True, False, False,\n        False],\n       [False, False,  True, False, False, False, False,  True, False,\n        False],\n       [False, False, False,  True, False, False, False, False,  True,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n         True],\n       [ True, False, False, False, False,  True, False, False, False,\n        False]])],\n    solution=(recursive successor (transpose successor) (chain successor (chain successor (chain successor successor))))\n)",
            "task_solution": "(recursive successor (transpose successor) (chain successor (chain successor (chain successor successor))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2010526970261708,
            "num_unique_values": 115,
            "num_values_explored": 198,
            "solution": "(disjunction equal (recursive successor successor (disjunction equal (recursive successor (disjunction zero successor) (transpose successor)))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (recursive equal (recursive successor successor (transpose successor)) successor))\n)",
            "task_solution": "(recursive equal successor (recursive equal (recursive successor successor (transpose successor)) successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.12150841701077297,
            "num_unique_values": 50,
            "num_values_explored": 120,
            "solution": "(transpose (recursive (chain (disjunction zero successor) successor) equal (chain successor successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain (disjunction zero successor) successor)) (chain successor successor) equal)\n)",
            "task_solution": "(recursive (transpose (chain (disjunction zero successor) successor)) (chain successor successor) equal)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.20447945600608364,
            "num_unique_values": 97,
            "num_values_explored": 192,
            "solution": "(chain (disjunction equal (recursive successor (transpose successor) (disjunction zero successor))) successor)",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True, False,  True,  True,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True,  True,  True, False,\n        False],\n       [False,  True,  True, False,  True, False,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(chain (disjunction equal (recursive successor (transpose successor) (disjunction zero successor))) successor)\n)",
            "task_solution": "(chain (disjunction equal (recursive successor (transpose successor) (disjunction zero successor))) successor)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.20838616602122784,
            "num_unique_values": 104,
            "num_values_explored": 208,
            "solution": "(chain (chain (disjunction successor equal) (disjunction successor equal)) (chain successor successor))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (chain (disjunction successor equal) (disjunction successor equal))))\n)",
            "task_solution": "(chain successor (chain successor (chain (disjunction successor equal) (disjunction successor equal))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2171411140006967,
            "num_unique_values": 99,
            "num_values_explored": 199,
            "solution": "(chain (disjunction equal (chain (recursive zero zero (transpose successor)) (disjunction equal successor))) successor)",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction equal (chain (recursive zero zero (transpose successor)) successor)) successor)\n)",
            "task_solution": "(chain (disjunction equal (chain (recursive zero zero (transpose successor)) successor)) successor)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.22274065198143944,
            "num_unique_values": 96,
            "num_values_explored": 212,
            "solution": "(chain successor (disjunction equal (disjunction (transpose successor) (recursive successor equal successor))))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (disjunction equal (disjunction (transpose successor) (recursive successor equal successor))))\n)",
            "task_solution": "(chain successor (disjunction equal (disjunction (transpose successor) (recursive successor equal successor))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.36493590800091624,
            "num_unique_values": 153,
            "num_values_explored": 359,
            "solution": "(disjunction (transpose (chain zero successor)) (recursive (recursive (chain successor successor) (transpose successor) (disjunction zero successor)) zero successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False]])],\n    solution=(recursive (chain successor successor) (transpose (disjunction zero successor)) (disjunction zero successor))\n)",
            "task_solution": "(recursive (chain successor successor) (transpose (disjunction zero successor)) (disjunction zero successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.20438341499539092,
            "num_unique_values": 96,
            "num_values_explored": 199,
            "solution": "(chain (transpose (chain successor successor)) (chain (disjunction equal successor) (disjunction equal successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True]])],\n    solution=(chain (transpose (chain successor successor)) (chain (disjunction successor equal) (disjunction successor equal)))\n)",
            "task_solution": "(chain (transpose (chain successor successor)) (chain (disjunction successor equal) (disjunction successor equal)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.1478354429709725,
            "num_unique_values": 66,
            "num_values_explored": 152,
            "solution": "(disjunction (chain successor successor) (recursive equal (disjunction successor equal) (chain successor successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(disjunction (chain successor successor) (recursive equal (disjunction successor equal) (chain successor successor)))\n)",
            "task_solution": "(disjunction (chain successor successor) (recursive equal (disjunction successor equal) (chain successor successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.17798603599658236,
            "num_unique_values": 77,
            "num_values_explored": 162,
            "solution": "(recursive (disjunction (chain (transpose successor) (chain zero successor)) (chain (transpose (chain successor successor)) (disjunction zero successor))) successor (transpose successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (chain (transpose (chain successor successor)) (disjunction zero successor)) successor (transpose successor))\n)",
            "task_solution": "(recursive (chain (transpose (chain successor successor)) (disjunction zero successor)) successor (transpose successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.1337336760479957,
            "num_unique_values": 57,
            "num_values_explored": 132,
            "solution": "(chain (recursive equal (disjunction equal successor) (chain (disjunction zero successor) successor)) successor)",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(chain (recursive equal (disjunction successor equal) (chain (disjunction zero successor) successor)) successor)\n)",
            "task_solution": "(chain (recursive equal (disjunction successor equal) (chain (disjunction zero successor) successor)) successor)",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.2566155150416307,
            "num_unique_values": 116,
            "num_values_explored": 225,
            "solution": "(recursive equal (recursive equal equal successor) (chain successor (disjunction successor (recursive zero (transpose successor) (transpose successor)))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True]])],\n    solution=(recursive equal (transpose (disjunction successor (recursive zero (transpose successor) (transpose successor)))) successor)\n)",
            "task_solution": "(recursive equal (transpose (disjunction successor (recursive zero (transpose successor) (transpose successor)))) successor)",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.1870173739735037,
            "num_unique_values": 81,
            "num_values_explored": 170,
            "solution": "(recursive (chain (transpose successor) (disjunction zero successor)) (transpose successor) (recursive successor successor equal))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True]])],\n    solution=(transpose (chain (disjunction zero (disjunction (transpose successor) (recursive successor successor equal))) successor))\n)",
            "task_solution": "(transpose (chain (disjunction zero (disjunction (transpose successor) (recursive successor successor equal))) successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.16988665098324418,
            "num_unique_values": 77,
            "num_values_explored": 161,
            "solution": "(recursive (chain successor (transpose (disjunction equal (chain successor successor)))) (transpose (disjunction equal (chain successor successor))) (transpose successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (transpose successor) (recursive (transpose (chain successor successor)) successor equal) (transpose successor))\n)",
            "task_solution": "(recursive (transpose successor) (recursive (transpose (chain successor successor)) successor equal) (transpose successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.18085908994544297,
            "num_unique_values": 76,
            "num_values_explored": 164,
            "solution": "(recursive (disjunction equal (transpose (recursive successor equal (chain successor successor)))) zero successor)",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True,  True,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True,  True,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(recursive (transpose (disjunction equal (recursive successor equal (chain successor successor)))) zero successor)\n)",
            "task_solution": "(recursive (transpose (disjunction equal (recursive successor equal (chain successor successor)))) zero successor)",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.32694831799017265,
            "num_unique_values": 159,
            "num_values_explored": 295,
            "solution": "(recursive equal (recursive successor (recursive (disjunction equal successor) (chain successor (chain successor successor)) successor) successor) (chain successor successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive successor (recursive equal (chain successor successor) successor) successor) successor)\n)",
            "task_solution": "(recursive equal (recursive successor (recursive equal (chain successor successor) successor) successor) successor)",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.153407137026079,
            "num_unique_values": 67,
            "num_values_explored": 157,
            "solution": "(disjunction zero (chain (disjunction successor (transpose successor)) (recursive zero zero (transpose successor))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction zero (disjunction successor (transpose successor))) (recursive zero zero (transpose successor)))\n)",
            "task_solution": "(chain (disjunction zero (disjunction successor (transpose successor))) (recursive zero zero (transpose successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.20820404402911663,
            "num_unique_values": 96,
            "num_values_explored": 209,
            "solution": "(chain successor (recursive (chain successor successor) (transpose (chain successor successor)) (transpose successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive (chain successor successor) (transpose (chain successor successor)) (transpose successor)))\n)",
            "task_solution": "(chain successor (recursive (chain successor successor) (transpose (chain successor successor)) (transpose successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.16971285600448027,
            "num_unique_values": 82,
            "num_values_explored": 161,
            "solution": "(recursive equal (disjunction equal (chain successor successor)) (chain successor (chain successor successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True,  True, False, False,\n        False],\n       [ True,  True, False,  True,  True, False,  True,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n         True]])],\n    solution=(recursive equal (disjunction equal (chain successor successor)) (chain successor (chain successor successor)))\n)",
            "task_solution": "(recursive equal (disjunction equal (chain successor successor)) (chain successor (chain successor successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.2511103739961982,
            "num_unique_values": 120,
            "num_values_explored": 222,
            "solution": "(recursive (transpose (chain zero (chain successor successor))) equal (recursive (chain zero successor) (transpose (chain successor successor)) successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (transpose (chain successor successor)) (chain zero (disjunction zero (chain successor successor))))\n)",
            "task_solution": "(chain (transpose (chain successor successor)) (chain zero (disjunction zero (chain successor successor))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.16162512102164328,
            "num_unique_values": 66,
            "num_values_explored": 159,
            "solution": "(disjunction zero (chain (transpose (disjunction equal (chain successor successor))) (chain successor successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction zero (chain (transpose (disjunction equal (chain successor successor))) (chain successor successor)))\n)",
            "task_solution": "(disjunction zero (chain (transpose (disjunction equal (chain successor successor))) (chain successor successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.14934937399812043,
            "num_unique_values": 68,
            "num_values_explored": 149,
            "solution": "(disjunction (transpose (chain successor successor)) (chain successor (recursive successor (transpose successor) successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(disjunction (transpose (chain successor successor)) (chain successor (recursive successor (transpose successor) successor)))\n)",
            "task_solution": "(disjunction (transpose (chain successor successor)) (chain successor (recursive successor (transpose successor) successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.1383829439873807,
            "num_unique_values": 58,
            "num_values_explored": 137,
            "solution": "(chain (transpose (recursive (chain successor successor) zero (transpose successor))) (disjunction equal successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True,  True, False, False, False,\n        False],\n       [ True,  True, False, False, False,  True,  True, False, False,\n        False],\n       [ True,  True, False, False, False, False,  True,  True, False,\n        False],\n       [ True,  True, False, False, False, False, False,  True,  True,\n        False]])],\n    solution=(chain (recursive (transpose (chain successor successor)) (transpose successor) zero) (disjunction successor equal))\n)",
            "task_solution": "(chain (recursive (transpose (chain successor successor)) (transpose successor) zero) (disjunction successor equal))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.24712746898876503,
            "num_unique_values": 118,
            "num_values_explored": 228,
            "solution": "(recursive (transpose (chain (disjunction zero successor) successor)) (recursive (disjunction zero successor) successor (transpose successor)) (transpose successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain (disjunction zero successor) successor)) (disjunction zero successor) (transpose successor))\n)",
            "task_solution": "(recursive (transpose (chain (disjunction zero successor) successor)) (disjunction zero successor) (transpose successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.18393594498047605,
            "num_unique_values": 82,
            "num_values_explored": 170,
            "solution": "(recursive equal (recursive equal zero (transpose successor)) (chain (disjunction zero successor) successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(recursive equal (recursive equal zero (transpose successor)) (chain (disjunction zero successor) successor))\n)",
            "task_solution": "(recursive equal (recursive equal zero (transpose successor)) (chain (disjunction zero successor) successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.17638001998420805,
            "num_unique_values": 76,
            "num_values_explored": 161,
            "solution": "(recursive equal (recursive equal equal successor) (transpose (disjunction zero (chain successor successor))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive equal (recursive equal equal successor) (transpose (disjunction zero (chain successor successor))))\n)",
            "task_solution": "(recursive equal (recursive equal equal successor) (transpose (disjunction zero (chain successor successor))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.17028875299729407,
            "num_unique_values": 78,
            "num_values_explored": 158,
            "solution": "(recursive (disjunction (chain successor successor) (chain successor (transpose (chain successor successor)))) (transpose successor) zero)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False, False,  True, False, False, False,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n        False],\n       [ True, False, False, False,  True, False, False,  True, False,\n        False],\n       [ True, False, False, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False, False, False, False,  True, False, False,\n         True],\n       [ True, False, False, False, False, False, False,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (disjunction successor (transpose (chain successor successor)))) (transpose successor) zero)\n)",
            "task_solution": "(recursive (chain successor (disjunction successor (transpose (chain successor successor)))) (transpose successor) zero)",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.11134358501294628,
            "num_unique_values": 53,
            "num_values_explored": 118,
            "solution": "(transpose (recursive (disjunction successor (transpose successor)) (disjunction successor (transpose successor)) (chain successor successor)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (disjunction successor (transpose successor)) (chain successor successor) (disjunction successor (transpose successor)))\n)",
            "task_solution": "(recursive (disjunction successor (transpose successor)) (chain successor successor) (disjunction successor (transpose successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.16717400099150836,
            "num_unique_values": 76,
            "num_values_explored": 163,
            "solution": "(recursive (chain (transpose successor) (chain successor successor)) (transpose (chain successor successor)) successor)",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n        False],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False]])],\n    solution=(recursive (chain (transpose successor) (chain successor successor)) (transpose (chain successor successor)) successor)\n)",
            "task_solution": "(recursive (chain (transpose successor) (chain successor successor)) (transpose (chain successor successor)) successor)",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.1890536940190941,
            "num_unique_values": 81,
            "num_values_explored": 169,
            "solution": "(recursive (disjunction equal successor) (disjunction (transpose successor) (chain successor successor)) (chain (transpose successor) (chain successor successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(disjunction zero (recursive (recursive successor (chain successor successor) successor) (transpose successor) equal))\n)",
            "task_solution": "(disjunction zero (recursive (recursive successor (chain successor successor) successor) (transpose successor) equal))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.13651739503256977,
            "num_unique_values": 60,
            "num_values_explored": 143,
            "solution": "(chain (disjunction equal (chain successor successor)) (disjunction successor (transpose (chain successor successor))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False,  True, False, False,\n        False],\n       [False, False,  True, False,  True,  True, False,  True, False,\n        False],\n       [False, False, False,  True, False,  True,  True, False,  True,\n        False],\n       [False, False, False, False,  True, False,  True,  True, False,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(chain (disjunction equal (chain successor successor)) (disjunction successor (transpose (chain successor successor))))\n)",
            "task_solution": "(chain (disjunction equal (chain successor successor)) (disjunction successor (transpose (chain successor successor))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.15295114496257156,
            "num_unique_values": 66,
            "num_values_explored": 152,
            "solution": "(disjunction zero (chain (transpose (chain successor successor)) (disjunction zero (chain successor successor))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction zero (chain (transpose (chain successor successor)) (disjunction zero (chain successor successor))))\n)",
            "task_solution": "(disjunction zero (chain (transpose (chain successor successor)) (disjunction zero (chain successor successor))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.187724668008741,
            "num_unique_values": 78,
            "num_values_explored": 172,
            "solution": "(recursive (chain (transpose (chain successor successor)) (disjunction equal (chain successor successor))) (transpose successor) successor)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(chain (transpose (chain successor successor)) (chain successor (recursive successor (transpose successor) successor)))\n)",
            "task_solution": "(chain (transpose (chain successor successor)) (chain successor (recursive successor (transpose successor) successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.1436984299798496,
            "num_unique_values": 69,
            "num_values_explored": 146,
            "solution": "(disjunction (transpose successor) (chain (transpose (recursive (chain successor successor) (transpose successor) (disjunction zero successor))) successor))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (disjunction zero successor) (chain (transpose (chain successor successor)) successor))\n)",
            "task_solution": "(recursive (transpose successor) (disjunction zero successor) (chain (transpose (chain successor successor)) successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.22830248199170455,
            "num_unique_values": 111,
            "num_values_explored": 217,
            "solution": "(disjunction equal (recursive successor (transpose successor) (recursive equal successor (chain successor successor))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(disjunction zero (recursive successor (transpose successor) (recursive equal successor (chain successor successor))))\n)",
            "task_solution": "(disjunction zero (recursive successor (transpose successor) (recursive equal successor (chain successor successor))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.16902316798223183,
            "num_unique_values": 77,
            "num_values_explored": 169,
            "solution": "(recursive (recursive (transpose successor) (transpose successor) zero) successor (transpose (chain successor successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True,  True,  True, False,  True,\n        False],\n       [ True, False,  True,  True,  True, False,  True, False,  True,\n         True],\n       [ True,  True,  True, False,  True, False,  True,  True,  True,\n        False],\n       [ True, False,  True, False,  True,  True,  True, False,  True,\n        False],\n       [ True, False,  True,  True,  True, False,  True, False,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n        False],\n       [ True, False,  True, False,  True,  True,  True, False,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n         True],\n       [ True, False,  True, False, False, False, False,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (recursive (transpose successor) (transpose successor) zero) successor (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (recursive (transpose successor) (transpose successor) zero) successor (transpose (chain successor successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.16887902794405818,
            "num_unique_values": 81,
            "num_values_explored": 159,
            "solution": "(recursive successor successor (recursive (transpose successor) (chain successor successor) (disjunction equal successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (recursive (transpose successor) (chain successor successor) (disjunction successor equal)))\n)",
            "task_solution": "(recursive successor successor (recursive (transpose successor) (chain successor successor) (disjunction successor equal)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.30206201697001234,
            "num_unique_values": 161,
            "num_values_explored": 286,
            "solution": "(recursive equal successor (recursive equal (recursive successor (chain successor successor) successor) successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (recursive equal (recursive successor (chain successor successor) successor) successor))\n)",
            "task_solution": "(recursive equal successor (recursive equal (recursive successor (chain successor successor) successor) successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.17782944499049336,
            "num_unique_values": 81,
            "num_values_explored": 169,
            "solution": "(recursive (recursive successor (transpose successor) successor) (chain successor successor) (chain zero successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (recursive successor (transpose successor) successor) (chain successor successor) (chain zero successor))\n)",
            "task_solution": "(recursive (recursive successor (transpose successor) successor) (chain successor successor) (chain zero successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.30979955301154405,
            "num_unique_values": 159,
            "num_values_explored": 295,
            "solution": "(recursive equal equal (chain (recursive (chain successor successor) successor (recursive successor successor (transpose (recursive successor equal successor)))) successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n         True]])],\n    solution=(recursive equal (transpose successor) (recursive (chain successor (chain successor successor)) equal successor))\n)",
            "task_solution": "(recursive equal (transpose successor) (recursive (chain successor (chain successor successor)) equal successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.344768479000777,
            "num_unique_values": 164,
            "num_values_explored": 314,
            "solution": "(recursive (recursive (transpose successor) (chain successor successor) successor) (recursive successor (transpose successor) (transpose (chain successor successor))) successor)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (recursive successor (transpose successor) (transpose (chain successor successor))) successor)\n)",
            "task_solution": "(recursive (transpose successor) (recursive successor (transpose successor) (transpose (chain successor successor))) successor)",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.1721969930222258,
            "num_unique_values": 83,
            "num_values_explored": 156,
            "solution": "(recursive equal (chain successor successor) (recursive successor (disjunction zero successor) (transpose successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True, False,  True, False,  True,  True,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (chain successor successor) (recursive successor (disjunction zero successor) (transpose successor)))\n)",
            "task_solution": "(recursive equal (chain successor successor) (recursive successor (disjunction zero successor) (transpose successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.4311267380253412,
            "num_unique_values": 168,
            "num_values_explored": 399,
            "solution": "(transpose (chain successor (chain (recursive (transpose (chain successor successor)) equal successor) successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (chain successor (chain (recursive (transpose (chain successor successor)) equal successor) successor)))\n)",
            "task_solution": "(transpose (chain successor (chain (recursive (transpose (chain successor successor)) equal successor) successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.1947823169757612,
            "num_unique_values": 96,
            "num_values_explored": 194,
            "solution": "(chain successor (recursive (transpose successor) (recursive zero (transpose successor) (transpose successor)) successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive (transpose successor) (recursive zero (transpose successor) (transpose successor)) successor))\n)",
            "task_solution": "(chain successor (recursive (transpose successor) (recursive zero (transpose successor) (transpose successor)) successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.20439741102745757,
            "num_unique_values": 96,
            "num_values_explored": 194,
            "solution": "(chain (recursive zero zero (recursive successor (transpose successor) successor)) (disjunction successor equal))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (recursive zero zero (recursive successor (transpose successor) successor)) (disjunction successor equal))\n)",
            "task_solution": "(chain (recursive zero zero (recursive successor (transpose successor) successor)) (disjunction successor equal))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.17476139101199806,
            "num_unique_values": 77,
            "num_values_explored": 168,
            "solution": "(recursive (disjunction equal (transpose successor)) (disjunction zero (chain successor successor)) (transpose successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True, False,  True,  True, False,  True,  True, False,\n         True],\n       [False,  True,  True, False,  True,  True, False,  True,  True,\n        False],\n       [False, False,  True,  True, False,  True,  True, False,  True,\n         True],\n       [False, False, False,  True,  True, False,  True,  True, False,\n         True],\n       [False, False, False, False,  True,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True, False,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(recursive (transpose (disjunction successor equal)) (chain (disjunction zero successor) successor) (transpose successor))\n)",
            "task_solution": "(recursive (transpose (disjunction successor equal)) (chain (disjunction zero successor) successor) (transpose successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.2996168060344644,
            "num_unique_values": 157,
            "num_values_explored": 292,
            "solution": "(recursive (transpose (disjunction zero successor)) (transpose successor) (chain (transpose (chain successor (chain successor successor))) (chain zero successor)))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(transpose (disjunction successor (recursive zero zero (transpose (chain successor (chain successor successor))))))\n)",
            "task_solution": "(transpose (disjunction successor (recursive zero zero (transpose (chain successor (chain successor successor))))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.17196762299863622,
            "num_unique_values": 77,
            "num_values_explored": 164,
            "solution": "(recursive equal (chain successor successor) (recursive equal zero (transpose (chain successor successor))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [ True, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (chain successor successor) (recursive equal zero (transpose (chain successor successor))))\n)",
            "task_solution": "(recursive equal (chain successor successor) (recursive equal zero (transpose (chain successor successor))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.2546415409888141,
            "num_unique_values": 126,
            "num_values_explored": 249,
            "solution": "(transpose (disjunction (chain successor successor) (recursive zero zero (transpose (chain successor successor)))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(transpose (disjunction (chain successor successor) (recursive zero zero (transpose (chain successor successor)))))\n)",
            "task_solution": "(transpose (disjunction (chain successor successor) (recursive zero zero (transpose (chain successor successor)))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.3623563559958711,
            "num_unique_values": 164,
            "num_values_explored": 325,
            "solution": "(recursive (recursive equal (chain successor (chain successor successor)) successor) (transpose successor) equal)",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (recursive equal (chain successor (chain successor successor)) successor) (transpose successor) equal)\n)",
            "task_solution": "(recursive (recursive equal (chain successor (chain successor successor)) successor) (transpose successor) equal)",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.128685699950438,
            "num_unique_values": 62,
            "num_values_explored": 131,
            "solution": "(chain (recursive (chain successor successor) (transpose successor) successor) (transpose (disjunction zero successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False]])],\n    solution=(recursive (chain successor (chain successor (transpose successor))) (transpose successor) (disjunction zero successor))\n)",
            "task_solution": "(recursive (chain successor (chain successor (transpose successor))) (transpose successor) (disjunction zero successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.29322218999732286,
            "num_unique_values": 138,
            "num_values_explored": 284,
            "solution": "(chain successor (chain successor (chain successor (chain successor (disjunction successor (transpose successor))))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (chain successor (chain successor (disjunction successor (transpose successor))))))\n)",
            "task_solution": "(chain successor (chain successor (chain successor (chain successor (disjunction successor (transpose successor))))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.13862248399527743,
            "num_unique_values": 57,
            "num_values_explored": 144,
            "solution": "(chain (disjunction (transpose successor) (chain successor successor)) (disjunction equal (chain successor successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False,  True, False, False,\n        False],\n       [False, False,  True, False,  True,  True, False,  True, False,\n        False],\n       [False, False, False,  True, False,  True,  True, False,  True,\n        False],\n       [False, False, False, False,  True, False,  True,  True, False,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (disjunction (transpose successor) (chain successor successor)) (disjunction equal (chain successor successor)))\n)",
            "task_solution": "(chain (disjunction (transpose successor) (chain successor successor)) (disjunction equal (chain successor successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.24132467800518498,
            "num_unique_values": 121,
            "num_values_explored": 232,
            "solution": "(recursive successor (transpose (chain successor successor)) (disjunction (transpose successor) (chain successor successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False, False,  True,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True, False,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive successor (transpose (chain successor successor)) (disjunction (transpose successor) (chain successor successor)))\n)",
            "task_solution": "(recursive successor (transpose (chain successor successor)) (disjunction (transpose successor) (chain successor successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.34822163998614997,
            "num_unique_values": 156,
            "num_values_explored": 293,
            "solution": "(recursive (transpose successor) (transpose (disjunction equal successor)) (chain (transpose (chain successor successor)) (disjunction equal successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(recursive (transpose successor) equal (chain (transpose (chain successor successor)) (disjunction zero successor)))\n)",
            "task_solution": "(recursive (transpose successor) equal (chain (transpose (chain successor successor)) (disjunction zero successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.8642210909747519,
            "num_unique_values": 346,
            "num_values_explored": 871,
            "solution": "(disjunction successor (chain (recursive successor (transpose successor) (recursive equal successor (recursive successor successor (transpose successor)))) (chain successor (transpose successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive successor (transpose successor) (chain successor (recursive (transpose successor) (transpose successor) successor)))\n)",
            "task_solution": "(recursive successor (transpose successor) (chain successor (recursive (transpose successor) (transpose successor) successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.23965678102103993,
            "num_unique_values": 116,
            "num_values_explored": 224,
            "solution": "(recursive (disjunction equal (chain (recursive successor successor (transpose (chain successor successor))) (chain successor (transpose successor)))) (chain successor successor) successor)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive (chain successor successor) successor (transpose (chain successor successor))) successor)\n)",
            "task_solution": "(recursive equal (recursive (chain successor successor) successor (transpose (chain successor successor))) successor)",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.2171586100012064,
            "num_unique_values": 111,
            "num_values_explored": 219,
            "solution": "(disjunction equal (chain (disjunction successor (transpose successor)) (recursive equal (disjunction (chain successor successor) (transpose (chain successor successor))) (transpose successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(transpose (disjunction equal (recursive successor (transpose successor) (disjunction successor (transpose (chain successor successor))))))\n)",
            "task_solution": "(transpose (disjunction equal (recursive successor (transpose successor) (disjunction successor (transpose (chain successor successor))))))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.1866591590223834,
            "num_unique_values": 76,
            "num_values_explored": 167,
            "solution": "(recursive equal (transpose (chain successor successor)) (recursive (disjunction zero successor) (transpose successor) zero))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive equal (transpose (chain successor successor)) (recursive (disjunction zero successor) (transpose successor) zero))\n)",
            "task_solution": "(recursive equal (transpose (chain successor successor)) (recursive (disjunction zero successor) (transpose successor) zero))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2550390919786878,
            "num_unique_values": 116,
            "num_values_explored": 224,
            "solution": "(recursive (chain (disjunction zero (chain (recursive successor (chain (transpose successor) successor) successor) successor)) (chain successor successor)) zero successor)",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (recursive successor equal successor) (chain successor (chain successor successor))) zero successor)\n)",
            "task_solution": "(recursive (chain (recursive successor equal successor) (chain successor (chain successor successor))) zero successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.16801838303217664,
            "num_unique_values": 78,
            "num_values_explored": 162,
            "solution": "(recursive (chain (disjunction zero (chain successor successor)) successor) (transpose (chain successor successor)) successor)",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n        False]])],\n    solution=(recursive (chain (disjunction zero (chain successor successor)) successor) (transpose (chain successor successor)) successor)\n)",
            "task_solution": "(recursive (chain (disjunction zero (chain successor successor)) successor) (transpose (chain successor successor)) successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.19547321199206635,
            "num_unique_values": 86,
            "num_values_explored": 187,
            "solution": "(transpose (chain (recursive (disjunction successor equal) (chain successor successor) successor) (disjunction equal successor)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True]])],\n    solution=(transpose (chain (recursive (disjunction successor equal) (chain successor successor) successor) (disjunction successor equal)))\n)",
            "task_solution": "(transpose (chain (recursive (disjunction successor equal) (chain successor successor) successor) (disjunction successor equal)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.36631762800971046,
            "num_unique_values": 176,
            "num_values_explored": 361,
            "solution": "(chain successor (recursive successor (transpose (recursive (chain successor successor) (transpose successor) equal)) (recursive equal zero (transpose successor))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive successor (transpose successor) (recursive (chain successor successor) (transpose successor) equal)))\n)",
            "task_solution": "(chain successor (recursive successor (transpose successor) (recursive (chain successor successor) (transpose successor) equal)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.3070204280083999,
            "num_unique_values": 156,
            "num_values_explored": 295,
            "solution": "(recursive (transpose (chain (recursive successor (chain successor successor) (recursive equal zero (transpose successor))) successor)) equal successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False]])],\n    solution=(transpose (chain (recursive successor successor (recursive equal zero (recursive successor equal successor))) successor))\n)",
            "task_solution": "(transpose (chain (recursive successor successor (recursive equal zero (recursive successor equal successor))) successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.20250454096822068,
            "num_unique_values": 100,
            "num_values_explored": 199,
            "solution": "(chain (recursive (transpose successor) (transpose successor) (recursive zero (transpose successor) (transpose successor))) successor)",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(chain (recursive (transpose successor) (transpose successor) (recursive zero (transpose successor) (transpose successor))) successor)\n)",
            "task_solution": "(chain (recursive (transpose successor) (transpose successor) (recursive zero (transpose successor) (transpose successor))) successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2034827939933166,
            "num_unique_values": 98,
            "num_values_explored": 198,
            "solution": "(chain (recursive successor successor (chain successor (chain successor successor))) (chain successor (transpose successor)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor successor (chain successor (chain successor successor))) (chain successor (transpose successor)))\n)",
            "task_solution": "(chain (recursive successor successor (chain successor (chain successor successor))) (chain successor (transpose successor)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.26883077499223873,
            "num_unique_values": 127,
            "num_values_explored": 247,
            "solution": "(transpose (chain (recursive (transpose (recursive zero zero (transpose successor))) (recursive equal equal successor) successor) successor))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (chain (recursive (transpose (recursive zero zero (transpose successor))) (transpose successor) zero) successor))\n)",
            "task_solution": "(transpose (chain (recursive (transpose (recursive zero zero (transpose successor))) (transpose successor) zero) successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.17252733797067776,
            "num_unique_values": 83,
            "num_values_explored": 165,
            "solution": "(recursive (recursive (transpose successor) (transpose successor) (disjunction zero successor)) successor (recursive (chain successor successor) (transpose successor) successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (recursive (transpose successor) (transpose successor) successor) successor (recursive equal (transpose successor) successor))\n)",
            "task_solution": "(recursive (recursive (transpose successor) (transpose successor) successor) successor (recursive equal (transpose successor) successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2522437730222009,
            "num_unique_values": 128,
            "num_values_explored": 248,
            "solution": "(transpose (disjunction equal (chain successor (chain successor (disjunction (transpose successor) (chain successor successor))))))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False, False,  True,  True, False, False, False, False,\n        False],\n       [False,  True, False, False,  True,  True, False, False, False,\n        False],\n       [False, False,  True, False, False,  True,  True, False, False,\n        False],\n       [False, False, False,  True, False, False,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False, False,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n         True]])],\n    solution=(transpose (disjunction equal (chain successor (chain successor (disjunction (transpose successor) (chain successor successor))))))\n)",
            "task_solution": "(transpose (disjunction equal (chain successor (chain successor (disjunction (transpose successor) (chain successor successor))))))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.7394490049919114,
            "num_unique_values": 311,
            "num_values_explored": 755,
            "solution": "(disjunction zero (recursive successor (transpose successor) (recursive equal (transpose successor) (chain successor successor))))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(disjunction zero (recursive successor (transpose successor) (recursive equal (transpose successor) (chain successor successor))))\n)",
            "task_solution": "(disjunction zero (recursive successor (transpose successor) (recursive equal (transpose successor) (chain successor successor))))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.21538059797603637,
            "num_unique_values": 96,
            "num_values_explored": 201,
            "solution": "(chain (disjunction (transpose successor) (recursive successor (chain successor successor) successor)) (disjunction zero successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (disjunction (transpose successor) (recursive successor (chain successor successor) successor)) (disjunction zero successor))\n)",
            "task_solution": "(chain (disjunction (transpose successor) (recursive successor (chain successor successor) successor)) (disjunction zero successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.12916112400125712,
            "num_unique_values": 59,
            "num_values_explored": 134,
            "solution": "(chain (recursive (chain successor successor) zero (recursive successor equal successor)) (chain successor successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (disjunction zero (chain successor successor)) (chain successor successor)) zero (transpose successor))\n)",
            "task_solution": "(recursive (chain (disjunction zero (chain successor successor)) (chain successor successor)) zero (transpose successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2711646220413968,
            "num_unique_values": 116,
            "num_values_explored": 254,
            "solution": "(recursive (transpose (chain successor (disjunction equal successor))) (chain successor successor) (recursive successor equal (chain successor successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False]])],\n    solution=(transpose (chain successor (disjunction equal (recursive successor (recursive equal (transpose successor) successor) successor))))\n)",
            "task_solution": "(transpose (chain successor (disjunction equal (recursive successor (recursive equal (transpose successor) successor) successor))))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2647556940210052,
            "num_unique_values": 137,
            "num_values_explored": 259,
            "solution": "(chain (disjunction successor (recursive equal successor (chain successor (chain successor successor)))) (transpose successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True,  True, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True,  True, False, False,\n        False],\n       [False, False,  True, False,  True, False,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (disjunction successor (recursive equal successor (chain successor (chain successor successor)))) (transpose successor))\n)",
            "task_solution": "(chain (disjunction successor (recursive equal successor (chain successor (chain successor successor)))) (transpose successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.22108520794427022,
            "num_unique_values": 106,
            "num_values_explored": 226,
            "solution": "(disjunction equal (recursive (chain successor successor) successor (recursive successor (chain successor successor) successor)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (recursive (chain successor successor) successor (recursive successor (chain successor successor) successor)))\n)",
            "task_solution": "(disjunction equal (recursive (chain successor successor) successor (recursive successor (chain successor successor) successor)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2613952119718306,
            "num_unique_values": 126,
            "num_values_explored": 243,
            "solution": "(transpose (chain (recursive equal (transpose successor) zero) (chain (recursive equal (disjunction equal successor) (chain successor successor)) successor)))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(transpose (chain (recursive equal (disjunction successor equal) (chain (disjunction zero successor) successor)) successor))\n)",
            "task_solution": "(transpose (chain (recursive equal (disjunction successor equal) (chain (disjunction zero successor) successor)) successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.20948584197321907,
            "num_unique_values": 112,
            "num_values_explored": 208,
            "solution": "(disjunction (transpose (chain zero (chain successor successor))) (chain (recursive successor equal successor) successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction (transpose (chain zero (chain successor successor))) (chain (recursive successor equal successor) successor))\n)",
            "task_solution": "(disjunction (transpose (chain zero (chain successor successor))) (chain (recursive successor equal successor) successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.14496994501678273,
            "num_unique_values": 74,
            "num_values_explored": 148,
            "solution": "(disjunction (chain successor (transpose successor)) (chain (disjunction successor (chain (transpose successor) zero)) (chain successor successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction successor (transpose (chain zero successor))) (disjunction (transpose successor) (chain successor successor)))\n)",
            "task_solution": "(chain (disjunction successor (transpose (chain zero successor))) (disjunction (transpose successor) (chain successor successor)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.17265440296614543,
            "num_unique_values": 76,
            "num_values_explored": 165,
            "solution": "(recursive (disjunction successor (chain (disjunction successor equal) (transpose (chain successor successor)))) (disjunction successor equal) (chain successor successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False]])],\n    solution=(recursive (disjunction successor (transpose (chain successor successor))) (disjunction successor equal) (chain successor successor))\n)",
            "task_solution": "(recursive (disjunction successor (transpose (chain successor successor))) (disjunction successor equal) (chain successor successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.18909874995006248,
            "num_unique_values": 91,
            "num_values_explored": 182,
            "solution": "(transpose (recursive (chain zero (recursive successor successor equal)) (transpose successor) (chain successor successor)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (transpose (chain zero (recursive successor successor equal))) (chain successor successor) (transpose successor))\n)",
            "task_solution": "(recursive (transpose (chain zero (recursive successor successor equal))) (chain successor successor) (transpose successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.28002965700579807,
            "num_unique_values": 116,
            "num_values_explored": 228,
            "solution": "(recursive (disjunction equal (recursive (chain successor successor) (recursive successor (transpose successor) (disjunction zero successor)) (transpose successor))) zero successor)",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive equal (disjunction zero (recursive (chain successor successor) (transpose successor) equal)) (transpose successor))\n)",
            "task_solution": "(recursive equal (disjunction zero (recursive (chain successor successor) (transpose successor) equal)) (transpose successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.507665770011954,
            "num_unique_values": 222,
            "num_values_explored": 477,
            "solution": "(chain (disjunction (transpose successor) (recursive successor successor (disjunction equal (chain successor successor)))) (chain (disjunction successor (transpose successor)) (disjunction zero successor)))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) successor (recursive (transpose successor) (disjunction equal (chain successor successor)) successor))\n)",
            "task_solution": "(recursive (transpose successor) successor (recursive (transpose successor) (disjunction equal (chain successor successor)) successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.24899293103953823,
            "num_unique_values": 117,
            "num_values_explored": 234,
            "solution": "(recursive (recursive successor (recursive equal equal successor) (chain successor (chain successor successor))) successor zero)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False]])],\n    solution=(recursive successor (recursive equal equal successor) (chain (disjunction zero (chain successor successor)) successor))\n)",
            "task_solution": "(recursive successor (recursive equal equal successor) (chain (disjunction zero (chain successor successor)) successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.21415353601332754,
            "num_unique_values": 110,
            "num_values_explored": 214,
            "solution": "(disjunction (recursive successor zero (transpose successor)) (recursive successor (chain (transpose (disjunction zero (chain successor successor))) successor) successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (recursive successor zero (transpose successor)) (chain (transpose (chain successor successor)) successor) successor)\n)",
            "task_solution": "(recursive (recursive successor zero (transpose successor)) (chain (transpose (chain successor successor)) successor) successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2191935009905137,
            "num_unique_values": 98,
            "num_values_explored": 203,
            "solution": "(chain (recursive successor (recursive equal successor (transpose successor)) successor) (chain (disjunction zero (chain successor successor)) successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (disjunction zero (chain successor successor)) successor) (recursive successor equal successor) equal)\n)",
            "task_solution": "(recursive (chain (disjunction zero (chain successor successor)) successor) (recursive successor equal successor) equal)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.33905692800180987,
            "num_unique_values": 156,
            "num_values_explored": 302,
            "solution": "(recursive successor (transpose (chain successor successor)) (disjunction (chain (transpose successor) successor) (recursive successor (transpose successor) successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive successor (transpose (chain successor successor)) (disjunction equal (recursive successor (transpose successor) successor)))\n)",
            "task_solution": "(recursive successor (transpose (chain successor successor)) (disjunction equal (recursive successor (transpose successor) successor)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2723684139782563,
            "num_unique_values": 139,
            "num_values_explored": 256,
            "solution": "(chain (recursive (transpose successor) (chain successor successor) (recursive equal (recursive equal successor (transpose successor)) successor)) successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (disjunction (transpose successor) (recursive successor successor (recursive equal successor (transpose successor)))) successor)\n)",
            "task_solution": "(chain (disjunction (transpose successor) (recursive successor successor (recursive equal successor (transpose successor)))) successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.22874824999598786,
            "num_unique_values": 106,
            "num_values_explored": 209,
            "solution": "(disjunction (chain successor successor) (transpose (chain (recursive equal successor (chain successor successor)) successor)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (chain successor successor) (transpose (chain (recursive equal successor (chain successor successor)) successor)))\n)",
            "task_solution": "(disjunction (chain successor successor) (transpose (chain (recursive equal successor (chain successor successor)) successor)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.25525263499002904,
            "num_unique_values": 117,
            "num_values_explored": 225,
            "solution": "(recursive (transpose (recursive successor equal successor)) (recursive (chain successor successor) equal successor) zero)",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [ True, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [ True, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) successor (recursive equal zero (recursive (chain successor successor) equal successor)))\n)",
            "task_solution": "(recursive (transpose successor) successor (recursive equal zero (recursive (chain successor successor) equal successor)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.19928277301369235,
            "num_unique_values": 98,
            "num_values_explored": 195,
            "solution": "(chain successor (chain (recursive successor (transpose successor) successor) (recursive successor zero (transpose successor))))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain (recursive successor (transpose successor) successor) (recursive successor zero (transpose successor))))\n)",
            "task_solution": "(chain successor (chain (recursive successor (transpose successor) successor) (recursive successor zero (transpose successor))))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.22498029901180416,
            "num_unique_values": 109,
            "num_values_explored": 210,
            "solution": "(disjunction zero (chain (transpose successor) (recursive (chain zero (chain successor successor)) (transpose successor) equal)))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction zero (chain (recursive (transpose successor) equal successor) (chain zero (chain successor successor))))\n)",
            "task_solution": "(disjunction zero (chain (recursive (transpose successor) equal successor) (chain zero (chain successor successor))))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2181775729986839,
            "num_unique_values": 106,
            "num_values_explored": 217,
            "solution": "(disjunction equal (disjunction (recursive successor successor (transpose successor)) (recursive successor (chain (transpose successor) successor) (recursive successor equal successor))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (recursive (recursive successor successor (transpose successor)) (chain (transpose successor) successor) successor))\n)",
            "task_solution": "(disjunction equal (recursive (recursive successor successor (transpose successor)) (chain (transpose successor) successor) successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.18442278500879183,
            "num_unique_values": 81,
            "num_values_explored": 167,
            "solution": "(recursive equal (recursive successor (chain successor successor) successor) (recursive successor zero (transpose successor)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [ True, False, False, False,  True,  True,  True, False, False,\n        False],\n       [ True, False, False, False, False,  True,  True, False, False,\n        False],\n       [ True, False, False, False, False, False,  True,  True, False,\n        False],\n       [ True, False, False, False, False, False, False,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive successor (chain successor successor) successor) (recursive successor zero (transpose successor)))\n)",
            "task_solution": "(recursive equal (recursive successor (chain successor successor) successor) (recursive successor zero (transpose successor)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.30676659202435985,
            "num_unique_values": 146,
            "num_values_explored": 298,
            "solution": "(disjunction successor (recursive equal (transpose (chain successor (chain successor successor))) (transpose (disjunction equal (recursive successor (transpose successor) successor)))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True]])],\n    solution=(recursive (disjunction successor equal) (transpose (chain successor (chain successor successor))) (disjunction successor equal))\n)",
            "task_solution": "(recursive (disjunction successor equal) (transpose (chain successor (chain successor successor))) (disjunction successor equal))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.14788432396017015,
            "num_unique_values": 56,
            "num_values_explored": 138,
            "solution": "(chain (recursive (disjunction (transpose successor) (chain zero successor)) equal successor) (chain successor successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (recursive (disjunction (transpose successor) (chain zero successor)) equal successor) (chain successor successor))\n)",
            "task_solution": "(chain (recursive (disjunction (transpose successor) (chain zero successor)) equal successor) (chain successor successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2474435130134225,
            "num_unique_values": 106,
            "num_values_explored": 225,
            "solution": "(disjunction equal (disjunction (chain successor successor) (recursive (transpose successor) successor (chain successor successor))))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(disjunction equal (disjunction (chain successor successor) (recursive (transpose successor) successor (chain successor successor))))\n)",
            "task_solution": "(disjunction equal (disjunction (chain successor successor) (recursive (transpose successor) successor (chain successor successor))))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.3502402750309557,
            "num_unique_values": 166,
            "num_values_explored": 304,
            "solution": "(transpose (disjunction (recursive zero zero (transpose (chain successor successor))) (chain successor (chain (recursive successor successor (chain successor successor)) successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False]])],\n    solution=(transpose (disjunction zero (chain successor (chain (recursive successor successor (chain successor successor)) successor))))\n)",
            "task_solution": "(transpose (disjunction zero (chain successor (chain (recursive successor successor (chain successor successor)) successor))))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.18888095201691613,
            "num_unique_values": 80,
            "num_values_explored": 169,
            "solution": "(recursive (chain (recursive (disjunction (transpose successor) (chain successor successor)) (transpose successor) successor) successor) zero successor)",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (chain (disjunction (chain successor successor) (recursive equal equal successor)) successor) zero successor)\n)",
            "task_solution": "(recursive (chain (disjunction (chain successor successor) (recursive equal equal successor)) successor) zero successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.23483222001232207,
            "num_unique_values": 119,
            "num_values_explored": 215,
            "solution": "(recursive (recursive (disjunction equal (disjunction (transpose successor) (chain successor successor))) (disjunction zero successor) (transpose (chain successor successor))) equal successor)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (recursive (transpose (disjunction successor equal)) successor (transpose (chain successor successor))) equal successor)\n)",
            "task_solution": "(recursive (recursive (transpose (disjunction successor equal)) successor (transpose (chain successor successor))) equal successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 1.7603484709979966,
            "num_unique_values": 469,
            "num_values_explored": 1766,
            "solution": "(recursive (recursive (transpose (recursive successor (recursive successor (transpose successor) successor) (transpose successor))) (chain successor (transpose successor)) successor) equal successor)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (recursive (transpose successor) (transpose successor) (recursive successor (transpose successor) successor)) equal successor)\n)",
            "task_solution": "(recursive (recursive (transpose successor) (transpose successor) (recursive successor (transpose successor) successor)) equal successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.18029776395997033,
            "num_unique_values": 79,
            "num_values_explored": 166,
            "solution": "(recursive (recursive equal zero (recursive successor equal successor)) (transpose successor) (chain successor successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n        False],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n         True]])],\n    solution=(recursive (recursive equal zero (recursive successor equal successor)) (transpose successor) (chain successor successor))\n)",
            "task_solution": "(recursive (recursive equal zero (recursive successor equal successor)) (transpose successor) (chain successor successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 2.898171825974714,
            "num_unique_values": 690,
            "num_values_explored": 3368,
            "solution": "(recursive equal successor (chain (disjunction zero successor) (transpose (recursive (chain successor (recursive (disjunction zero successor) (transpose successor) zero)) successor equal))))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (recursive (chain (recursive successor equal successor) zero) successor (transpose successor)))\n)",
            "task_solution": "(recursive equal successor (recursive (chain (recursive successor equal successor) zero) successor (transpose successor)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2315216310089454,
            "num_unique_values": 116,
            "num_values_explored": 227,
            "solution": "(recursive (transpose successor) (chain successor (chain successor (chain successor successor))) (disjunction successor equal))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True, False,  True,  True,  True, False,\n        False],\n       [ True, False, False,  True,  True, False,  True,  True,  True,\n        False],\n       [False,  True, False, False,  True,  True, False, False, False,\n        False],\n       [False, False,  True, False, False,  True,  True, False, False,\n        False],\n       [False, False, False,  True, False, False,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False, False,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (chain successor (chain successor (chain successor successor))) (disjunction successor equal))\n)",
            "task_solution": "(recursive (transpose successor) (chain successor (chain successor (chain successor successor))) (disjunction successor equal))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.17502606700873002,
            "num_unique_values": 84,
            "num_values_explored": 166,
            "solution": "(recursive (disjunction (chain successor (transpose successor)) (recursive successor (transpose successor) successor)) successor (transpose successor))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(disjunction (recursive successor (transpose successor) successor) (recursive (disjunction successor (transpose successor)) successor equal))\n)",
            "task_solution": "(disjunction (recursive successor (transpose successor) successor) (recursive (disjunction successor (transpose successor)) successor equal))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.20067307102726772,
            "num_unique_values": 98,
            "num_values_explored": 194,
            "solution": "(chain (recursive equal (disjunction (transpose successor) (chain successor (chain successor successor))) successor) successor)",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(chain (recursive equal (disjunction (transpose successor) (chain successor (chain successor successor))) successor) successor)\n)",
            "task_solution": "(chain (recursive equal (disjunction (transpose successor) (chain successor (chain successor successor))) successor) successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.18309984798543155,
            "num_unique_values": 79,
            "num_values_explored": 166,
            "solution": "(recursive (chain (recursive successor (transpose successor) successor) successor) (recursive successor successor equal) successor)",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(recursive (chain (recursive successor (transpose successor) successor) successor) (recursive successor successor equal) successor)\n)",
            "task_solution": "(recursive (chain (recursive successor (transpose successor) successor) successor) (recursive successor successor equal) successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.5985660980222747,
            "num_unique_values": 246,
            "num_values_explored": 535,
            "solution": "(transpose (disjunction (recursive equal successor equal) (recursive successor (disjunction (chain zero successor) (transpose (chain successor successor))) (transpose successor))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(transpose (disjunction equal (recursive successor (transpose (disjunction equal (chain successor successor))) (transpose successor))))\n)",
            "task_solution": "(transpose (disjunction equal (recursive successor (transpose (disjunction equal (chain successor successor))) (transpose successor))))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.27623619296355173,
            "num_unique_values": 126,
            "num_values_explored": 248,
            "solution": "(transpose (disjunction successor (recursive equal (recursive equal (transpose successor) zero) (transpose (chain successor successor)))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True]])],\n    solution=(transpose (disjunction successor (recursive equal (recursive equal (transpose successor) zero) (transpose (chain successor successor)))))\n)",
            "task_solution": "(transpose (disjunction successor (recursive equal (recursive equal (transpose successor) zero) (transpose (chain successor successor)))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.3295168449985795,
            "num_unique_values": 163,
            "num_values_explored": 312,
            "solution": "(recursive successor (chain successor (recursive successor (recursive (transpose (chain successor successor)) (chain successor successor) successor) successor)) (chain successor successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False,  True,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive equal (recursive (transpose (chain successor successor)) (chain successor successor) successor) successor))\n)",
            "task_solution": "(chain successor (recursive equal (recursive (transpose (chain successor successor)) (chain successor successor) successor) successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.1955417050048709,
            "num_unique_values": 76,
            "num_values_explored": 170,
            "solution": "(recursive (chain (recursive zero (transpose successor) (transpose successor)) successor) successor (recursive equal equal successor))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (recursive zero (transpose successor) (transpose successor)) successor) successor (recursive equal equal successor))\n)",
            "task_solution": "(recursive (chain (recursive zero (transpose successor) (transpose successor)) successor) successor (recursive equal equal successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.30615093698725104,
            "num_unique_values": 136,
            "num_values_explored": 272,
            "solution": "(chain successor (disjunction equal (disjunction (chain successor successor) (recursive (transpose successor) (transpose successor) successor))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False,  True, False, False,\n        False],\n       [ True, False,  True, False,  True,  True, False,  True, False,\n        False],\n       [False,  True, False,  True, False,  True,  True, False,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True,  True, False,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (disjunction equal (disjunction (chain successor successor) (recursive (transpose successor) (transpose successor) successor))))\n)",
            "task_solution": "(chain successor (disjunction equal (disjunction (chain successor successor) (recursive (transpose successor) (transpose successor) successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 4.429262630990706,
            "num_unique_values": 793,
            "num_values_explored": 4541,
            "solution": "(chain (chain zero successor) (recursive (chain successor (chain successor (chain successor (transpose successor)))) (chain successor successor) equal))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain zero (recursive (chain successor (chain successor successor)) (recursive successor successor (transpose successor)) successor))\n)",
            "task_solution": "(chain zero (recursive (chain successor (chain successor successor)) (recursive successor successor (transpose successor)) successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.21511491102864966,
            "num_unique_values": 109,
            "num_values_explored": 216,
            "solution": "(disjunction successor (recursive (recursive equal successor (recursive successor successor (transpose successor))) (transpose successor) zero))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True,  True, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True,  True, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True,  True, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n         True],\n       [ True, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (disjunction successor (recursive equal successor (recursive successor successor (transpose successor)))) (transpose successor) zero)\n)",
            "task_solution": "(recursive (disjunction successor (recursive equal successor (recursive successor successor (transpose successor)))) (transpose successor) zero)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.16904127300949767,
            "num_unique_values": 78,
            "num_values_explored": 165,
            "solution": "(recursive (recursive (chain successor successor) (transpose successor) successor) (chain successor successor) (disjunction equal successor))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False]])],\n    solution=(recursive (recursive (chain successor successor) (transpose successor) successor) (chain successor successor) (disjunction successor equal))\n)",
            "task_solution": "(recursive (recursive (chain successor successor) (transpose successor) successor) (chain successor successor) (disjunction successor equal))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.17591800796799362,
            "num_unique_values": 85,
            "num_values_explored": 162,
            "solution": "(recursive (disjunction (chain successor successor) (transpose successor)) (transpose (recursive (chain (disjunction zero successor) successor) successor (transpose successor))) equal)",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (disjunction (transpose successor) (chain successor successor)) (transpose (chain (disjunction zero successor) successor)) equal)\n)",
            "task_solution": "(recursive (disjunction (transpose successor) (chain successor successor)) (transpose (chain (disjunction zero successor) successor)) equal)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.5593974749790505,
            "num_unique_values": 271,
            "num_values_explored": 518,
            "solution": "(disjunction equal (recursive (disjunction successor (recursive (transpose zero) (transpose (chain successor successor)) (transpose successor))) successor equal))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True, False,  True,  True,  True,\n         True],\n       [False, False, False, False,  True, False, False,  True,  True,\n         True],\n       [False, False, False, False,  True, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (disjunction equal (recursive (transpose zero) (transpose (chain successor successor)) (transpose successor))) successor equal)\n)",
            "task_solution": "(recursive (disjunction equal (recursive (transpose zero) (transpose (chain successor successor)) (transpose successor))) successor equal)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.25296454899944365,
            "num_unique_values": 122,
            "num_values_explored": 227,
            "solution": "(recursive successor (transpose (recursive (chain successor successor) zero successor)) (recursive equal (transpose successor) (recursive successor (transpose successor) successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive successor (recursive (transpose (chain successor successor)) successor zero) (recursive equal (transpose successor) successor))\n)",
            "task_solution": "(recursive successor (recursive (transpose (chain successor successor)) successor zero) (recursive equal (transpose successor) successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.35695902898442,
            "num_unique_values": 166,
            "num_values_explored": 335,
            "solution": "(transpose (chain (recursive successor (chain successor (chain successor (disjunction successor equal))) (recursive successor successor equal)) successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False]])],\n    solution=(transpose (chain (recursive successor (recursive (chain successor (chain successor successor)) equal successor) successor) successor))\n)",
            "task_solution": "(transpose (chain (recursive successor (recursive (chain successor (chain successor successor)) equal successor) successor) successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.21843836503103375,
            "num_unique_values": 115,
            "num_values_explored": 216,
            "solution": "(disjunction (recursive (chain successor successor) (transpose successor) successor) (recursive (chain successor successor) (chain successor (chain successor successor)) successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False]])],\n    solution=(recursive (recursive (chain successor successor) (chain successor (chain successor successor)) successor) (transpose successor) successor)\n)",
            "task_solution": "(recursive (recursive (chain successor successor) (chain successor (chain successor successor)) successor) (transpose successor) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.21235221199458465,
            "num_unique_values": 112,
            "num_values_explored": 205,
            "solution": "(disjunction successor (recursive equal (transpose (chain successor successor)) (recursive (transpose successor) (transpose successor) zero)))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (disjunction successor equal) (transpose (chain successor successor)) (recursive (transpose successor) (transpose successor) zero))\n)",
            "task_solution": "(recursive (disjunction successor equal) (transpose (chain successor successor)) (recursive (transpose successor) (transpose successor) zero))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.24534874997334555,
            "num_unique_values": 125,
            "num_values_explored": 228,
            "solution": "(recursive (transpose successor) successor (chain (recursive successor zero (transpose (chain successor successor))) (transpose (chain successor successor))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False, False, False,  True, False,  True, False,\n        False],\n       [ True, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(transpose (chain successor (recursive (recursive equal zero (transpose (chain successor successor))) (transpose successor) successor)))\n)",
            "task_solution": "(transpose (chain successor (recursive (recursive equal zero (transpose (chain successor successor))) (transpose successor) successor)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 6.872252486005891,
            "num_unique_values": 1076,
            "num_values_explored": 7082,
            "solution": "(chain successor (chain (transpose (chain (transpose (recursive (chain zero (chain successor successor)) (transpose successor) (recursive successor successor equal))) successor)) successor))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive (chain zero (chain successor successor)) (transpose successor) (recursive successor successor equal)) successor)\n)",
            "task_solution": "(chain (recursive (chain zero (chain successor successor)) (transpose successor) (recursive successor successor equal)) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.18664423702284694,
            "num_unique_values": 90,
            "num_values_explored": 178,
            "solution": "(transpose (disjunction (transpose successor) (chain (disjunction zero successor) (recursive (chain successor successor) (transpose successor) successor))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False]])],\n    solution=(disjunction successor (transpose (chain (disjunction zero successor) (recursive (chain successor successor) (transpose successor) successor))))\n)",
            "task_solution": "(disjunction successor (transpose (chain (disjunction zero successor) (recursive (chain successor successor) (transpose successor) successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.1809418749762699,
            "num_unique_values": 80,
            "num_values_explored": 164,
            "solution": "(recursive (recursive (transpose successor) (transpose successor) zero) (recursive zero (transpose successor) (transpose successor)) successor)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False, False, False, False, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (recursive (transpose successor) (transpose successor) zero) (recursive zero (transpose successor) (transpose successor)) successor)\n)",
            "task_solution": "(recursive (recursive (transpose successor) (transpose successor) zero) (recursive zero (transpose successor) (transpose successor)) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.2726645839866251,
            "num_unique_values": 137,
            "num_values_explored": 268,
            "solution": "(chain (recursive equal (transpose (chain zero (disjunction zero successor))) (transpose (chain successor (chain successor successor)))) successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False, False,  True, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (transpose (chain zero (disjunction zero successor))) (transpose (chain successor (chain successor successor))))\n)",
            "task_solution": "(recursive successor (transpose (chain zero (disjunction zero successor))) (transpose (chain successor (chain successor successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.18745347700314596,
            "num_unique_values": 101,
            "num_values_explored": 194,
            "solution": "(chain (recursive equal (chain successor (transpose (chain successor successor))) (recursive successor (transpose successor) successor)) (chain (transpose successor) successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (transpose successor) (recursive successor successor (recursive (transpose successor) equal (transpose (chain successor successor)))))\n)",
            "task_solution": "(chain (transpose successor) (recursive successor successor (recursive (transpose successor) equal (transpose (chain successor successor)))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.21181341802002862,
            "num_unique_values": 97,
            "num_values_explored": 209,
            "solution": "(chain (disjunction successor equal) (disjunction (transpose successor) (chain successor (recursive successor (transpose successor) successor))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (disjunction successor equal) (disjunction (transpose successor) (chain successor (recursive successor (transpose successor) successor))))\n)",
            "task_solution": "(chain (disjunction successor equal) (disjunction (transpose successor) (chain successor (recursive successor (transpose successor) successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.20255774294491857,
            "num_unique_values": 102,
            "num_values_explored": 197,
            "solution": "(chain (recursive (transpose successor) (transpose successor) (recursive successor (transpose successor) (chain successor successor))) successor)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False,  True, False, False,\n         True],\n       [False,  True,  True,  True,  True,  True, False,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (recursive (transpose successor) (transpose successor) (recursive successor (transpose successor) (chain successor successor))) successor)\n)",
            "task_solution": "(chain (recursive (transpose successor) (transpose successor) (recursive successor (transpose successor) (chain successor successor))) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.25172282400308177,
            "num_unique_values": 118,
            "num_values_explored": 225,
            "solution": "(recursive (transpose (disjunction zero successor)) (recursive (recursive equal (transpose successor) (chain successor successor)) equal (transpose successor)) (transpose successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (transpose (disjunction zero successor)) (recursive equal (transpose successor) (chain successor successor)) (transpose successor))\n)",
            "task_solution": "(recursive (transpose (disjunction zero successor)) (recursive equal (transpose successor) (chain successor successor)) (transpose successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.22400413698051125,
            "num_unique_values": 106,
            "num_values_explored": 217,
            "solution": "(disjunction (chain zero successor) (recursive (transpose successor) equal (chain (recursive successor equal successor) zero)))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (disjunction (transpose successor) (chain zero successor)) equal (chain (recursive successor equal successor) zero))\n)",
            "task_solution": "(recursive (disjunction (transpose successor) (chain zero successor)) equal (chain (recursive successor equal successor) zero))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.21193653700174764,
            "num_unique_values": 102,
            "num_values_explored": 195,
            "solution": "(chain (transpose (disjunction equal successor)) (recursive (recursive successor (chain successor successor) successor) (chain (transpose successor) successor) (transpose successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction (recursive successor (chain successor successor) successor) (chain (transpose successor) (recursive successor successor equal)))\n)",
            "task_solution": "(disjunction (recursive successor (chain successor successor) successor) (chain (transpose successor) (recursive successor successor equal)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.1492737799999304,
            "num_unique_values": 74,
            "num_values_explored": 150,
            "solution": "(disjunction (recursive zero zero (transpose successor)) (chain (recursive (transpose successor) equal (chain zero successor)) (chain successor successor)))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction zero (chain (transpose successor) (chain (disjunction successor (recursive zero zero (transpose successor))) successor)))\n)",
            "task_solution": "(disjunction zero (chain (transpose successor) (chain (disjunction successor (recursive zero zero (transpose successor))) successor)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.3354760860092938,
            "num_unique_values": 161,
            "num_values_explored": 348,
            "solution": "(recursive (transpose (chain successor successor)) (disjunction zero successor) (transpose (chain successor (chain successor successor))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False,  True, False, False, False,  True, False,\n        False],\n       [ True, False, False, False,  True, False, False, False,  True,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n         True],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [False, False, False,  True, False, False, False,  True, False,\n        False],\n       [False, False, False, False,  True, False, False, False,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain successor successor)) (disjunction zero successor) (transpose (chain successor (chain successor successor))))\n)",
            "task_solution": "(recursive (transpose (chain successor successor)) (disjunction zero successor) (transpose (chain successor (chain successor successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.13418679701862857,
            "num_unique_values": 62,
            "num_values_explored": 135,
            "solution": "(chain (recursive (chain (recursive successor successor equal) successor) (transpose successor) (chain successor successor)) successor)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True, False,  True, False, False,\n        False]])],\n    solution=(chain (recursive (recursive (chain successor successor) successor equal) (transpose successor) (chain successor successor)) successor)\n)",
            "task_solution": "(chain (recursive (recursive (chain successor successor) successor equal) (transpose successor) (chain successor successor)) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.272177169972565,
            "num_unique_values": 127,
            "num_values_explored": 255,
            "solution": "(transpose (disjunction equal (recursive (recursive successor zero (transpose successor)) (transpose successor) (chain successor successor))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False,  True,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n         True],\n       [ True,  True,  True,  True,  True, False, False,  True, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False,  True,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n         True],\n       [ True,  True,  True, False,  True,  True, False,  True, False,\n        False],\n       [ True,  True, False, False, False,  True,  True, False,  True,\n        False],\n       [ True,  True, False, False, False, False,  True,  True, False,\n         True],\n       [ True, False, False, False, False, False, False,  True,  True,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction equal (recursive (recursive successor zero (transpose successor)) (transpose successor) (chain successor successor))))\n)",
            "task_solution": "(transpose (disjunction equal (recursive (recursive successor zero (transpose successor)) (transpose successor) (chain successor successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.3245926820090972,
            "num_unique_values": 176,
            "num_values_explored": 358,
            "solution": "(chain successor (disjunction equal (chain successor (transpose (chain (recursive successor successor (transpose (recursive successor successor equal))) (chain successor (transpose successor)))))))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (recursive successor (chain successor (chain successor successor)) (recursive successor equal successor)))\n)",
            "task_solution": "(recursive successor successor (recursive successor (chain successor (chain successor successor)) (recursive successor equal successor)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.2138994300039485,
            "num_unique_values": 98,
            "num_values_explored": 201,
            "solution": "(chain (recursive equal (transpose (disjunction equal (chain successor successor))) (transpose (disjunction zero successor))) successor)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True]])],\n    solution=(chain (recursive equal (transpose (disjunction equal (chain successor successor))) (transpose (disjunction zero successor))) successor)\n)",
            "task_solution": "(chain (recursive equal (transpose (disjunction equal (chain successor successor))) (transpose (disjunction zero successor))) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.24127497297013178,
            "num_unique_values": 125,
            "num_values_explored": 215,
            "solution": "(recursive (disjunction successor (recursive equal (chain successor successor) (disjunction successor (transpose successor)))) (chain (transpose successor) successor) successor)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (disjunction successor (recursive equal (chain successor successor) (disjunction successor (transpose successor)))) equal successor)\n)",
            "task_solution": "(recursive (disjunction successor (recursive equal (chain successor successor) (disjunction successor (transpose successor)))) equal successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.23644946102285758,
            "num_unique_values": 106,
            "num_values_explored": 224,
            "solution": "(disjunction (transpose successor) (chain (recursive successor (recursive equal successor equal) successor) (chain successor (chain successor successor))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) successor (recursive (transpose (chain successor (chain successor successor))) equal (transpose successor)))\n)",
            "task_solution": "(recursive (transpose successor) successor (recursive (transpose (chain successor (chain successor successor))) equal (transpose successor)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.2997213859925978,
            "num_unique_values": 136,
            "num_values_explored": 280,
            "solution": "(chain (disjunction (transpose successor) (recursive (recursive equal (transpose successor) zero) successor (transpose successor))) successor)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True, False,  True,  True, False,\n         True],\n       [False,  True,  True,  True, False, False, False,  True,  True,\n        False],\n       [False,  True,  True, False, False, False, False, False,  True,\n         True],\n       [False,  True, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (transpose (disjunction successor (recursive (recursive equal zero (transpose successor)) (transpose successor) successor))) successor)\n)",
            "task_solution": "(chain (transpose (disjunction successor (recursive (recursive equal zero (transpose successor)) (transpose successor) successor))) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.23962286999449134,
            "num_unique_values": 122,
            "num_values_explored": 220,
            "solution": "(recursive (chain (disjunction (transpose successor) (chain successor (chain successor successor))) (disjunction equal successor)) successor successor)",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True,  True, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True,  True, False, False, False,\n        False],\n       [False,  True,  True, False, False,  True,  True, False, False,\n        False],\n       [False, False,  True,  True, False, False,  True,  True, False,\n        False],\n       [False, False, False,  True,  True, False, False,  True,  True,\n        False],\n       [False, False, False, False,  True,  True, False, False,  True,\n         True],\n       [False, False, False, False, False,  True,  True, False, False,\n         True],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(disjunction zero (chain (disjunction (transpose successor) (chain successor (chain successor successor))) (disjunction successor equal)))\n)",
            "task_solution": "(disjunction zero (chain (disjunction (transpose successor) (chain successor (chain successor successor))) (disjunction successor equal)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.15069362695794553,
            "num_unique_values": 68,
            "num_values_explored": 144,
            "solution": "(disjunction (recursive (chain zero successor) (transpose successor) equal) (recursive (disjunction equal (chain zero successor)) successor (chain successor successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True, False,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True, False, False, False,  True,  True,  True, False,\n        False],\n       [False,  True, False, False, False, False, False,  True,  True,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (disjunction equal (recursive (chain zero successor) (transpose successor) equal)) successor (chain successor successor))\n)",
            "task_solution": "(recursive (disjunction equal (recursive (chain zero successor) (transpose successor) equal)) successor (chain successor successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.24332858802517876,
            "num_unique_values": 106,
            "num_values_explored": 236,
            "solution": "(disjunction zero (chain (disjunction successor (transpose successor)) (chain (disjunction zero successor) (chain successor successor))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction zero (chain (disjunction successor (transpose successor)) (chain (disjunction zero successor) (chain successor successor))))\n)",
            "task_solution": "(disjunction zero (chain (disjunction successor (transpose successor)) (chain (disjunction zero successor) (chain successor successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.20627929200418293,
            "num_unique_values": 103,
            "num_values_explored": 203,
            "solution": "(chain (recursive successor (disjunction (transpose successor) (chain successor successor)) (recursive successor successor equal)) successor)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (recursive successor (disjunction (transpose successor) (chain successor successor)) (recursive successor successor equal)) successor)\n)",
            "task_solution": "(chain (recursive successor (disjunction (transpose successor) (chain successor successor)) (recursive successor successor equal)) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.24948749400209635,
            "num_unique_values": 107,
            "num_values_explored": 211,
            "solution": "(disjunction successor (transpose (chain (recursive (disjunction equal (chain successor successor)) (transpose successor) zero) successor)))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False]])],\n    solution=(disjunction successor (transpose (chain (recursive (disjunction equal (chain successor successor)) (transpose successor) zero) successor)))\n)",
            "task_solution": "(disjunction successor (transpose (chain (recursive (disjunction equal (chain successor successor)) (transpose successor) zero) successor)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.32274151098681614,
            "num_unique_values": 149,
            "num_values_explored": 291,
            "solution": "(disjunction successor (recursive (transpose (disjunction equal (chain successor (chain successor successor)))) successor (transpose successor)))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n         True]])],\n    solution=(recursive (disjunction successor (transpose (disjunction equal (chain successor (chain successor successor))))) successor (transpose successor))\n)",
            "task_solution": "(recursive (disjunction successor (transpose (disjunction equal (chain successor (chain successor successor))))) successor (transpose successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.29144012700999156,
            "num_unique_values": 143,
            "num_values_explored": 281,
            "solution": "(chain (disjunction (transpose successor) (chain zero successor)) (disjunction equal (chain (disjunction zero successor) successor)))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (disjunction (transpose successor) (chain zero successor)) (disjunction equal (chain (disjunction zero successor) successor)))\n)",
            "task_solution": "(chain (disjunction (transpose successor) (chain zero successor)) (disjunction equal (chain (disjunction zero successor) successor)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.24659964500460774,
            "num_unique_values": 119,
            "num_values_explored": 237,
            "solution": "(recursive (chain (recursive (disjunction zero successor) successor (transpose (chain successor successor))) (disjunction successor (transpose successor))) (chain zero successor) equal)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True, False,  True,  True, False,\n         True],\n       [False, False,  True, False,  True,  True, False,  True,  True,\n        False],\n       [False, False, False,  True, False,  True,  True, False,  True,\n        False],\n       [False, False, False, False,  True, False,  True,  True, False,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor (disjunction zero (chain successor successor)) (transpose successor)) (disjunction successor (transpose successor)))\n)",
            "task_solution": "(chain (recursive successor (disjunction zero (chain successor successor)) (transpose successor)) (disjunction successor (transpose successor)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.18380787398200482,
            "num_unique_values": 76,
            "num_values_explored": 171,
            "solution": "(recursive (disjunction successor (recursive zero (recursive successor equal successor) successor)) (chain successor successor) successor)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (disjunction successor (recursive zero (recursive successor equal successor) successor)) (chain successor successor) successor)\n)",
            "task_solution": "(recursive (disjunction successor (recursive zero (recursive successor equal successor) successor)) (chain successor successor) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.18603338598040864,
            "num_unique_values": 79,
            "num_values_explored": 163,
            "solution": "(recursive (chain (disjunction equal successor) (transpose successor)) (chain successor successor) (recursive successor successor equal))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (chain (disjunction successor equal) (transpose successor)) (chain successor successor) (recursive successor successor equal))\n)",
            "task_solution": "(recursive (chain (disjunction successor equal) (transpose successor)) (chain successor successor) (recursive successor successor equal))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.21373604296240956,
            "num_unique_values": 108,
            "num_values_explored": 207,
            "solution": "(disjunction successor (recursive (chain successor (recursive zero (transpose successor) (transpose successor))) (transpose successor) successor))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [False,  True, False, False, False,  True, False,  True, False,\n        False],\n       [ True, False, False, False,  True, False, False, False,  True,\n        False],\n       [False, False, False,  True, False, False, False,  True, False,\n         True],\n       [False, False,  True, False, False, False,  True, False, False,\n        False]])],\n    solution=(disjunction successor (recursive (chain successor (recursive zero (transpose successor) (transpose successor))) (transpose successor) successor))\n)",
            "task_solution": "(disjunction successor (recursive (chain successor (recursive zero (transpose successor) (transpose successor))) (transpose successor) successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.14523463702062145,
            "num_unique_values": 67,
            "num_values_explored": 155,
            "solution": "(disjunction zero (chain (transpose (chain successor successor)) (recursive successor (chain zero successor) (transpose successor))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction zero (chain (transpose (chain successor successor)) (recursive successor (chain zero successor) (transpose successor))))\n)",
            "task_solution": "(disjunction zero (chain (transpose (chain successor successor)) (recursive successor (chain zero successor) (transpose successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.2461466119857505,
            "num_unique_values": 117,
            "num_values_explored": 233,
            "solution": "(recursive equal successor (recursive (chain successor (chain successor (chain successor successor))) zero (transpose successor)))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False, False,  True, False, False, False,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False,  True, False,\n        False],\n       [ True, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (recursive (chain successor (chain successor (chain successor successor))) zero (transpose successor)))\n)",
            "task_solution": "(recursive equal successor (recursive (chain successor (chain successor (chain successor successor))) zero (transpose successor)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.26777715800562873,
            "num_unique_values": 136,
            "num_values_explored": 258,
            "solution": "(chain successor (recursive equal (recursive zero (transpose successor) (transpose successor)) (disjunction (chain successor successor) (transpose (recursive successor successor equal)))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor equal (recursive (transpose zero) (recursive equal equal successor) (transpose (chain successor successor))))\n)",
            "task_solution": "(recursive successor equal (recursive (transpose zero) (recursive equal equal successor) (transpose (chain successor successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.6273650680086575,
            "num_unique_values": 267,
            "num_values_explored": 622,
            "solution": "(disjunction successor (transpose (chain successor (chain (transpose (chain successor (chain (disjunction equal successor) (recursive zero (transpose successor) (transpose successor))))) successor))))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (transpose (disjunction successor equal)) (chain successor (recursive zero (transpose successor) (transpose successor))))\n)",
            "task_solution": "(recursive successor (transpose (disjunction successor equal)) (chain successor (recursive zero (transpose successor) (transpose successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.2545074529480189,
            "num_unique_values": 126,
            "num_values_explored": 249,
            "solution": "(transpose (chain (recursive (disjunction equal (chain successor successor)) (transpose (chain successor successor)) zero) successor))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False]])],\n    solution=(transpose (chain (recursive (disjunction equal (chain successor successor)) (transpose (chain successor successor)) zero) successor))\n)",
            "task_solution": "(transpose (chain (recursive (disjunction equal (chain successor successor)) (transpose (chain successor successor)) zero) successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.211422735999804,
            "num_unique_values": 97,
            "num_values_explored": 214,
            "solution": "(chain (recursive (transpose successor) (recursive (transpose successor) successor (transpose successor)) (disjunction zero successor)) successor)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(chain (recursive (transpose successor) (recursive (transpose successor) successor (transpose successor)) (disjunction zero successor)) successor)\n)",
            "task_solution": "(chain (recursive (transpose successor) (recursive (transpose successor) successor (transpose successor)) (disjunction zero successor)) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.14729276398429647,
            "num_unique_values": 68,
            "num_values_explored": 146,
            "solution": "(disjunction (recursive (transpose successor) successor (disjunction equal (chain successor successor))) (chain successor (chain successor successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (chain successor (chain successor successor)) (recursive (transpose successor) successor (disjunction equal (chain successor successor))))\n)",
            "task_solution": "(disjunction (chain successor (chain successor successor)) (recursive (transpose successor) successor (disjunction equal (chain successor successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.25323295703856274,
            "num_unique_values": 126,
            "num_values_explored": 239,
            "solution": "(transpose (chain (recursive equal (chain successor successor) (chain successor (disjunction equal (chain successor successor)))) successor))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False]])],\n    solution=(transpose (chain (recursive equal (chain successor successor) (chain successor (disjunction equal (chain successor successor)))) successor))\n)",
            "task_solution": "(transpose (chain (recursive equal (chain successor successor) (chain successor (disjunction equal (chain successor successor)))) successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.20842169201932847,
            "num_unique_values": 106,
            "num_values_explored": 196,
            "solution": "(disjunction (transpose successor) (recursive (chain successor (chain successor successor)) (chain (chain successor successor) successor) successor))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False, False, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False, False, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False, False, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False, False, False,  True, False,\n        False],\n       [False, False, False, False,  True, False, False, False,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (recursive (chain successor (chain successor successor)) (chain successor (chain successor successor)) successor))\n)",
            "task_solution": "(disjunction (transpose successor) (recursive (chain successor (chain successor successor)) (chain successor (chain successor successor)) successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3352118619950488,
            "num_unique_values": 157,
            "num_values_explored": 313,
            "solution": "(recursive (transpose (chain (disjunction zero successor) (disjunction successor (transpose successor)))) (chain (transpose successor) zero) (transpose (chain successor successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(chain (disjunction successor (transpose successor)) (disjunction zero (disjunction (transpose successor) (chain zero (chain successor successor)))))\n)",
            "task_solution": "(chain (disjunction successor (transpose successor)) (disjunction zero (disjunction (transpose successor) (chain zero (chain successor successor)))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.22108913504052907,
            "num_unique_values": 115,
            "num_values_explored": 218,
            "solution": "(disjunction zero (chain (disjunction (chain zero successor) (recursive (chain successor successor) (transpose successor) (chain successor successor))) successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False]])],\n    solution=(disjunction zero (chain (recursive (chain (disjunction zero successor) successor) (transpose successor) (chain successor successor)) successor))\n)",
            "task_solution": "(disjunction zero (chain (recursive (chain (disjunction zero successor) successor) (transpose successor) (chain successor successor)) successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.2710367399849929,
            "num_unique_values": 138,
            "num_values_explored": 265,
            "solution": "(chain (disjunction equal (chain (recursive successor successor (recursive successor successor equal)) (recursive zero zero (transpose successor)))) (disjunction zero successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False,  True, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False,  True, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False,  True, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (recursive (transpose (chain zero (chain successor successor))) (disjunction successor equal) (transpose successor)))\n)",
            "task_solution": "(recursive successor successor (recursive (transpose (chain zero (chain successor successor))) (disjunction successor equal) (transpose successor)))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.20945109496824443,
            "num_unique_values": 107,
            "num_values_explored": 211,
            "solution": "(disjunction successor (recursive (transpose successor) (transpose (chain successor successor)) (disjunction (chain zero successor) (transpose successor))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True,  True,  True, False,  True, False,\n        False],\n       [False,  True, False,  True,  True,  True,  True, False,  True,\n        False],\n       [ True, False,  True, False,  True,  True,  True,  True, False,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(disjunction successor (recursive (transpose successor) (transpose (chain successor successor)) (disjunction (transpose successor) (chain zero successor))))\n)",
            "task_solution": "(disjunction successor (recursive (transpose successor) (transpose (chain successor successor)) (disjunction (transpose successor) (chain zero successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3204182420158759,
            "num_unique_values": 156,
            "num_values_explored": 305,
            "solution": "(recursive (recursive (disjunction successor (transpose (chain successor (chain successor successor)))) successor equal) (transpose (disjunction zero successor)) zero)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False, False, False,  True,  True,  True, False,  True,\n         True],\n       [ True, False, False, False, False,  True,  True, False, False,\n         True],\n       [ True, False, False, False, False, False,  True, False, False,\n        False]])],\n    solution=(recursive (recursive (disjunction successor (transpose (chain successor (chain successor successor)))) successor equal) (transpose successor) zero)\n)",
            "task_solution": "(recursive (recursive (disjunction successor (transpose (chain successor (chain successor successor)))) successor equal) (transpose successor) zero)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.24685230100294575,
            "num_unique_values": 124,
            "num_values_explored": 228,
            "solution": "(recursive (chain successor successor) (chain (recursive successor equal (chain successor successor)) zero) (recursive (transpose successor) (transpose successor) successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive successor (chain (recursive equal (transpose successor) successor) zero) (transpose (chain successor successor))))\n)",
            "task_solution": "(chain successor (recursive successor (chain (recursive equal (transpose successor) successor) zero) (transpose (chain successor successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3688240179908462,
            "num_unique_values": 170,
            "num_values_explored": 340,
            "solution": "(transpose (chain (recursive successor zero (transpose successor)) (chain (disjunction successor (transpose (chain successor successor))) successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False, False,  True, False, False, False,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n        False],\n       [ True, False, False, False,  True, False, False,  True, False,\n        False],\n       [ True, False, False, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False, False, False, False,  True, False, False,\n        False]])],\n    solution=(transpose (chain (recursive successor zero (transpose successor)) (chain (disjunction successor (transpose (chain successor successor))) successor)))\n)",
            "task_solution": "(transpose (chain (recursive successor zero (transpose successor)) (chain (disjunction successor (transpose (chain successor successor))) successor)))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.32064977404661477,
            "num_unique_values": 156,
            "num_values_explored": 275,
            "solution": "(recursive (transpose (disjunction equal (chain successor (disjunction successor (transpose (chain successor successor)))))) zero (recursive successor equal successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True, False,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True, False,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True, False,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True]])],\n    solution=(transpose (disjunction equal (chain successor (recursive (disjunction successor (transpose (chain successor successor))) (transpose successor) zero))))\n)",
            "task_solution": "(transpose (disjunction equal (chain successor (recursive (disjunction successor (transpose (chain successor successor))) (transpose successor) zero))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.39930963900405914,
            "num_unique_values": 192,
            "num_values_explored": 356,
            "solution": "(disjunction successor (transpose (disjunction zero (chain zero (recursive successor successor (transpose (recursive successor successor equal)))))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [ True, False, False, False, False,  True, False, False, False,\n        False],\n       [ True, False, False, False, False, False,  True, False, False,\n        False],\n       [ True, False, False, False, False, False, False,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n         True],\n       [ True, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction zero (disjunction successor (transpose (chain zero (recursive successor successor (recursive (transpose successor) equal successor))))))\n)",
            "task_solution": "(disjunction zero (disjunction successor (transpose (chain zero (recursive successor successor (recursive (transpose successor) equal successor))))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 9.291595414979383,
            "num_unique_values": 1062,
            "num_values_explored": 9263,
            "solution": "(disjunction successor (disjunction equal (chain (recursive (recursive successor successor (recursive successor equal successor)) (transpose (disjunction zero successor)) successor) successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n         True]])],\n    solution=(recursive (recursive equal successor equal) (transpose successor) (chain (transpose successor) (chain successor (chain successor successor))))\n)",
            "task_solution": "(recursive (recursive equal successor equal) (transpose successor) (chain (transpose successor) (chain successor (chain successor successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.2637004950083792,
            "num_unique_values": 126,
            "num_values_explored": 257,
            "solution": "(transpose (chain (recursive equal (disjunction equal successor) (chain successor (chain successor successor))) (disjunction zero successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True, False,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(transpose (chain (recursive equal (disjunction successor equal) (chain successor (chain successor successor))) (disjunction zero successor)))\n)",
            "task_solution": "(transpose (chain (recursive equal (disjunction successor equal) (chain successor (chain successor successor))) (disjunction zero successor)))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.5506273509818129,
            "num_unique_values": 268,
            "num_values_explored": 573,
            "solution": "(disjunction equal (recursive successor successor (recursive (transpose successor) (recursive successor (chain successor successor) successor) successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n         True],\n       [False, False, False, False, False,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (recursive successor successor (recursive (transpose successor) (recursive successor (chain successor successor) successor) successor)))\n)",
            "task_solution": "(disjunction equal (recursive successor successor (recursive (transpose successor) (recursive successor (chain successor successor) successor) successor)))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.46957282099174336,
            "num_unique_values": 231,
            "num_values_explored": 441,
            "solution": "(disjunction (recursive equal equal (recursive successor equal successor)) (recursive equal successor (transpose (chain successor (chain successor successor)))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (recursive equal successor (transpose (chain successor (chain successor successor)))) equal (recursive successor equal successor))\n)",
            "task_solution": "(recursive (recursive equal successor (transpose (chain successor (chain successor successor)))) equal (recursive successor equal successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.17664759699255228,
            "num_unique_values": 77,
            "num_values_explored": 168,
            "solution": "(recursive (transpose successor) (recursive successor equal successor) (disjunction (chain zero successor) (transpose (chain successor successor))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (recursive successor equal successor) (disjunction (chain zero successor) (transpose (chain successor successor))))\n)",
            "task_solution": "(recursive (transpose successor) (recursive successor equal successor) (disjunction (chain zero successor) (transpose (chain successor successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.14810523099731654,
            "num_unique_values": 66,
            "num_values_explored": 148,
            "solution": "(disjunction equal (chain (recursive (disjunction zero successor) (transpose successor) zero) (disjunction equal (chain successor successor))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True, False,  True, False,  True,  True, False,  True, False,\n        False],\n       [ True, False,  True, False, False,  True,  True, False,  True,\n        False],\n       [ True, False,  True, False, False, False,  True,  True, False,\n         True],\n       [ True, False,  True, False, False, False, False,  True,  True,\n        False],\n       [ True, False,  True, False, False, False, False, False,  True,\n         True],\n       [ True, False,  True, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain (recursive (disjunction zero successor) (transpose successor) zero) (disjunction equal (chain successor successor))))\n)",
            "task_solution": "(disjunction equal (chain (recursive (disjunction zero successor) (transpose successor) zero) (disjunction equal (chain successor successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.24466604902409017,
            "num_unique_values": 116,
            "num_values_explored": 238,
            "solution": "(recursive (recursive equal (transpose successor) successor) successor (recursive zero (transpose successor) (transpose (chain successor successor))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False,  True, False, False,\n         True],\n       [ True,  True, False,  True, False, False,  True, False, False,\n         True],\n       [ True, False,  True,  True, False, False,  True, False, False,\n         True],\n       [ True,  True, False,  True, False, False,  True, False, False,\n         True],\n       [ True, False,  True,  True,  True, False,  True, False, False,\n         True],\n       [ True,  True, False,  True, False,  True,  True, False, False,\n         True],\n       [ True, False,  True,  True,  True, False,  True, False, False,\n         True],\n       [ True,  True, False,  True, False,  True,  True,  True, False,\n         True],\n       [ True, False,  True,  True,  True, False,  True, False,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(recursive (recursive equal (transpose successor) successor) successor (recursive zero (transpose successor) (transpose (chain successor successor))))\n)",
            "task_solution": "(recursive (recursive equal (transpose successor) successor) successor (recursive zero (transpose successor) (transpose (chain successor successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.2052963370224461,
            "num_unique_values": 96,
            "num_values_explored": 210,
            "solution": "(chain (recursive (transpose successor) (chain successor successor) (chain (transpose successor) (recursive successor successor equal))) successor)",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (recursive (transpose successor) (chain successor successor) (chain (transpose successor) (recursive successor successor equal))) successor)\n)",
            "task_solution": "(chain (recursive (transpose successor) (chain successor successor) (chain (transpose successor) (recursive successor successor equal))) successor)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3480333119514398,
            "num_unique_values": 158,
            "num_values_explored": 322,
            "solution": "(recursive (chain (disjunction zero successor) (chain successor (chain (recursive equal (transpose successor) zero) successor))) zero (transpose successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n        False],\n       [False,  True, False, False, False, False,  True, False, False,\n        False],\n       [False,  True, False, False, False, False, False,  True, False,\n        False],\n       [False,  True, False, False, False, False, False, False,  True,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n         True],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (chain successor (chain (recursive equal (transpose successor) zero) successor))) zero (transpose successor))\n)",
            "task_solution": "(recursive (chain successor (chain successor (chain (recursive equal (transpose successor) zero) successor))) zero (transpose successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.685289241024293,
            "num_unique_values": 283,
            "num_values_explored": 683,
            "solution": "(recursive equal (recursive (chain (transpose successor) successor) successor (chain successor (chain successor successor))) (transpose (chain successor (disjunction equal successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive (chain (transpose successor) successor) successor (chain successor (chain successor successor))) (transpose successor))\n)",
            "task_solution": "(recursive equal (recursive (chain (transpose successor) successor) successor (chain successor (chain successor successor))) (transpose successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3193991610314697,
            "num_unique_values": 147,
            "num_values_explored": 318,
            "solution": "(disjunction successor (recursive equal (transpose (chain successor (chain successor successor))) (recursive equal (transpose successor) successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True,  True,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True,  True,  True, False,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(disjunction successor (recursive equal (transpose (chain successor (chain successor successor))) (recursive equal (transpose successor) successor)))\n)",
            "task_solution": "(disjunction successor (recursive equal (transpose (chain successor (chain successor successor))) (recursive equal (transpose successor) successor)))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 51.65230532299029,
            "num_unique_values": 2909,
            "num_values_explored": 50003,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (recursive successor successor equal) (recursive successor (chain successor (chain successor successor)) successor))\n)",
            "task_solution": "(recursive (transpose successor) (recursive successor successor equal) (recursive successor (chain successor (chain successor successor)) successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.31306524598039687,
            "num_unique_values": 140,
            "num_values_explored": 291,
            "solution": "(chain (disjunction zero successor) (disjunction equal (chain successor (chain (disjunction successor equal) (chain successor successor)))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True, False, False,  True,  True, False, False,\n        False],\n       [False, False, False,  True, False, False,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False, False,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction zero successor) (disjunction equal (chain successor (chain successor (chain successor (disjunction successor equal))))))\n)",
            "task_solution": "(chain (disjunction zero successor) (disjunction equal (chain successor (chain successor (chain successor (disjunction successor equal))))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.299323721032124,
            "num_unique_values": 147,
            "num_values_explored": 273,
            "solution": "(disjunction zero (recursive successor (disjunction (chain zero successor) (recursive (chain successor successor) equal (chain successor successor))) equal))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction zero (recursive successor (recursive (chain (disjunction zero successor) successor) equal (chain successor successor)) equal))\n)",
            "task_solution": "(disjunction zero (recursive successor (recursive (chain (disjunction zero successor) successor) equal (chain successor successor)) equal))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.21125873998971656,
            "num_unique_values": 103,
            "num_values_explored": 207,
            "solution": "(chain (transpose (disjunction equal successor)) (recursive (chain zero successor) (transpose successor) (transpose (chain successor successor))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (transpose (disjunction zero successor)) (chain zero successor)) (transpose successor) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (chain (transpose (disjunction zero successor)) (chain zero successor)) (transpose successor) (transpose (chain successor successor)))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.8267765390337445,
            "num_unique_values": 296,
            "num_values_explored": 864,
            "solution": "(chain successor (chain (transpose successor) (chain (recursive equal (disjunction successor equal) (chain successor (chain successor successor))) successor)))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False,  True, False,  True,  True, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive equal (chain successor (transpose (disjunction successor equal))) (chain successor (chain successor successor))) successor)\n)",
            "task_solution": "(chain (recursive equal (chain successor (transpose (disjunction successor equal))) (chain successor (chain successor successor))) successor)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.29251147399190813,
            "num_unique_values": 126,
            "num_values_explored": 274,
            "solution": "(transpose (disjunction (chain zero (recursive equal successor (transpose successor))) (recursive (chain successor successor) equal successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [ True, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [ True, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(transpose (disjunction (recursive (chain successor successor) equal successor) (chain zero (recursive equal successor (transpose successor)))))\n)",
            "task_solution": "(transpose (disjunction (recursive (chain successor successor) equal successor) (chain zero (recursive equal successor (transpose successor)))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.2290562160196714,
            "num_unique_values": 108,
            "num_values_explored": 216,
            "solution": "(disjunction (recursive successor successor (recursive successor zero (transpose successor))) (recursive equal (recursive equal zero (transpose successor)) (chain successor successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True,  True, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True,  True, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True,  True, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(recursive (disjunction successor (recursive equal (recursive equal zero (transpose successor)) (chain successor successor))) successor zero)\n)",
            "task_solution": "(recursive (disjunction successor (recursive equal (recursive equal zero (transpose successor)) (chain successor successor))) successor zero)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 59.36230405198876,
            "num_unique_values": 3345,
            "num_values_explored": 50026,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive equal (recursive (disjunction successor equal) (transpose successor) zero) (transpose (disjunction zero (chain successor successor))))\n)",
            "task_solution": "(recursive equal (recursive (disjunction successor equal) (transpose successor) zero) (transpose (disjunction zero (chain successor successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.5536265190457925,
            "num_unique_values": 220,
            "num_values_explored": 550,
            "solution": "(chain (disjunction successor (recursive equal (transpose successor) (chain (disjunction zero successor) successor))) (disjunction zero successor))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True,  True, False, False, False,\n        False],\n       [False, False,  True, False, False,  True,  True, False, False,\n        False],\n       [ True,  True, False,  True, False, False,  True,  True, False,\n        False],\n       [ True,  True, False, False,  True, False, False,  True,  True,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n         True],\n       [ True,  True, False,  True, False, False,  True, False, False,\n         True],\n       [ True,  True, False, False,  True, False, False,  True, False,\n        False]])],\n    solution=(chain (disjunction successor (recursive equal (transpose successor) (chain (disjunction zero successor) successor))) (disjunction zero successor))\n)",
            "task_solution": "(chain (disjunction successor (recursive equal (transpose successor) (chain (disjunction zero successor) successor))) (disjunction zero successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.39351331494981423,
            "num_unique_values": 166,
            "num_values_explored": 380,
            "solution": "(transpose (chain (disjunction successor (transpose (chain successor (disjunction equal successor)))) (disjunction zero (chain successor successor))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True, False,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True, False,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True, False,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n         True]])],\n    solution=(transpose (chain (disjunction successor (transpose (chain successor (disjunction successor equal)))) (disjunction zero (chain successor successor))))\n)",
            "task_solution": "(transpose (chain (disjunction successor (transpose (chain successor (disjunction successor equal)))) (disjunction zero (chain successor successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3102955700014718,
            "num_unique_values": 158,
            "num_values_explored": 289,
            "solution": "(recursive successor (recursive (chain successor (transpose successor)) (transpose (chain successor successor)) (transpose (chain successor (chain successor successor)))) successor)",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (recursive equal (transpose (chain successor successor)) (transpose (chain successor (chain successor successor)))) successor)\n)",
            "task_solution": "(recursive successor (recursive equal (transpose (chain successor successor)) (transpose (chain successor (chain successor successor)))) successor)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.4524848440196365,
            "num_unique_values": 239,
            "num_values_explored": 439,
            "solution": "(recursive (recursive equal successor equal) successor (recursive (transpose successor) successor (transpose (chain successor (chain successor successor)))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True, False,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (transpose (disjunction equal (recursive successor (transpose successor) (chain successor (chain successor successor))))))\n)",
            "task_solution": "(recursive equal successor (transpose (disjunction equal (recursive successor (transpose successor) (chain successor (chain successor successor))))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.18456139299087226,
            "num_unique_values": 80,
            "num_values_explored": 162,
            "solution": "(recursive (disjunction (transpose successor) (chain (recursive equal successor (chain successor successor)) successor)) zero (transpose successor))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (disjunction (transpose successor) (chain (recursive equal successor (chain successor successor)) successor)) zero (transpose successor))\n)",
            "task_solution": "(recursive (disjunction (transpose successor) (chain (recursive equal successor (chain successor successor)) successor)) zero (transpose successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.25871544901747257,
            "num_unique_values": 119,
            "num_values_explored": 238,
            "solution": "(recursive (recursive (recursive successor zero (transpose successor)) (transpose successor) successor) (chain successor successor) (recursive successor equal (chain successor successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (recursive (recursive successor zero (transpose successor)) (transpose successor) successor) (recursive successor successor equal) successor)\n)",
            "task_solution": "(recursive (recursive (recursive successor zero (transpose successor)) (transpose successor) successor) (recursive successor successor equal) successor)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.22267983300844207,
            "num_unique_values": 96,
            "num_values_explored": 204,
            "solution": "(chain (disjunction (chain successor successor) (recursive zero zero (transpose successor))) (chain successor (chain successor successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction (chain successor successor) (recursive zero zero (transpose successor))) (chain successor (chain successor successor)))\n)",
            "task_solution": "(chain (disjunction (chain successor successor) (recursive zero zero (transpose successor))) (chain successor (chain successor successor)))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.18171234498731792,
            "num_unique_values": 76,
            "num_values_explored": 163,
            "solution": "(recursive (chain (recursive successor equal successor) successor) (chain (transpose successor) zero) (recursive successor equal successor))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (recursive successor equal successor) successor) (transpose (chain zero successor)) (recursive successor equal successor))\n)",
            "task_solution": "(recursive (chain (recursive successor equal successor) successor) (transpose (chain zero successor)) (recursive successor equal successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.2427767629851587,
            "num_unique_values": 116,
            "num_values_explored": 215,
            "solution": "(recursive (disjunction equal (chain (transpose (chain successor successor)) (recursive successor (recursive successor (transpose successor) successor) (transpose successor)))) equal successor)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (transpose (disjunction equal (recursive successor (recursive successor (transpose successor) successor) (transpose successor)))) equal successor)\n)",
            "task_solution": "(recursive (transpose (disjunction equal (recursive successor (recursive successor (transpose successor) successor) (transpose successor)))) equal successor)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.37367732502752915,
            "num_unique_values": 136,
            "num_values_explored": 327,
            "solution": "(chain successor (chain (recursive successor (chain successor successor) successor) (disjunction successor (transpose (disjunction successor equal)))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain (recursive successor (chain successor successor) successor) (disjunction successor (transpose (disjunction successor equal)))))\n)",
            "task_solution": "(chain successor (chain (recursive successor (chain successor successor) successor) (disjunction successor (transpose (disjunction successor equal)))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.2740754879778251,
            "num_unique_values": 120,
            "num_values_explored": 252,
            "solution": "(recursive (chain (transpose successor) (chain successor (chain successor (recursive equal (transpose successor) zero)))) equal (transpose (chain zero successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False, False, False,  True, False, False, False,\n        False],\n       [ True,  True, False, False, False, False,  True, False, False,\n        False],\n       [ True,  True, False, False, False, False, False,  True, False,\n        False],\n       [ True,  True, False, False, False, False, False, False,  True,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (transpose successor) (chain (recursive successor successor (recursive successor zero (transpose successor))) (disjunction zero successor)))\n)",
            "task_solution": "(chain (transpose successor) (chain (recursive successor successor (recursive successor zero (transpose successor))) (disjunction zero successor)))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.31802017596783116,
            "num_unique_values": 157,
            "num_values_explored": 307,
            "solution": "(recursive (disjunction equal (transpose successor)) (chain successor (chain successor (chain successor (chain successor successor)))) equal)",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False,  True,  True, False, False, False,\n        False],\n       [ True,  True, False, False, False,  True,  True, False, False,\n        False],\n       [False,  True,  True, False, False, False,  True,  True, False,\n        False],\n       [False, False,  True,  True, False, False, False,  True,  True,\n        False],\n       [False, False, False,  True,  True, False, False, False,  True,\n         True],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(recursive (transpose (disjunction successor equal)) (chain successor (chain successor (chain successor (chain successor successor)))) equal)\n)",
            "task_solution": "(recursive (transpose (disjunction successor equal)) (chain successor (chain successor (chain successor (chain successor successor)))) equal)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.21562241698848084,
            "num_unique_values": 97,
            "num_values_explored": 198,
            "solution": "(chain (recursive (disjunction (chain zero successor) (transpose (recursive successor successor (transpose successor)))) (chain successor successor) (disjunction successor equal)) successor)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(chain (recursive (recursive (transpose successor) (transpose successor) successor) (chain successor successor) (disjunction successor equal)) successor)\n)",
            "task_solution": "(chain (recursive (recursive (transpose successor) (transpose successor) successor) (chain successor successor) (disjunction successor equal)) successor)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 54.71393601602176,
            "num_unique_values": 2517,
            "num_values_explored": 50001,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction equal (recursive successor successor (recursive successor (recursive (chain successor successor) equal successor) successor))))\n)",
            "task_solution": "(transpose (disjunction equal (recursive successor successor (recursive successor (recursive (chain successor successor) equal successor) successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.2876558930147439,
            "num_unique_values": 146,
            "num_values_explored": 278,
            "solution": "(disjunction successor (transpose (disjunction equal (recursive successor (chain successor (chain successor successor)) (chain successor (disjunction equal successor))))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(chain (disjunction successor equal) (transpose (disjunction equal (recursive successor (chain successor (chain successor successor)) successor))))\n)",
            "task_solution": "(chain (disjunction successor equal) (transpose (disjunction equal (recursive successor (chain successor (chain successor successor)) successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 60.28819970000768,
            "num_unique_values": 3442,
            "num_values_explored": 50019,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (chain (recursive (transpose successor) successor (recursive successor successor equal)) successor) (chain successor successor) successor)\n)",
            "task_solution": "(recursive (chain (recursive (transpose successor) successor (recursive successor successor equal)) successor) (chain successor successor) successor)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.215310605999548,
            "num_unique_values": 115,
            "num_values_explored": 219,
            "solution": "(disjunction (chain successor (transpose successor)) (chain (recursive zero (transpose successor) (transpose (chain successor successor))) (recursive successor successor equal)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (transpose successor)) (recursive zero (transpose successor) (transpose (chain successor successor))) (transpose successor))\n)",
            "task_solution": "(recursive (chain successor (transpose successor)) (recursive zero (transpose successor) (transpose (chain successor successor))) (transpose successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.23435496998718008,
            "num_unique_values": 106,
            "num_values_explored": 209,
            "solution": "(disjunction (recursive successor (recursive successor successor (transpose successor)) successor) (transpose (chain zero (chain successor successor))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (disjunction successor (transpose (chain zero (chain successor successor)))) (recursive successor successor (transpose successor)) successor)\n)",
            "task_solution": "(recursive (disjunction successor (transpose (chain zero (chain successor successor)))) (recursive successor successor (transpose successor)) successor)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.17829574103234336,
            "num_unique_values": 76,
            "num_values_explored": 167,
            "solution": "(recursive (disjunction successor (chain zero (recursive equal successor (transpose successor)))) (transpose (chain successor successor)) successor)",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True, False, False,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n        False],\n       [False,  True, False,  True,  True,  True, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [ True, False,  True,  True,  True, False,  True, False, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False]])],\n    solution=(recursive (disjunction successor (chain zero (recursive equal successor (transpose successor)))) (transpose (chain successor successor)) successor)\n)",
            "task_solution": "(recursive (disjunction successor (chain zero (recursive equal successor (transpose successor)))) (transpose (chain successor successor)) successor)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 10.582400939019863,
            "num_unique_values": 1345,
            "num_values_explored": 10887,
            "solution": "(recursive (recursive successor equal successor) (recursive (transpose zero) (transpose (chain successor (chain successor successor))) (transpose successor)) (recursive successor equal successor))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive successor (recursive equal (chain (recursive equal (transpose successor) (chain successor successor)) zero) (transpose successor)) successor)\n)",
            "task_solution": "(recursive successor (recursive equal (chain (recursive equal (transpose successor) (chain successor successor)) zero) (transpose successor)) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 52.618569055979606,
            "num_unique_values": 3550,
            "num_values_explored": 50039,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True,  True, False,  True, False,\n        False],\n       [ True, False,  True,  True, False,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True]])],\n    solution=(recursive equal (transpose successor) (recursive (chain successor successor) equal (chain (disjunction zero (chain successor successor)) successor)))\n)",
            "task_solution": "(recursive equal (transpose successor) (recursive (chain successor successor) equal (chain (disjunction zero (chain successor successor)) successor)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.21233919501537457,
            "num_unique_values": 106,
            "num_values_explored": 211,
            "solution": "(disjunction (transpose (chain successor successor)) (recursive successor (recursive (chain successor successor) successor (chain successor successor)) successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False, False,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(disjunction (transpose (chain successor successor)) (recursive successor (recursive (chain successor successor) successor (chain successor successor)) successor))\n)",
            "task_solution": "(disjunction (transpose (chain successor successor)) (recursive successor (recursive (chain successor successor) successor (chain successor successor)) successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.2865997700137086,
            "num_unique_values": 140,
            "num_values_explored": 258,
            "solution": "(chain (disjunction (recursive successor (transpose successor) successor) (recursive equal zero (transpose (chain successor successor)))) (transpose successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True,  True,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n        False]])],\n    solution=(chain (disjunction (recursive successor (transpose successor) successor) (recursive equal zero (transpose (chain successor successor)))) (transpose successor))\n)",
            "task_solution": "(chain (disjunction (recursive successor (transpose successor) successor) (recursive equal zero (transpose (chain successor successor)))) (transpose successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.24753064900869504,
            "num_unique_values": 116,
            "num_values_explored": 228,
            "solution": "(recursive (disjunction successor (chain (transpose successor) zero)) (chain successor successor) (chain successor (chain successor (transpose successor))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (disjunction successor (transpose (chain zero successor))) (chain successor successor) (chain successor (chain successor (transpose successor))))\n)",
            "task_solution": "(recursive (disjunction successor (transpose (chain zero successor))) (chain successor successor) (chain successor (chain successor (transpose successor))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.5622739410027862,
            "num_unique_values": 262,
            "num_values_explored": 581,
            "solution": "(chain (recursive successor successor (disjunction successor (disjunction (transpose successor) (chain successor successor)))) (transpose (chain successor (chain successor successor))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor successor (disjunction (transpose successor) (chain successor successor))) (transpose (chain successor (chain successor successor))))\n)",
            "task_solution": "(chain (recursive successor successor (disjunction (transpose successor) (chain successor successor))) (transpose (chain successor (chain successor successor))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 52.23541739099892,
            "num_unique_values": 2522,
            "num_values_explored": 50074,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (recursive successor (disjunction (transpose successor) (chain successor (chain successor (disjunction successor equal)))) successor))\n)",
            "task_solution": "(recursive successor successor (recursive successor (disjunction (transpose successor) (chain successor (chain successor (disjunction successor equal)))) successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.30502399697434157,
            "num_unique_values": 145,
            "num_values_explored": 276,
            "solution": "(chain (disjunction (recursive equal equal successor) (chain successor (chain successor successor))) (disjunction equal (disjunction (transpose successor) (chain successor successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (disjunction (recursive equal equal successor) (chain successor (chain successor successor))) (disjunction equal (chain successor successor)))\n)",
            "task_solution": "(chain (disjunction (recursive equal equal successor) (chain successor (chain successor successor))) (disjunction equal (chain successor successor)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.38688568194629624,
            "num_unique_values": 176,
            "num_values_explored": 365,
            "solution": "(chain successor (disjunction equal (chain successor (disjunction equal (disjunction successor (recursive (chain successor successor) (transpose successor) successor))))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True, False,  True,  True,  True,  True,  True, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain (disjunction equal (chain successor successor)) (disjunction equal (recursive successor equal (chain successor successor)))))\n)",
            "task_solution": "(chain successor (chain (disjunction equal (chain successor successor)) (disjunction equal (recursive successor equal (chain successor successor)))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.22297218802850693,
            "num_unique_values": 106,
            "num_values_explored": 211,
            "solution": "(disjunction (recursive (transpose successor) successor (transpose successor)) (chain (disjunction zero (recursive (chain zero successor) (transpose successor) equal)) successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True, False, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False, False, False,  True, False,  True,\n        False],\n       [False, False,  True, False, False, False, False,  True, False,\n         True],\n       [False, False,  True, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (recursive (transpose successor) successor (transpose successor)) (recursive (chain zero (chain successor successor)) (transpose successor) equal))\n)",
            "task_solution": "(disjunction (recursive (transpose successor) successor (transpose successor)) (recursive (chain zero (chain successor successor)) (transpose successor) equal))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.24746126600075513,
            "num_unique_values": 118,
            "num_values_explored": 237,
            "solution": "(recursive (recursive equal (transpose (chain successor successor)) (transpose successor)) (transpose (chain successor successor)) (chain zero successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (recursive equal (transpose (chain successor successor)) (transpose successor)) (transpose (chain successor successor)) (chain zero successor))\n)",
            "task_solution": "(recursive (recursive equal (transpose (chain successor successor)) (transpose successor)) (transpose (chain successor successor)) (chain zero successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 1.6216387039748952,
            "num_unique_values": 516,
            "num_values_explored": 1829,
            "solution": "(recursive equal (recursive successor (chain successor (chain successor (chain successor (chain successor (transpose (disjunction equal successor)))))) (disjunction successor equal)) successor)",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive successor (chain successor (chain successor successor)) (disjunction successor (transpose (disjunction successor equal)))) successor)\n)",
            "task_solution": "(recursive equal (recursive successor (chain successor (chain successor successor)) (disjunction successor (transpose (disjunction successor equal)))) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.2718212729669176,
            "num_unique_values": 140,
            "num_values_explored": 282,
            "solution": "(chain (recursive (chain successor successor) (transpose successor) (recursive zero (transpose successor) (transpose (chain successor successor)))) successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False,  True, False, False,  True,  True,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n         True],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False]])],\n    solution=(chain (recursive (chain successor successor) (transpose successor) (recursive zero (transpose successor) (transpose (chain successor successor)))) successor)\n)",
            "task_solution": "(chain (recursive (chain successor successor) (transpose successor) (recursive zero (transpose successor) (transpose (chain successor successor)))) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.46103305398719385,
            "num_unique_values": 196,
            "num_values_explored": 422,
            "solution": "(recursive (recursive successor (recursive equal (transpose successor) successor) (disjunction equal (chain zero successor))) (recursive successor successor (transpose successor)) successor)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (recursive (disjunction zero successor) (transpose (chain successor successor)) equal) (recursive successor successor (transpose successor)) successor)\n)",
            "task_solution": "(recursive (recursive (disjunction zero successor) (transpose (chain successor successor)) equal) (recursive successor successor (transpose successor)) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.28752188198268414,
            "num_unique_values": 126,
            "num_values_explored": 268,
            "solution": "(transpose (disjunction (recursive successor successor equal) (disjunction (chain (transpose successor) successor) (recursive successor (transpose successor) (chain successor successor)))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [ True,  True, False,  True, False, False,  True, False, False,\n         True],\n       [ True,  True,  True, False,  True, False, False,  True, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False,  True,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n         True],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(transpose (disjunction (recursive successor (transpose successor) (chain successor successor)) (recursive (chain (transpose successor) successor) successor equal)))\n)",
            "task_solution": "(transpose (disjunction (recursive successor (transpose successor) (chain successor successor)) (recursive (chain (transpose successor) successor) successor equal)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.2669448440428823,
            "num_unique_values": 126,
            "num_values_explored": 254,
            "solution": "(transpose (disjunction (recursive successor (transpose successor) successor) (recursive (chain successor (chain successor successor)) zero (transpose successor))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True, False, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False, False, False,  True, False,  True, False,  True,\n        False],\n       [ True, False, False, False, False,  True, False,  True, False,\n         True],\n       [ True, False, False, False, False, False,  True, False,  True,\n        False]])],\n    solution=(transpose (disjunction (recursive successor (transpose successor) successor) (recursive (chain successor (chain successor successor)) zero (transpose successor))))\n)",
            "task_solution": "(transpose (disjunction (recursive successor (transpose successor) successor) (recursive (chain successor (chain successor successor)) zero (transpose successor))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.31543969502672553,
            "num_unique_values": 161,
            "num_values_explored": 287,
            "solution": "(recursive (transpose (chain successor (disjunction equal successor))) successor (recursive equal (chain successor (chain successor successor)) (chain successor successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False]])],\n    solution=(transpose (chain successor (chain (disjunction successor equal) (recursive equal (recursive equal (chain successor successor) successor) successor))))\n)",
            "task_solution": "(transpose (chain successor (chain (disjunction successor equal) (recursive equal (recursive equal (chain successor successor) successor) successor))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.22946186398621649,
            "num_unique_values": 106,
            "num_values_explored": 218,
            "solution": "(disjunction zero (chain (recursive (recursive (disjunction zero successor) successor (transpose successor)) equal (chain successor (chain successor successor))) successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True,  True, False,  True,  True, False,\n         True],\n       [False,  True,  True, False,  True,  True, False,  True,  True,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction zero (chain (recursive (recursive successor successor (transpose successor)) equal (chain successor (chain successor successor))) successor))\n)",
            "task_solution": "(disjunction zero (chain (recursive (recursive successor successor (transpose successor)) equal (chain successor (chain successor successor))) successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.37973699503345415,
            "num_unique_values": 186,
            "num_values_explored": 373,
            "solution": "(disjunction equal (recursive successor (transpose (chain successor (chain successor (chain successor successor)))) (transpose (disjunction equal successor))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True, False,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True, False,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True, False,  True,  True,\n        False],\n       [False,  True,  True,  True, False,  True,  True, False,  True,\n         True],\n       [False, False,  True,  True,  True, False,  True,  True, False,\n         True]])],\n    solution=(disjunction equal (recursive successor (transpose (chain successor (chain successor (chain successor successor)))) (transpose (disjunction successor equal))))\n)",
            "task_solution": "(disjunction equal (recursive successor (transpose (chain successor (chain successor (chain successor successor)))) (transpose (disjunction successor equal))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.2665802160045132,
            "num_unique_values": 138,
            "num_values_explored": 263,
            "solution": "(chain (recursive (transpose successor) (recursive successor successor equal) (recursive successor successor (transpose (chain successor successor)))) successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True, False,  True,  True, False,  True,  True,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (recursive (transpose successor) (recursive successor successor equal) (recursive successor successor (transpose (chain successor successor)))) successor)\n)",
            "task_solution": "(chain (recursive (transpose successor) (recursive successor successor equal) (recursive successor successor (transpose (chain successor successor)))) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.26148220396135,
            "num_unique_values": 138,
            "num_values_explored": 253,
            "solution": "(chain (transpose successor) (disjunction zero (chain (recursive successor successor (recursive equal (chain successor successor) successor)) successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (transpose successor) (disjunction zero (chain (recursive successor successor (recursive equal (chain successor successor) successor)) successor)))\n)",
            "task_solution": "(chain (transpose successor) (disjunction zero (chain (recursive successor successor (recursive equal (chain successor successor) successor)) successor)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.23662357195280492,
            "num_unique_values": 120,
            "num_values_explored": 232,
            "solution": "(recursive (recursive successor zero (transpose (chain successor successor))) (transpose successor) (recursive successor (chain successor successor) successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False]])],\n    solution=(recursive (recursive successor zero (transpose (chain successor successor))) (transpose successor) (recursive successor (chain successor successor) successor))\n)",
            "task_solution": "(recursive (recursive successor zero (transpose (chain successor successor))) (transpose successor) (recursive successor (chain successor successor) successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 3.0257589280372486,
            "num_unique_values": 711,
            "num_values_explored": 3231,
            "solution": "(disjunction (chain (recursive successor successor (recursive successor successor (transpose successor))) zero) (chain (recursive (transpose (chain successor successor)) equal successor) successor))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (chain (recursive successor equal (chain successor successor)) zero) (recursive (transpose successor) equal successor) (transpose successor))\n)",
            "task_solution": "(recursive (chain (recursive successor equal (chain successor successor)) zero) (recursive (transpose successor) equal successor) (transpose successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.22018009499879554,
            "num_unique_values": 101,
            "num_values_explored": 193,
            "solution": "(chain (disjunction zero (chain (recursive (transpose successor) (disjunction successor (transpose successor)) zero) (chain successor successor))) successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False,  True, False, False, False,  True, False,\n        False],\n       [False, False, False,  True, False, False, False, False,  True,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n         True],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction zero (chain (recursive (transpose successor) (disjunction successor (transpose successor)) zero) (chain successor successor))) successor)\n)",
            "task_solution": "(chain (disjunction zero (chain (recursive (transpose successor) (disjunction successor (transpose successor)) zero) (chain successor successor))) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3073974450235255,
            "num_unique_values": 157,
            "num_values_explored": 291,
            "solution": "(recursive (recursive equal (recursive successor successor (recursive successor successor (transpose successor))) (transpose (chain successor successor))) (chain successor successor) equal)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (disjunction equal (recursive successor successor (recursive successor successor (transpose successor)))) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive equal (disjunction equal (recursive successor successor (recursive successor successor (transpose successor)))) (transpose (chain successor successor)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.29230440402170643,
            "num_unique_values": 136,
            "num_values_explored": 283,
            "solution": "(chain successor (transpose (chain (recursive (recursive successor successor (transpose successor)) (transpose (chain successor successor)) successor) successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False,  True,  True, False,  True,\n         True],\n       [ True, False, False,  True,  True, False,  True,  True,  True,\n         True],\n       [False,  True,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (transpose (chain (recursive (recursive successor successor (transpose successor)) (transpose (chain successor successor)) successor) successor)))\n)",
            "task_solution": "(chain successor (transpose (chain (recursive (recursive successor successor (transpose successor)) (transpose (chain successor successor)) successor) successor)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.322565091017168,
            "num_unique_values": 166,
            "num_values_explored": 328,
            "solution": "(transpose (chain successor (recursive (transpose zero) (transpose (chain successor (chain successor successor))) (disjunction successor (transpose successor)))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (chain successor (recursive (transpose zero) (transpose (chain successor (chain successor successor))) (disjunction successor (transpose successor)))))\n)",
            "task_solution": "(transpose (chain successor (recursive (transpose zero) (transpose (chain successor (chain successor successor))) (disjunction successor (transpose successor)))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3134581710328348,
            "num_unique_values": 147,
            "num_values_explored": 287,
            "solution": "(disjunction zero (chain (recursive (transpose (chain successor (disjunction equal (chain successor successor)))) (disjunction successor (transpose successor)) zero) successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False, False, False,  True, False,  True, False,\n        False],\n       [False,  True, False, False, False, False,  True, False,  True,\n        False],\n       [False,  True, False, False, False, False, False,  True, False,\n         True]])],\n    solution=(disjunction equal (chain (recursive (transpose (chain successor (chain successor successor))) (disjunction successor (transpose successor)) zero) successor))\n)",
            "task_solution": "(disjunction equal (chain (recursive (transpose (chain successor (chain successor successor))) (disjunction successor (transpose successor)) zero) successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3404116639867425,
            "num_unique_values": 166,
            "num_values_explored": 331,
            "solution": "(transpose (chain (recursive (recursive successor successor (transpose successor)) (transpose (disjunction equal successor)) (chain successor successor)) successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False]])],\n    solution=(transpose (chain (recursive (recursive successor successor (transpose successor)) (transpose (disjunction successor equal)) (chain successor successor)) successor))\n)",
            "task_solution": "(transpose (chain (recursive (recursive successor successor (transpose successor)) (transpose (disjunction successor equal)) (chain successor successor)) successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.2573147970251739,
            "num_unique_values": 124,
            "num_values_explored": 239,
            "solution": "(recursive (chain (disjunction equal (transpose successor)) (chain successor successor)) (recursive (chain successor successor) zero (transpose successor)) (transpose successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True, False,  True,  True, False,  True,\n         True],\n       [False, False, False,  True,  True, False,  True,  True, False,\n         True],\n       [False, False, False, False,  True,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True, False,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (transpose (disjunction successor equal)) (chain successor successor)) (disjunction zero successor) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (chain (transpose (disjunction successor equal)) (chain successor successor)) (disjunction zero successor) (transpose (chain successor successor)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.25573722703848034,
            "num_unique_values": 116,
            "num_values_explored": 221,
            "solution": "(recursive (transpose (chain (recursive (disjunction zero successor) (transpose successor) equal) (chain successor successor))) successor (recursive zero zero (transpose successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True]])],\n    solution=(chain (recursive (transpose (chain (recursive successor equal successor) (chain successor successor))) successor zero) (disjunction successor equal))\n)",
            "task_solution": "(chain (recursive (transpose (chain (recursive successor equal successor) (chain successor successor))) successor zero) (disjunction successor equal))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.2613580920151435,
            "num_unique_values": 116,
            "num_values_explored": 238,
            "solution": "(recursive (chain successor (chain (recursive equal (transpose successor) zero) successor)) (transpose successor) (transpose (chain successor successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(recursive (chain successor (chain (recursive equal (transpose successor) zero) successor)) (transpose successor) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (chain successor (chain (recursive equal (transpose successor) zero) successor)) (transpose successor) (transpose (chain successor successor)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.2630132779595442,
            "num_unique_values": 120,
            "num_values_explored": 248,
            "solution": "(recursive (transpose (chain (disjunction zero successor) (disjunction successor (transpose successor)))) successor (transpose (chain (disjunction zero successor) successor)))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False,  True,  True, False,\n         True],\n       [ True,  True,  True, False,  True,  True, False,  True,  True,\n        False],\n       [ True, False,  True,  True, False,  True,  True, False,  True,\n         True],\n       [False,  True, False,  True,  True, False,  True,  True, False,\n         True],\n       [False, False,  True, False,  True,  True, False,  True,  True,\n        False],\n       [False, False, False,  True, False,  True,  True, False,  True,\n         True],\n       [False, False, False, False,  True, False,  True,  True, False,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain successor (disjunction successor (transpose successor)))) successor (recursive (transpose (chain successor successor)) successor zero))\n)",
            "task_solution": "(recursive (transpose (chain successor (disjunction successor (transpose successor)))) successor (recursive (transpose (chain successor successor)) successor zero))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.17816636100178584,
            "num_unique_values": 80,
            "num_values_explored": 163,
            "solution": "(recursive (disjunction (transpose successor) (chain zero (chain successor successor))) (recursive zero (transpose successor) (transpose successor)) successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (disjunction (transpose successor) (chain zero (chain successor successor))) (recursive zero (transpose successor) (transpose successor)) successor)\n)",
            "task_solution": "(recursive (disjunction (transpose successor) (chain zero (chain successor successor))) (recursive zero (transpose successor) (transpose successor)) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.2699581290362403,
            "num_unique_values": 136,
            "num_values_explored": 270,
            "solution": "(chain successor (disjunction equal (disjunction (transpose successor) (recursive (chain successor successor) equal (recursive successor equal successor)))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (disjunction equal (disjunction (transpose successor) (recursive (chain successor successor) equal (recursive successor equal successor)))))\n)",
            "task_solution": "(chain successor (disjunction equal (disjunction (transpose successor) (recursive (chain successor successor) equal (recursive successor equal successor)))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.1969112199731171,
            "num_unique_values": 96,
            "num_values_explored": 192,
            "solution": "(chain (recursive successor (disjunction zero successor) (chain (recursive successor (transpose successor) successor) (transpose (chain successor successor)))) (transpose successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor (chain (disjunction zero successor) (chain successor successor)) (disjunction successor (transpose successor))) (transpose successor))\n)",
            "task_solution": "(chain (recursive successor (chain (disjunction zero successor) (chain successor successor)) (disjunction successor (transpose successor))) (transpose successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3258466760162264,
            "num_unique_values": 150,
            "num_values_explored": 306,
            "solution": "(disjunction (chain zero successor) (transpose (chain (disjunction zero successor) (chain successor (recursive successor successor (transpose successor))))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False]])],\n    solution=(disjunction (chain zero successor) (transpose (chain (disjunction zero successor) (recursive (chain successor successor) successor (transpose successor)))))\n)",
            "task_solution": "(disjunction (chain zero successor) (transpose (chain (disjunction zero successor) (recursive (chain successor successor) successor (transpose successor)))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3039713079924695,
            "num_unique_values": 149,
            "num_values_explored": 300,
            "solution": "(disjunction equal (disjunction (transpose (chain successor (disjunction equal successor))) (recursive successor (chain zero successor) (transpose successor))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True]])],\n    solution=(disjunction equal (recursive (disjunction successor (transpose (chain successor (disjunction successor equal)))) (chain zero successor) (transpose successor)))\n)",
            "task_solution": "(disjunction equal (recursive (disjunction successor (transpose (chain successor (disjunction successor equal)))) (chain zero successor) (transpose successor)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.7119219379965216,
            "num_unique_values": 268,
            "num_values_explored": 656,
            "solution": "(disjunction (recursive (transpose successor) equal (chain zero successor)) (recursive (chain (disjunction zero (chain successor successor)) successor) (transpose successor) successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(chain (disjunction (chain successor successor) (transpose (chain successor successor))) (recursive successor (transpose (disjunction zero successor)) successor))\n)",
            "task_solution": "(chain (disjunction (chain successor successor) (transpose (chain successor successor))) (recursive successor (transpose (disjunction zero successor)) successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 52.35606000304688,
            "num_unique_values": 2697,
            "num_values_explored": 50062,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain zero (recursive equal (disjunction (transpose successor) (chain zero successor)) (transpose (chain successor (chain successor successor)))))\n)",
            "task_solution": "(chain zero (recursive equal (disjunction (transpose successor) (chain zero successor)) (transpose (chain successor (chain successor successor)))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.30494337098207325,
            "num_unique_values": 138,
            "num_values_explored": 284,
            "solution": "(chain (recursive (transpose successor) (recursive (transpose successor) (disjunction zero successor) (transpose successor)) (chain successor successor)) successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True,  True,\n        False],\n       [False,  True,  True,  True, False,  True,  True, False, False,\n         True]])],\n    solution=(chain (recursive (transpose successor) (recursive (transpose successor) (disjunction zero successor) (transpose successor)) (chain successor successor)) successor)\n)",
            "task_solution": "(chain (recursive (transpose successor) (recursive (transpose successor) (disjunction zero successor) (transpose successor)) (chain successor successor)) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.24992608703905717,
            "num_unique_values": 128,
            "num_values_explored": 249,
            "solution": "(transpose (chain (disjunction equal successor) (recursive successor (transpose successor) (disjunction zero (chain successor (chain successor successor))))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False, False,  True,  True, False, False,  True,  True,\n        False],\n       [ True,  True, False, False,  True,  True, False, False,  True,\n         True],\n       [False,  True,  True, False, False,  True,  True, False, False,\n        False],\n       [False, False,  True,  True, False, False,  True,  True, False,\n        False],\n       [False, False, False,  True,  True, False, False,  True,  True,\n        False],\n       [False, False, False, False,  True,  True, False, False,  True,\n         True],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False]])],\n    solution=(transpose (chain (disjunction successor equal) (recursive successor (transpose successor) (disjunction zero (chain successor (chain successor successor))))))\n)",
            "task_solution": "(transpose (chain (disjunction successor equal) (recursive successor (transpose successor) (disjunction zero (chain successor (chain successor successor))))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.43820335797499865,
            "num_unique_values": 178,
            "num_values_explored": 402,
            "solution": "(chain successor (chain successor (recursive (disjunction zero successor) (transpose successor) (transpose (disjunction zero (chain successor successor))))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True,  True, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (recursive (disjunction zero successor) (transpose successor) (transpose (disjunction zero (chain successor successor))))))\n)",
            "task_solution": "(chain successor (chain successor (recursive (disjunction zero successor) (transpose successor) (transpose (disjunction zero (chain successor successor))))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.28482845902908593,
            "num_unique_values": 128,
            "num_values_explored": 258,
            "solution": "(transpose (chain (recursive (recursive successor (transpose successor) successor) zero (transpose successor)) (chain (disjunction zero successor) successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True, False, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False, False, False,  True, False,  True, False,  True,\n        False],\n       [ True, False, False, False, False,  True, False,  True, False,\n         True],\n       [ True, False, False, False, False, False,  True, False,  True,\n        False]])],\n    solution=(recursive (transpose (chain (recursive successor (transpose successor) successor) (chain (disjunction zero successor) successor))) (transpose successor) zero)\n)",
            "task_solution": "(recursive (transpose (chain (recursive successor (transpose successor) successor) (chain (disjunction zero successor) successor))) (transpose successor) zero)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.22467146400595084,
            "num_unique_values": 97,
            "num_values_explored": 206,
            "solution": "(chain (disjunction (chain successor (chain successor successor)) (recursive equal (transpose successor) (recursive successor successor equal))) successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True, False, False,  True, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False,  True, False,\n        False],\n       [False,  True,  True,  True, False,  True, False, False,  True,\n        False],\n       [False,  True,  True,  True,  True, False,  True, False, False,\n         True],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(chain (disjunction (chain successor (chain successor successor)) (recursive equal (transpose successor) (recursive successor successor equal))) successor)\n)",
            "task_solution": "(chain (disjunction (chain successor (chain successor successor)) (recursive equal (transpose successor) (recursive successor successor equal))) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.2542601669556461,
            "num_unique_values": 107,
            "num_values_explored": 239,
            "solution": "(disjunction zero (disjunction (transpose successor) (chain (disjunction successor (transpose (recursive successor successor equal))) (chain successor successor))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(disjunction zero (disjunction (transpose successor) (chain (disjunction successor (recursive (transpose successor) equal successor)) (chain successor successor))))\n)",
            "task_solution": "(disjunction zero (disjunction (transpose successor) (chain (disjunction successor (recursive (transpose successor) equal successor)) (chain successor successor))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.2904693760210648,
            "num_unique_values": 137,
            "num_values_explored": 268,
            "solution": "(chain (transpose (chain successor (disjunction equal (chain successor (recursive (chain successor successor) (transpose successor) successor))))) successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True,  True,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True,  True,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True]])],\n    solution=(chain (transpose (chain successor (disjunction equal (chain successor (recursive (chain successor successor) (transpose successor) successor))))) successor)\n)",
            "task_solution": "(chain (transpose (chain successor (disjunction equal (chain successor (recursive (chain successor successor) (transpose successor) successor))))) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.34740425599738955,
            "num_unique_values": 156,
            "num_values_explored": 309,
            "solution": "(recursive (transpose (chain zero (disjunction successor (recursive equal successor (transpose successor))))) successor (transpose (chain successor successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False, False, False,  True,\n        False],\n       [ True, False,  True, False, False, False,  True, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False,  True,\n        False],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False,  True,\n        False],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (transpose (chain zero (disjunction successor (recursive equal successor (transpose successor))))) successor (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (transpose (chain zero (disjunction successor (recursive equal successor (transpose successor))))) successor (transpose (chain successor successor)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.311307015013881,
            "num_unique_values": 147,
            "num_values_explored": 304,
            "solution": "(disjunction (transpose successor) (disjunction equal (recursive (chain successor (chain successor successor)) (transpose successor) (disjunction equal successor))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(disjunction equal (disjunction (transpose successor) (recursive (chain successor (chain successor successor)) (transpose successor) (disjunction successor equal))))\n)",
            "task_solution": "(disjunction equal (disjunction (transpose successor) (recursive (chain successor (chain successor successor)) (transpose successor) (disjunction successor equal))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.18433266697684303,
            "num_unique_values": 83,
            "num_values_explored": 165,
            "solution": "(recursive (disjunction successor (transpose (chain successor successor))) (transpose (disjunction equal successor)) (chain zero (chain successor successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False, False,  True, False, False, False,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(recursive (disjunction successor (transpose (chain successor successor))) (transpose successor) (chain zero (chain successor (disjunction successor equal))))\n)",
            "task_solution": "(recursive (disjunction successor (transpose (chain successor successor))) (transpose successor) (chain zero (chain successor (disjunction successor equal))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.2916764669935219,
            "num_unique_values": 145,
            "num_values_explored": 277,
            "solution": "(chain (disjunction (recursive successor (chain (disjunction zero successor) successor) (transpose successor)) (recursive equal (chain successor (chain successor successor)) successor)) successor)",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True, False,  True,  True,\n        False],\n       [False, False,  True,  True,  True, False,  True, False, False,\n         True],\n       [False, False, False,  True,  True,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction equal (chain (disjunction zero successor) (disjunction successor (recursive equal successor (transpose (chain successor successor)))))) successor)\n)",
            "task_solution": "(chain (disjunction equal (chain (disjunction zero successor) (disjunction successor (recursive equal successor (transpose (chain successor successor)))))) successor)",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.20579898497089744,
            "num_unique_values": 103,
            "num_values_explored": 192,
            "solution": "(chain (transpose (chain (recursive successor successor (chain successor successor)) successor)) (recursive successor zero (transpose (chain successor successor))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n         True],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (transpose (chain (recursive successor successor (chain successor successor)) successor)) (recursive successor zero (transpose (chain successor successor))))\n)",
            "task_solution": "(chain (transpose (chain (recursive successor successor (chain successor successor)) successor)) (recursive successor zero (transpose (chain successor successor))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 51.45629514998291,
            "num_unique_values": 1892,
            "num_values_explored": 50004,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False,  True, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain successor successor)) (recursive (transpose successor) (chain successor successor) successor) (chain (disjunction zero successor) successor))\n)",
            "task_solution": "(recursive (transpose (chain successor successor)) (recursive (transpose successor) (chain successor successor) successor) (chain (disjunction zero successor) successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.30180868098977953,
            "num_unique_values": 137,
            "num_values_explored": 275,
            "solution": "(chain (recursive (chain successor (disjunction equal (chain successor successor))) (transpose successor) (disjunction zero successor)) (disjunction zero successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(chain (recursive (chain successor (disjunction equal (chain successor successor))) (transpose successor) (disjunction zero successor)) (disjunction zero successor))\n)",
            "task_solution": "(chain (recursive (chain successor (disjunction equal (chain successor successor))) (transpose successor) (disjunction zero successor)) (disjunction zero successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.34181700902990997,
            "num_unique_values": 166,
            "num_values_explored": 331,
            "solution": "(transpose (disjunction successor (transpose (recursive (recursive (disjunction zero successor) equal (chain successor successor)) (chain (transpose successor) successor) (transpose successor)))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction zero (disjunction (transpose successor) (chain successor (recursive equal (transpose (chain successor successor)) (recursive equal equal successor)))))\n)",
            "task_solution": "(disjunction zero (disjunction (transpose successor) (chain successor (recursive equal (transpose (chain successor successor)) (recursive equal equal successor)))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.23067927797092125,
            "num_unique_values": 103,
            "num_values_explored": 200,
            "solution": "(chain (transpose (chain successor (disjunction equal (chain successor successor)))) (recursive successor (disjunction zero (chain successor successor)) successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True]])],\n    solution=(chain (transpose (chain successor (disjunction equal (chain successor successor)))) (recursive successor (disjunction zero (chain successor successor)) successor))\n)",
            "task_solution": "(chain (transpose (chain successor (disjunction equal (chain successor successor)))) (recursive successor (disjunction zero (chain successor successor)) successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.23944740399019793,
            "num_unique_values": 116,
            "num_values_explored": 233,
            "solution": "(recursive (disjunction successor (transpose (chain (disjunction zero successor) (disjunction (transpose successor) successor)))) (chain zero successor) (transpose (disjunction equal successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True, False,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True, False,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True, False,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(recursive (disjunction successor (transpose (chain (disjunction zero successor) (disjunction successor (transpose successor))))) (chain zero successor) (transpose successor))\n)",
            "task_solution": "(recursive (disjunction successor (transpose (chain (disjunction zero successor) (disjunction successor (transpose successor))))) (chain zero successor) (transpose successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.2743207410094328,
            "num_unique_values": 136,
            "num_values_explored": 257,
            "solution": "(chain (disjunction (recursive successor successor equal) (chain (transpose successor) (recursive successor successor (recursive equal successor (transpose successor))))) successor)",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (transpose successor) (chain (recursive successor successor (recursive equal successor (transpose successor))) successor)) successor (transpose successor))\n)",
            "task_solution": "(recursive (chain (transpose successor) (chain (recursive successor successor (recursive equal successor (transpose successor))) successor)) successor (transpose successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.3075282060308382,
            "num_unique_values": 146,
            "num_values_explored": 284,
            "solution": "(disjunction (chain successor (chain successor successor)) (transpose (chain successor (chain successor (chain (recursive successor equal successor) successor)))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n         True],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False]])],\n    solution=(disjunction (chain successor (chain successor successor)) (transpose (chain successor (chain successor (chain (recursive successor equal successor) successor)))))\n)",
            "task_solution": "(disjunction (chain successor (chain successor successor)) (transpose (chain successor (chain successor (chain (recursive successor equal successor) successor)))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.3592631100327708,
            "num_unique_values": 186,
            "num_values_explored": 348,
            "solution": "(disjunction equal (chain successor (chain successor (recursive (transpose zero) (transpose successor) (recursive equal successor (chain successor successor))))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain successor (chain successor (recursive (transpose zero) (transpose successor) (recursive equal successor (chain successor successor))))))\n)",
            "task_solution": "(disjunction equal (chain successor (chain successor (recursive (transpose zero) (transpose successor) (recursive equal successor (chain successor successor))))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.2828143860097043,
            "num_unique_values": 127,
            "num_values_explored": 247,
            "solution": "(transpose (disjunction zero (chain (recursive successor successor (transpose successor)) (disjunction successor (recursive zero (transpose successor) (transpose successor))))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False]])],\n    solution=(transpose (disjunction zero (chain (recursive successor successor (transpose successor)) (disjunction successor (recursive zero (transpose successor) (transpose successor))))))\n)",
            "task_solution": "(transpose (disjunction zero (chain (recursive successor successor (transpose successor)) (disjunction successor (recursive zero (transpose successor) (transpose successor))))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.2876611439860426,
            "num_unique_values": 126,
            "num_values_explored": 268,
            "solution": "(transpose (recursive (disjunction zero (chain successor successor)) (transpose (chain zero (recursive (chain successor successor) successor equal))) equal))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(recursive (transpose (disjunction zero (chain successor successor))) equal (transpose (chain zero (recursive (chain successor successor) successor equal))))\n)",
            "task_solution": "(recursive (transpose (disjunction zero (chain successor successor))) equal (transpose (chain zero (recursive (chain successor successor) successor equal))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.3719756710343063,
            "num_unique_values": 176,
            "num_values_explored": 355,
            "solution": "(chain (disjunction successor (transpose (disjunction zero (recursive successor (chain (disjunction successor (transpose successor)) (recursive zero zero (transpose successor))) equal)))) successor)",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (recursive (disjunction successor (transpose successor)) (recursive zero zero (transpose (chain successor (disjunction successor equal)))) successor) successor)\n)",
            "task_solution": "(chain (recursive (disjunction successor (transpose successor)) (recursive zero zero (transpose (chain successor (disjunction successor equal)))) successor) successor)",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 62.58383698097896,
            "num_unique_values": 3790,
            "num_values_explored": 50009,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (recursive (transpose (chain (disjunction zero (chain successor successor)) successor)) equal (transpose (chain successor successor))) equal successor)\n)",
            "task_solution": "(recursive (recursive (transpose (chain (disjunction zero (chain successor successor)) successor)) equal (transpose (chain successor successor))) equal successor)",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.2370554450317286,
            "num_unique_values": 104,
            "num_values_explored": 200,
            "solution": "(chain (disjunction successor (transpose (chain (disjunction zero successor) successor))) (chain (recursive (chain successor successor) zero successor) successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction successor (transpose (chain (disjunction zero successor) successor))) (chain (recursive (chain successor successor) zero successor) successor))\n)",
            "task_solution": "(chain (disjunction successor (transpose (chain (disjunction zero successor) successor))) (chain (recursive (chain successor successor) zero successor) successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.3263599200290628,
            "num_unique_values": 147,
            "num_values_explored": 311,
            "solution": "(disjunction successor (transpose (chain (disjunction successor (transpose successor)) (recursive successor (recursive successor (chain successor successor) successor) successor))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True]])],\n    solution=(disjunction successor (transpose (chain (disjunction successor (transpose successor)) (recursive successor (recursive successor (chain successor successor) successor) successor))))\n)",
            "task_solution": "(disjunction successor (transpose (chain (disjunction successor (transpose successor)) (recursive successor (recursive successor (chain successor successor) successor) successor))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.22773985198000446,
            "num_unique_values": 117,
            "num_values_explored": 223,
            "solution": "(recursive (recursive (transpose successor) successor (transpose successor)) (transpose successor) (chain successor (chain successor (chain successor (transpose successor)))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True, False,  True,  True, False,\n         True],\n       [ True,  True,  True, False,  True,  True, False, False,  True,\n        False]])],\n    solution=(recursive (recursive (transpose successor) successor (transpose successor)) (transpose successor) (chain successor (chain successor (chain successor (transpose successor)))))\n)",
            "task_solution": "(recursive (recursive (transpose successor) successor (transpose successor)) (transpose successor) (chain successor (chain successor (chain successor (transpose successor)))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.21657736296765506,
            "num_unique_values": 106,
            "num_values_explored": 208,
            "solution": "(disjunction successor (chain (disjunction successor equal) (recursive (transpose (recursive zero (transpose successor) (transpose successor))) (transpose successor) successor)))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True, False, False,  True, False, False,\n        False],\n       [False,  True,  True, False, False,  True,  True,  True, False,\n        False],\n       [ True,  True, False, False,  True,  True, False, False,  True,\n        False],\n       [ True, False, False,  True,  True, False, False,  True,  True,\n         True],\n       [False, False, False,  True, False, False, False,  True, False,\n        False]])],\n    solution=(disjunction successor (chain (disjunction successor equal) (recursive (transpose (recursive zero (transpose successor) (transpose successor))) (transpose successor) successor)))\n)",
            "task_solution": "(disjunction successor (chain (disjunction successor equal) (recursive (transpose (recursive zero (transpose successor) (transpose successor))) (transpose successor) successor)))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.31277544499607757,
            "num_unique_values": 138,
            "num_values_explored": 268,
            "solution": "(chain (disjunction successor (transpose successor)) (chain successor (disjunction (chain successor successor) (recursive zero (transpose successor) (transpose successor)))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction successor (transpose successor)) (chain successor (disjunction (chain successor successor) (recursive zero (transpose successor) (transpose successor)))))\n)",
            "task_solution": "(chain (disjunction successor (transpose successor)) (chain successor (disjunction (chain successor successor) (recursive zero (transpose successor) (transpose successor)))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.23790940397884697,
            "num_unique_values": 116,
            "num_values_explored": 222,
            "solution": "(recursive (chain (recursive (disjunction zero successor) equal (chain successor successor)) (recursive equal zero (transpose successor))) successor (chain zero successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (recursive (disjunction zero successor) equal (recursive (recursive equal successor (transpose successor)) (transpose successor) zero)) successor zero)\n)",
            "task_solution": "(recursive (recursive (disjunction zero successor) equal (recursive (recursive equal successor (transpose successor)) (transpose successor) zero)) successor zero)",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 18.791002587997355,
            "num_unique_values": 1994,
            "num_values_explored": 18128,
            "solution": "(disjunction successor (transpose (chain (recursive successor successor (chain successor successor)) (chain (recursive zero zero (transpose successor)) successor))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction successor (transpose (chain (recursive successor successor (chain successor successor)) (chain (recursive zero zero (transpose successor)) successor))))\n)",
            "task_solution": "(disjunction successor (transpose (chain (recursive successor successor (chain successor successor)) (chain (recursive zero zero (transpose successor)) successor))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.22260291100246832,
            "num_unique_values": 110,
            "num_values_explored": 209,
            "solution": "(disjunction (recursive equal successor (chain successor successor)) (recursive equal (chain (recursive successor successor equal) successor) (transpose (chain successor successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True, False, False, False,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True, False, False, False,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True, False, False, False,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True, False, False, False,  True,\n         True],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n         True],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction (recursive equal successor (chain successor successor)) (recursive (chain successor (chain successor (chain successor successor))) successor equal))\n)",
            "task_solution": "(disjunction (recursive equal successor (chain successor successor)) (recursive (chain successor (chain successor (chain successor successor))) successor equal))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.25729864701861516,
            "num_unique_values": 120,
            "num_values_explored": 233,
            "solution": "(recursive (recursive (recursive (chain (transpose successor) successor) successor (chain successor successor)) (transpose successor) zero) successor (transpose successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True, False, False,  True,  True,  True,  True,\n         True],\n       [ True,  True, False, False, False, False, False,  True,  True,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (recursive (recursive (chain (transpose successor) successor) successor (chain successor successor)) (transpose successor) zero) successor (transpose successor))\n)",
            "task_solution": "(recursive (recursive (recursive (chain (transpose successor) successor) successor (chain successor successor)) (transpose successor) zero) successor (transpose successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.3160171519848518,
            "num_unique_values": 147,
            "num_values_explored": 293,
            "solution": "(disjunction successor (recursive (chain successor successor) (recursive equal (transpose successor) successor) (transpose (chain successor (chain successor successor)))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False,  True,  True, False, False,  True, False, False,\n         True],\n       [False, False, False,  True,  True,  True, False,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True, False,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n         True]])],\n    solution=(chain (disjunction equal (recursive successor (recursive equal (transpose successor) successor) (transpose (chain successor (chain successor successor))))) successor)\n)",
            "task_solution": "(chain (disjunction equal (recursive successor (recursive equal (transpose successor) successor) (transpose (chain successor (chain successor successor))))) successor)",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 56.52203218097566,
            "num_unique_values": 3327,
            "num_values_explored": 50087,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (recursive successor (transpose successor) successor)) (chain (recursive successor (transpose successor) successor) zero) (transpose successor))\n)",
            "task_solution": "(recursive (chain successor (recursive successor (transpose successor) successor)) (chain (recursive successor (transpose successor) successor) zero) (transpose successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.17655085504520684,
            "num_unique_values": 76,
            "num_values_explored": 163,
            "solution": "(recursive (chain (transpose (chain successor successor)) successor) (recursive equal successor (chain successor successor)) (transpose (chain successor successor)))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (chain (transpose (chain successor successor)) successor) (recursive equal successor (chain successor successor)) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (chain (transpose (chain successor successor)) successor) (recursive equal successor (chain successor successor)) (transpose (chain successor successor)))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.4817617450025864,
            "num_unique_values": 218,
            "num_values_explored": 445,
            "solution": "(chain successor (transpose (disjunction zero (chain successor (chain successor (chain successor (chain successor (chain (recursive successor equal successor) successor))))))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (transpose (chain successor (chain successor (chain successor (chain successor (chain (recursive successor equal successor) successor)))))))\n)",
            "task_solution": "(chain successor (transpose (chain successor (chain successor (chain successor (chain successor (chain (recursive successor equal successor) successor)))))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 59.79569022398209,
            "num_unique_values": 3364,
            "num_values_explored": 50042,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n         True]])],\n    solution=(recursive equal (transpose (chain successor (disjunction successor (transpose (chain successor (chain successor successor)))))) (recursive successor successor equal))\n)",
            "task_solution": "(recursive equal (transpose (chain successor (disjunction successor (transpose (chain successor (chain successor successor)))))) (recursive successor successor equal))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 59.28750775399385,
            "num_unique_values": 3493,
            "num_values_explored": 50005,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (transpose (disjunction (chain successor successor) (recursive equal (transpose successor) (recursive successor successor (chain successor successor))))))\n)",
            "task_solution": "(chain successor (transpose (disjunction (chain successor successor) (recursive equal (transpose successor) (recursive successor successor (chain successor successor))))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 53.56872481299797,
            "num_unique_values": 3177,
            "num_values_explored": 50035,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal equal (recursive (transpose (recursive zero (transpose successor) (transpose successor))) (chain successor (chain successor successor)) successor))\n)",
            "task_solution": "(recursive equal equal (recursive (transpose (recursive zero (transpose successor) (transpose successor))) (chain successor (chain successor successor)) successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 3.4742956049740314,
            "num_unique_values": 718,
            "num_values_explored": 3860,
            "solution": "(recursive (recursive equal (chain successor (chain successor (chain successor successor))) (chain successor successor)) (chain zero successor) (transpose successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive successor (chain (recursive zero zero (recursive successor (transpose successor) successor)) successor) (transpose successor)) successor)\n)",
            "task_solution": "(recursive equal (recursive successor (chain (recursive zero zero (recursive successor (transpose successor) successor)) successor) (transpose successor)) successor)",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.5137050569755957,
            "num_unique_values": 216,
            "num_values_explored": 454,
            "solution": "(chain successor (transpose (chain successor (chain successor (chain (disjunction equal (recursive successor successor (chain successor successor))) successor)))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (transpose (chain successor (chain successor (chain (disjunction equal (recursive successor successor (chain successor successor))) successor)))))\n)",
            "task_solution": "(chain successor (transpose (chain successor (chain successor (chain (disjunction equal (recursive successor successor (chain successor successor))) successor)))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.5459015159867704,
            "num_unique_values": 216,
            "num_values_explored": 507,
            "solution": "(chain (disjunction equal successor) (disjunction (recursive equal (chain successor successor) successor) (chain (recursive successor equal successor) successor)))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (disjunction successor equal) (disjunction (recursive equal (chain successor successor) successor) (chain (recursive successor equal successor) successor)))\n)",
            "task_solution": "(chain (disjunction successor equal) (disjunction (recursive equal (chain successor successor) successor) (chain (recursive successor equal successor) successor)))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.2930974500486627,
            "num_unique_values": 140,
            "num_values_explored": 272,
            "solution": "(chain (transpose (chain successor successor)) (disjunction zero (recursive successor (transpose (disjunction (transpose successor) (chain successor successor))) (transpose successor))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (transpose (chain successor successor)) (disjunction zero (recursive successor (disjunction successor (transpose (chain successor successor))) (transpose successor))))\n)",
            "task_solution": "(chain (transpose (chain successor successor)) (disjunction zero (recursive successor (disjunction successor (transpose (chain successor successor))) (transpose successor))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.19323152996366844,
            "num_unique_values": 77,
            "num_values_explored": 162,
            "solution": "(recursive (disjunction (transpose successor) (recursive (chain successor successor) (chain successor successor) successor)) (transpose (chain successor successor)) equal)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (disjunction (transpose successor) (recursive (chain successor successor) (chain successor successor) successor)) (transpose (chain successor successor)) equal)\n)",
            "task_solution": "(recursive (disjunction (transpose successor) (recursive (chain successor successor) (chain successor successor) successor)) (transpose (chain successor successor)) equal)",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 56.22068429196952,
            "num_unique_values": 3683,
            "num_values_explored": 50010,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n         True]])],\n    solution=(transpose (disjunction equal (chain successor (chain (recursive successor successor (recursive equal successor (transpose (chain successor successor)))) successor))))\n)",
            "task_solution": "(transpose (disjunction equal (chain successor (chain (recursive successor successor (recursive equal successor (transpose (chain successor successor)))) successor))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.26196625496959314,
            "num_unique_values": 126,
            "num_values_explored": 257,
            "solution": "(transpose (recursive (chain (disjunction zero (chain successor (chain successor successor))) successor) (transpose successor) (recursive successor successor equal)))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False]])],\n    solution=(recursive (transpose (chain (disjunction zero (chain successor (chain successor successor))) successor)) (recursive successor successor equal) (transpose successor))\n)",
            "task_solution": "(recursive (transpose (chain (disjunction zero (chain successor (chain successor successor))) successor)) (recursive successor successor equal) (transpose successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.3131338399834931,
            "num_unique_values": 174,
            "num_values_explored": 286,
            "solution": "(transpose (disjunction (transpose (chain successor successor)) (chain (recursive successor successor (recursive equal successor (transpose (chain successor successor)))) successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False]])],\n    solution=(disjunction (chain successor successor) (transpose (chain (recursive successor successor (recursive equal successor (transpose (chain successor successor)))) successor)))\n)",
            "task_solution": "(disjunction (chain successor successor) (transpose (chain (recursive successor successor (recursive equal successor (transpose (chain successor successor)))) successor)))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.4141533730435185,
            "num_unique_values": 187,
            "num_values_explored": 390,
            "solution": "(disjunction equal (chain (recursive (chain successor successor) (transpose successor) (disjunction successor (recursive equal (transpose successor) successor))) successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(disjunction equal (chain (recursive (chain successor successor) (transpose successor) (disjunction successor (recursive equal (transpose successor) successor))) successor))\n)",
            "task_solution": "(disjunction equal (chain (recursive (chain successor successor) (transpose successor) (disjunction successor (recursive equal (transpose successor) successor))) successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 53.05202750797616,
            "num_unique_values": 3093,
            "num_values_explored": 50015,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (recursive (transpose successor) (disjunction successor (recursive equal (transpose successor) (transpose (chain successor successor)))) successor))\n)",
            "task_solution": "(recursive successor successor (recursive (transpose successor) (disjunction successor (recursive equal (transpose successor) (transpose (chain successor successor)))) successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.2671872380306013,
            "num_unique_values": 126,
            "num_values_explored": 251,
            "solution": "(transpose (disjunction zero (chain successor (recursive successor (transpose (disjunction zero successor)) (transpose (disjunction equal (chain successor successor)))))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(transpose (disjunction zero (chain successor (recursive successor (transpose (disjunction zero successor)) (transpose (disjunction equal (chain successor successor)))))))\n)",
            "task_solution": "(transpose (disjunction zero (chain successor (recursive successor (transpose (disjunction zero successor)) (transpose (disjunction equal (chain successor successor)))))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 1.0344192289630882,
            "num_unique_values": 363,
            "num_values_explored": 1046,
            "solution": "(recursive (recursive (transpose successor) (transpose successor) (chain successor (chain successor successor))) successor (chain (disjunction zero successor) (disjunction zero successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True, False,  True,  True,  True, False, False,\n        False],\n       [ True, False,  True,  True, False, False,  True,  True, False,\n        False],\n       [ True, False, False, False,  True, False, False, False,  True,\n        False]])],\n    solution=(recursive (recursive (transpose successor) (transpose successor) (chain successor (chain successor successor))) successor (disjunction zero (chain successor successor)))\n)",
            "task_solution": "(recursive (recursive (transpose successor) (transpose successor) (chain successor (chain successor successor))) successor (disjunction zero (chain successor successor)))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.21889436896890402,
            "num_unique_values": 106,
            "num_values_explored": 219,
            "solution": "(disjunction equal (chain (recursive equal (recursive equal (chain successor successor) (disjunction successor equal)) (chain successor successor)) successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n         True]])],\n    solution=(disjunction equal (chain (recursive equal (recursive equal (chain successor successor) (disjunction successor equal)) (chain successor successor)) successor))\n)",
            "task_solution": "(disjunction equal (chain (recursive equal (recursive equal (chain successor successor) (disjunction successor equal)) (chain successor successor)) successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.17293290799716488,
            "num_unique_values": 81,
            "num_values_explored": 164,
            "solution": "(recursive (chain (transpose successor) (disjunction equal (chain successor successor))) successor (recursive (chain successor successor) successor (transpose successor)))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (chain (transpose successor) (disjunction equal (chain successor successor))) successor (recursive (chain successor successor) successor (transpose successor)))\n)",
            "task_solution": "(recursive (chain (transpose successor) (disjunction equal (chain successor successor))) successor (recursive (chain successor successor) successor (transpose successor)))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 56.458734952961095,
            "num_unique_values": 2663,
            "num_values_explored": 50044,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False,  True, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False,  True, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False,  True, False,\n        False],\n       [ True, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (recursive (disjunction successor (transpose (chain zero successor))) (disjunction zero successor) (transpose (chain successor successor))))\n)",
            "task_solution": "(recursive equal successor (recursive (disjunction successor (transpose (chain zero successor))) (disjunction zero successor) (transpose (chain successor successor))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.24824039998929948,
            "num_unique_values": 126,
            "num_values_explored": 245,
            "solution": "(transpose (disjunction (recursive successor successor (chain successor successor)) (chain successor (recursive (transpose successor) (transpose successor) (chain successor successor)))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (disjunction (recursive equal (chain successor successor) successor) (recursive successor successor (transpose (chain successor successor)))) (transpose successor))\n)",
            "task_solution": "(chain (disjunction (recursive equal (chain successor successor) successor) (recursive successor successor (transpose (chain successor successor)))) (transpose successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.24463688000105321,
            "num_unique_values": 117,
            "num_values_explored": 228,
            "solution": "(recursive (disjunction (transpose successor) (chain (recursive (chain zero successor) (recursive successor equal successor) successor) successor)) successor successor)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False, False, False,  True, False, False, False,\n        False],\n       [ True,  True, False, False, False, False,  True, False, False,\n        False],\n       [False,  True, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (disjunction (transpose successor) (chain (recursive (chain zero successor) (recursive successor equal successor) successor) successor)) successor successor)\n)",
            "task_solution": "(recursive (disjunction (transpose successor) (chain (recursive (chain zero successor) (recursive successor equal successor) successor) successor)) successor successor)",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.28390326304361224,
            "num_unique_values": 152,
            "num_values_explored": 273,
            "solution": "(disjunction equal (chain successor (disjunction equal (chain (recursive successor (transpose successor) successor) (chain successor (chain successor successor))))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False,  True, False, False,\n        False],\n       [False, False,  True,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False,  True,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True,  True,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True,  True,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True,  True,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction successor (disjunction equal (chain successor (chain (recursive successor (transpose successor) successor) (chain successor (chain successor successor))))))\n)",
            "task_solution": "(disjunction successor (disjunction equal (chain successor (chain (recursive successor (transpose successor) successor) (chain successor (chain successor successor))))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.2189411820145324,
            "num_unique_values": 100,
            "num_values_explored": 204,
            "solution": "(chain (transpose (chain (disjunction (chain successor successor) equal) (recursive (chain successor successor) zero successor))) (disjunction zero successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False]])],\n    solution=(chain (transpose (chain (disjunction equal (chain successor successor)) (recursive (chain successor successor) zero successor))) (disjunction zero successor))\n)",
            "task_solution": "(chain (transpose (chain (disjunction equal (chain successor successor)) (recursive (chain successor successor) zero successor))) (disjunction zero successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.2194465710199438,
            "num_unique_values": 96,
            "num_values_explored": 211,
            "solution": "(chain (recursive (chain successor successor) (transpose (chain successor successor)) (recursive (disjunction zero successor) (transpose successor) zero)) successor)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (recursive (chain successor successor) (transpose (chain successor successor)) (recursive (disjunction zero successor) (transpose successor) zero)) successor)\n)",
            "task_solution": "(chain (recursive (chain successor successor) (transpose (chain successor successor)) (recursive (disjunction zero successor) (transpose successor) zero)) successor)",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.24511689599603415,
            "num_unique_values": 117,
            "num_values_explored": 225,
            "solution": "(recursive (recursive equal zero (transpose successor)) successor (chain successor (recursive successor (recursive zero (transpose successor) (transpose successor)) successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (recursive equal zero (transpose successor)) successor (chain successor (recursive successor (recursive zero (transpose successor) (transpose successor)) successor)))\n)",
            "task_solution": "(recursive (recursive equal zero (transpose successor)) successor (chain successor (recursive successor (recursive zero (transpose successor) (transpose successor)) successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 58.48408875399036,
            "num_unique_values": 3498,
            "num_values_explored": 50096,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True,  True, False, False, False,\n        False],\n       [False,  True,  True, False, False,  True,  True, False, False,\n        False],\n       [False, False,  True,  True, False, False,  True,  True, False,\n        False],\n       [False, False, False,  True, False, False, False,  True,  True,\n        False],\n       [ True, False, False, False,  True, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction equal (recursive successor (chain successor (chain successor (chain successor successor))) (recursive equal (chain successor successor) successor))))\n)",
            "task_solution": "(transpose (disjunction equal (recursive successor (chain successor (chain successor (chain successor successor))) (recursive equal (chain successor successor) successor))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.4027988410089165,
            "num_unique_values": 203,
            "num_values_explored": 358,
            "solution": "(recursive (disjunction zero (chain (transpose successor) (chain zero (chain successor (chain successor (chain successor successor)))))) (transpose successor) successor)",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (disjunction zero (chain (transpose successor) (chain zero (chain successor (chain successor (chain successor successor)))))) (transpose successor) successor)\n)",
            "task_solution": "(recursive (disjunction zero (chain (transpose successor) (chain zero (chain successor (chain successor (chain successor successor)))))) (transpose successor) successor)",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.3021534070139751,
            "num_unique_values": 146,
            "num_values_explored": 288,
            "solution": "(disjunction (transpose successor) (chain (chain successor (chain successor (recursive equal (transpose (chain successor successor)) zero))) (disjunction zero successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False, False, False,  True, False, False, False,\n        False],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False,  True, False,\n        False],\n       [False, False, False, False,  True, False, False, False,  True,\n        False],\n       [ True,  True, False, False, False,  True, False, False, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (chain successor (chain successor (chain (recursive equal (transpose (chain successor successor)) zero) (disjunction zero successor)))))\n)",
            "task_solution": "(disjunction (transpose successor) (chain successor (chain successor (chain (recursive equal (transpose (chain successor successor)) zero) (disjunction zero successor)))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.33433735702419654,
            "num_unique_values": 156,
            "num_values_explored": 311,
            "solution": "(recursive successor (transpose (chain successor successor)) (disjunction (transpose successor) (chain (disjunction (transpose successor) (chain successor successor)) (chain successor successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive successor (transpose (chain successor successor)) (transpose (disjunction successor (recursive (chain successor successor) (transpose (chain successor successor)) successor))))\n)",
            "task_solution": "(recursive successor (transpose (chain successor successor)) (transpose (disjunction successor (recursive (chain successor successor) (transpose (chain successor successor)) successor))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 7.95520307100378,
            "num_unique_values": 1087,
            "num_values_explored": 8501,
            "solution": "(chain successor (chain successor (disjunction (chain successor (transpose successor)) (chain successor (chain (disjunction equal (recursive successor (transpose successor) successor)) successor)))))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (chain successor (disjunction successor (disjunction (transpose successor) (chain (recursive successor (transpose successor) successor) successor))))))\n)",
            "task_solution": "(chain successor (chain successor (chain successor (disjunction successor (disjunction (transpose successor) (chain (recursive successor (transpose successor) successor) successor))))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.2581846740213223,
            "num_unique_values": 140,
            "num_values_explored": 245,
            "solution": "(chain (recursive successor (recursive successor (chain (recursive successor successor (chain successor successor)) zero) equal) (transpose successor)) (transpose successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor (recursive successor (chain (recursive successor successor (chain successor successor)) zero) equal) (transpose successor)) (transpose successor))\n)",
            "task_solution": "(chain (recursive successor (recursive successor (chain (recursive successor successor (chain successor successor)) zero) equal) (transpose successor)) (transpose successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 58.20739379897714,
            "num_unique_values": 2945,
            "num_values_explored": 50005,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [ True, False, False, False, False, False,  True,  True,  True,\n         True]])],\n    solution=(disjunction (chain (recursive successor (transpose successor) successor) zero) (recursive successor (transpose (disjunction zero (chain successor successor))) (transpose successor)))\n)",
            "task_solution": "(disjunction (chain (recursive successor (transpose successor) successor) zero) (recursive successor (transpose (disjunction zero (chain successor successor))) (transpose successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 41.54723143402953,
            "num_unique_values": 2824,
            "num_values_explored": 42245,
            "solution": "(disjunction equal (recursive successor (transpose (disjunction zero successor)) (chain successor (chain successor (chain successor (transpose (recursive successor zero (transpose successor))))))))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n         True]])],\n    solution=(disjunction equal (recursive successor (transpose successor) (chain successor (chain successor (chain successor (recursive (transpose successor) (transpose successor) zero))))))\n)",
            "task_solution": "(disjunction equal (recursive successor (transpose successor) (chain successor (chain successor (chain successor (recursive (transpose successor) (transpose successor) zero))))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.2942226239829324,
            "num_unique_values": 140,
            "num_values_explored": 275,
            "solution": "(chain (disjunction zero (recursive (chain zero successor) (recursive equal (transpose successor) successor) (transpose successor))) (chain (disjunction zero successor) successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain zero (recursive successor successor equal)) (recursive equal (transpose successor) successor) (transpose (chain successor (chain successor successor))))\n)",
            "task_solution": "(recursive (chain zero (recursive successor successor equal)) (recursive equal (transpose successor) successor) (transpose (chain successor (chain successor successor))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 52.09879821795039,
            "num_unique_values": 2244,
            "num_values_explored": 50070,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False,  True, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False,  True,\n        False],\n       [ True,  True,  True,  True, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive equal (recursive (transpose (chain successor successor)) (recursive successor successor (recursive successor equal successor)) successor) successor))\n)",
            "task_solution": "(chain successor (recursive equal (recursive (transpose (chain successor successor)) (recursive successor successor (recursive successor equal successor)) successor) successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 57.09765380201861,
            "num_unique_values": 3694,
            "num_values_explored": 50097,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True]])],\n    solution=(recursive equal (recursive zero (transpose (disjunction zero (chain successor successor))) (transpose successor)) (recursive (chain successor successor) successor equal))\n)",
            "task_solution": "(recursive equal (recursive zero (transpose (disjunction zero (chain successor successor))) (transpose successor)) (recursive (chain successor successor) successor equal))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.3263120829942636,
            "num_unique_values": 166,
            "num_values_explored": 303,
            "solution": "(transpose (disjunction equal (chain (recursive (disjunction equal (chain (recursive zero zero (transpose successor)) successor)) (transpose successor) successor) successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False,  True,\n        False],\n       [ True,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True,  True,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True,  True,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction equal (chain (recursive (disjunction equal (chain (recursive zero zero (transpose successor)) successor)) (transpose successor) successor) successor)))\n)",
            "task_solution": "(transpose (disjunction equal (chain (recursive (disjunction equal (chain (recursive zero zero (transpose successor)) successor)) (transpose successor) successor) successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 50.758192757028155,
            "num_unique_values": 2968,
            "num_values_explored": 50025,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [ True, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [ True, False, False, False, False,  True,  True, False,  True,\n        False],\n       [ True, False, False, False, False, False,  True,  True, False,\n        False],\n       [ True, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive successor (chain successor successor) (disjunction successor (transpose successor))) (recursive successor zero (recursive successor equal successor)))\n)",
            "task_solution": "(recursive equal (recursive successor (chain successor successor) (disjunction successor (transpose successor))) (recursive successor zero (recursive successor equal successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.289621789008379,
            "num_unique_values": 117,
            "num_values_explored": 231,
            "solution": "(recursive (chain successor (disjunction successor (recursive zero (transpose successor) (transpose successor)))) zero (transpose (chain successor (chain successor successor))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (disjunction successor (recursive zero (transpose successor) (transpose successor)))) zero (transpose (chain successor (chain successor successor))))\n)",
            "task_solution": "(recursive (chain successor (disjunction successor (recursive zero (transpose successor) (transpose successor)))) zero (transpose (chain successor (chain successor successor))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 57.622666348004714,
            "num_unique_values": 3504,
            "num_values_explored": 50005,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (disjunction zero (disjunction successor (transpose successor))) (recursive equal (recursive equal (transpose successor) (chain successor successor)) (transpose successor)))\n)",
            "task_solution": "(chain (disjunction zero (disjunction successor (transpose successor))) (recursive equal (recursive equal (transpose successor) (chain successor successor)) (transpose successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.4659784879768267,
            "num_unique_values": 205,
            "num_values_explored": 416,
            "solution": "(recursive (transpose (chain (recursive (chain successor (chain successor successor)) (transpose successor) (disjunction zero successor)) successor)) (chain zero successor) (transpose successor))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain (recursive (chain successor (chain successor successor)) (transpose successor) (disjunction zero successor)) successor)) successor (transpose successor))\n)",
            "task_solution": "(recursive (transpose (chain (recursive (chain successor (chain successor successor)) (transpose successor) (disjunction zero successor)) successor)) successor (transpose successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 9.352747835975606,
            "num_unique_values": 944,
            "num_values_explored": 9183,
            "solution": "(recursive (transpose (chain (chain (disjunction (chain successor successor) (transpose (chain zero successor))) successor) (chain successor successor))) successor zero)",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False]])],\n    solution=(recursive (transpose (chain (disjunction (chain successor successor) (transpose (chain zero successor))) (chain successor (chain successor successor)))) successor zero)\n)",
            "task_solution": "(recursive (transpose (chain (disjunction (chain successor successor) (transpose (chain zero successor))) (chain successor (chain successor successor)))) successor zero)",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.24477660201955587,
            "num_unique_values": 113,
            "num_values_explored": 217,
            "solution": "(disjunction (chain (transpose successor) (disjunction zero successor)) (chain successor (chain (recursive (disjunction zero successor) (transpose successor) zero) successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True, False, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True, False, False,  True, False, False,\n        False],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False,  True, False, False, False,  True, False, False,  True,\n        False],\n       [False,  True, False, False, False, False,  True, False, False,\n         True],\n       [False,  True, False, False, False, False, False,  True, False,\n        False],\n       [False,  True, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction (chain (transpose successor) (disjunction zero successor)) (chain successor (chain (recursive (disjunction zero successor) (transpose successor) zero) successor)))\n)",
            "task_solution": "(disjunction (chain (transpose successor) (disjunction zero successor)) (chain successor (chain (recursive (disjunction zero successor) (transpose successor) zero) successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 59.48968900798354,
            "num_unique_values": 3366,
            "num_values_explored": 50093,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (recursive (chain successor successor) (transpose successor) successor) equal (recursive (transpose (chain successor (chain successor successor))) equal successor))\n)",
            "task_solution": "(recursive (recursive (chain successor successor) (transpose successor) successor) equal (recursive (transpose (chain successor (chain successor successor))) equal successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.3503645889577456,
            "num_unique_values": 166,
            "num_values_explored": 335,
            "solution": "(transpose (disjunction zero (chain (recursive successor (transpose (chain successor successor)) (disjunction zero successor)) (recursive successor zero (transpose successor)))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(transpose (disjunction zero (chain (recursive successor (transpose (chain successor successor)) (disjunction zero successor)) (recursive successor zero (transpose successor)))))\n)",
            "task_solution": "(transpose (disjunction zero (chain (recursive successor (transpose (chain successor successor)) (disjunction zero successor)) (recursive successor zero (transpose successor)))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 54.15406081703259,
            "num_unique_values": 3093,
            "num_values_explored": 50087,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction equal (chain successor (chain successor (recursive equal (transpose successor) zero)))) (recursive successor (chain successor successor) successor))\n)",
            "task_solution": "(chain (disjunction equal (chain successor (chain successor (recursive equal (transpose successor) zero)))) (recursive successor (chain successor successor) successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.4080718550249003,
            "num_unique_values": 206,
            "num_values_explored": 405,
            "solution": "(transpose (disjunction successor (recursive equal (chain successor (chain (recursive successor successor (chain successor (chain successor successor))) successor)) successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction successor (recursive equal (chain successor (chain successor successor)) (recursive successor (recursive successor successor (transpose successor)) successor))))\n)",
            "task_solution": "(transpose (disjunction successor (recursive equal (chain successor (chain successor successor)) (recursive successor (recursive successor successor (transpose successor)) successor))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.21419857197906822,
            "num_unique_values": 96,
            "num_values_explored": 206,
            "solution": "(chain (recursive (chain successor successor) (transpose successor) (recursive successor (chain successor successor) successor)) (disjunction zero (chain successor successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (recursive (chain successor successor) (transpose successor) (recursive successor (chain successor successor) successor)) (disjunction zero (chain successor successor)))\n)",
            "task_solution": "(chain (recursive (chain successor successor) (transpose successor) (recursive successor (chain successor successor) successor)) (disjunction zero (chain successor successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.6947251679957844,
            "num_unique_values": 256,
            "num_values_explored": 634,
            "solution": "(chain (disjunction (chain zero successor) (recursive equal (transpose successor) (recursive (chain successor (chain successor successor)) successor equal))) successor)",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n        False],\n       [False,  True,  True, False, False, False,  True, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False]])],\n    solution=(chain (recursive (disjunction equal (chain zero successor)) (transpose successor) (recursive (chain successor (chain successor successor)) successor equal)) successor)\n)",
            "task_solution": "(chain (recursive (disjunction equal (chain zero successor)) (transpose successor) (recursive (chain successor (chain successor successor)) successor equal)) successor)",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.7279997519799508,
            "num_unique_values": 279,
            "num_values_explored": 718,
            "solution": "(recursive (recursive successor (transpose (chain (disjunction zero successor) (chain successor successor))) (recursive equal equal successor)) successor (chain zero successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (recursive successor (transpose successor) (chain (disjunction zero successor) successor)) (transpose successor) (recursive (transpose successor) (transpose successor) zero))\n)",
            "task_solution": "(recursive (recursive successor (transpose successor) (chain (disjunction zero successor) successor)) (transpose successor) (recursive (transpose successor) (transpose successor) zero))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.2606670419918373,
            "num_unique_values": 116,
            "num_values_explored": 231,
            "solution": "(recursive (disjunction equal (recursive (chain zero successor) (transpose successor) (transpose (disjunction equal (chain successor successor))))) zero (transpose successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False,  True, False,  True,  True,  True, False,  True, False,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True, False,  True, False,  True,  True,  True, False,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(recursive (disjunction equal (recursive (chain zero successor) (transpose successor) (transpose (disjunction equal (chain successor successor))))) zero (transpose successor))\n)",
            "task_solution": "(recursive (disjunction equal (recursive (chain zero successor) (transpose successor) (transpose (disjunction equal (chain successor successor))))) zero (transpose successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.24531177198514342,
            "num_unique_values": 118,
            "num_values_explored": 237,
            "solution": "(recursive (disjunction (transpose successor) (chain successor (chain (recursive equal (transpose successor) zero) successor))) equal (transpose (chain successor (chain successor successor))))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False,  True,  True, False,  True,  True,\n        False],\n       [ True,  True, False,  True,  True, False,  True,  True, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False,  True,  True, False,  True,  True, False,  True,  True,\n        False],\n       [False,  True, False,  True,  True, False,  True,  True, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False,  True, False, False,  True,  True, False,  True,  True,\n        False],\n       [False,  True, False, False,  True, False,  True,  True, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (chain successor (chain (recursive equal (transpose successor) zero) (recursive successor successor (transpose (chain successor successor))))))\n)",
            "task_solution": "(disjunction (transpose successor) (chain successor (chain (recursive equal (transpose successor) zero) (recursive successor successor (transpose (chain successor successor))))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 23.256581442023162,
            "num_unique_values": 2185,
            "num_values_explored": 23488,
            "solution": "(recursive (transpose successor) equal (recursive equal (disjunction successor (transpose successor)) (transpose (chain (disjunction zero successor) (chain successor successor)))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) equal (recursive equal (disjunction successor (transpose successor)) (transpose (chain (disjunction zero successor) (chain successor successor)))))\n)",
            "task_solution": "(recursive (transpose successor) equal (recursive equal (disjunction successor (transpose successor)) (transpose (chain (disjunction zero successor) (chain successor successor)))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 50.92895495297853,
            "num_unique_values": 2086,
            "num_values_explored": 50010,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive successor (recursive successor (chain successor (chain successor successor)) (recursive successor (chain successor successor) successor)) successor))\n)",
            "task_solution": "(chain successor (recursive successor (recursive successor (chain successor (chain successor successor)) (recursive successor (chain successor successor) successor)) successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 53.09119399503106,
            "num_unique_values": 2821,
            "num_values_explored": 50012,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n         True],\n       [False,  True, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain (recursive successor successor (recursive (disjunction equal (recursive successor (transpose successor) successor)) zero (transpose successor))) successor))\n)",
            "task_solution": "(disjunction equal (chain (recursive successor successor (recursive (disjunction equal (recursive successor (transpose successor) successor)) zero (transpose successor))) successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.20760852401144803,
            "num_unique_values": 104,
            "num_values_explored": 196,
            "solution": "(chain (recursive (recursive zero (transpose successor) (transpose successor)) zero (transpose successor)) (chain (recursive equal (transpose successor) zero) successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive (recursive zero (transpose successor) (transpose successor)) zero (transpose successor)) (chain (recursive equal (transpose successor) zero) successor))\n)",
            "task_solution": "(chain (recursive (recursive zero (transpose successor) (transpose successor)) zero (transpose successor)) (chain (recursive equal (transpose successor) zero) successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.647996312007308,
            "num_unique_values": 281,
            "num_values_explored": 647,
            "solution": "(recursive (recursive successor (chain zero successor) (transpose successor)) (transpose successor) (recursive (chain successor successor) successor (chain successor successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n         True],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False]])],\n    solution=(recursive (recursive successor (chain zero successor) (transpose successor)) (transpose successor) (recursive (chain successor successor) successor (chain successor successor)))\n)",
            "task_solution": "(recursive (recursive successor (chain zero successor) (transpose successor)) (transpose successor) (recursive (chain successor successor) successor (chain successor successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.617435452004429,
            "num_unique_values": 246,
            "num_values_explored": 606,
            "solution": "(transpose (chain (disjunction zero (chain successor successor)) (chain successor (recursive successor (recursive zero (transpose successor) (transpose successor)) successor))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True,  True, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False]])],\n    solution=(transpose (chain (disjunction zero (chain successor successor)) (chain successor (recursive successor (recursive zero (transpose successor) (transpose successor)) successor))))\n)",
            "task_solution": "(transpose (chain (disjunction zero (chain successor successor)) (chain successor (recursive successor (recursive zero (transpose successor) (transpose successor)) successor))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.34953634697012603,
            "num_unique_values": 186,
            "num_values_explored": 366,
            "solution": "(disjunction successor (disjunction equal (transpose (recursive (recursive successor successor (transpose (chain successor successor))) successor (recursive successor successor equal)))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True, False,  True,  True, False,  True,  True,  True,\n        False],\n       [False,  True, False, False,  True, False, False,  True,  True,\n         True],\n       [False, False,  True, False, False,  True, False, False,  True,\n         True]])],\n    solution=(disjunction successor (transpose (disjunction equal (recursive (recursive successor successor (transpose (chain successor successor))) successor (recursive successor successor equal)))))\n)",
            "task_solution": "(disjunction successor (transpose (disjunction equal (recursive (recursive successor successor (transpose (chain successor successor))) successor (recursive successor successor equal)))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.23242083902005106,
            "num_unique_values": 126,
            "num_values_explored": 239,
            "solution": "(transpose (recursive successor (transpose (chain successor successor)) (recursive (chain successor successor) successor (recursive successor (chain successor successor) successor))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True, False, False,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (recursive (chain successor successor) successor (recursive successor (chain successor successor) successor)) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (transpose successor) (recursive (chain successor successor) successor (recursive successor (chain successor successor) successor)) (transpose (chain successor successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.4694693580386229,
            "num_unique_values": 196,
            "num_values_explored": 445,
            "solution": "(recursive (transpose (chain (disjunction zero successor) (chain (disjunction equal successor) (recursive successor (transpose successor) (chain successor successor))))) zero successor)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True, False,  True,  True, False,  True,  True,\n        False],\n       [ True, False,  True,  True, False,  True,  True, False, False,\n        False],\n       [ True,  True, False,  True,  True, False,  True,  True, False,\n        False],\n       [False,  True,  True, False,  True,  True, False,  True,  True,\n        False],\n       [False, False,  True,  True, False,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True, False,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False]])],\n    solution=(transpose (chain (disjunction zero successor) (chain (disjunction successor equal) (recursive successor (transpose successor) (chain (disjunction zero successor) successor)))))\n)",
            "task_solution": "(transpose (chain (disjunction zero successor) (chain (disjunction successor equal) (recursive successor (transpose successor) (chain (disjunction zero successor) successor)))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 50.678364108956885,
            "num_unique_values": 2419,
            "num_values_explored": 50073,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction zero successor) (recursive equal (recursive (recursive successor (transpose successor) (chain successor successor)) zero (transpose successor)) successor))\n)",
            "task_solution": "(chain (disjunction zero successor) (recursive equal (recursive (recursive successor (transpose successor) (chain successor successor)) zero (transpose successor)) successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.25224777398398146,
            "num_unique_values": 126,
            "num_values_explored": 243,
            "solution": "(transpose (chain (recursive successor (chain (transpose successor) successor) successor) (recursive zero zero (recursive successor successor (chain successor successor)))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (chain (recursive successor (chain (transpose successor) successor) successor) (recursive zero zero (recursive successor successor (chain successor successor)))))\n)",
            "task_solution": "(transpose (chain (recursive successor (chain (transpose successor) successor) successor) (recursive zero zero (recursive successor successor (chain successor successor)))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.2938821379793808,
            "num_unique_values": 146,
            "num_values_explored": 308,
            "solution": "(disjunction zero (chain successor (chain (disjunction equal (recursive successor successor (chain successor successor))) (recursive successor zero (transpose successor)))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction zero (chain successor (chain (disjunction equal (recursive successor successor (chain successor successor))) (recursive successor zero (transpose successor)))))\n)",
            "task_solution": "(disjunction zero (chain successor (chain (disjunction equal (recursive successor successor (chain successor successor))) (recursive successor zero (transpose successor)))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 57.72718837601133,
            "num_unique_values": 3302,
            "num_values_explored": 50060,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False, False,  True,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False]])],\n    solution=(transpose (chain successor (recursive (recursive (chain successor successor) zero successor) (transpose (chain successor (chain successor successor))) (transpose successor))))\n)",
            "task_solution": "(transpose (chain successor (recursive (recursive (chain successor successor) zero successor) (transpose (chain successor (chain successor successor))) (transpose successor))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.25449340499471873,
            "num_unique_values": 117,
            "num_values_explored": 243,
            "solution": "(recursive (chain successor (recursive (disjunction successor (transpose successor)) (recursive successor equal successor) zero)) successor (transpose (chain successor successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True,  True, False,  True,\n         True],\n       [ True,  True,  True,  True,  True, False,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True, False,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True,  True, False,\n         True],\n       [ True, False,  True, False,  True,  True, False,  True,  True,\n        False],\n       [ True, False,  True, False, False, False,  True, False,  True,\n         True],\n       [ True, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (disjunction successor (transpose successor))) successor (recursive (transpose (disjunction zero (chain successor successor))) zero (transpose successor)))\n)",
            "task_solution": "(recursive (chain successor (disjunction successor (transpose successor))) successor (recursive (transpose (disjunction zero (chain successor successor))) zero (transpose successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 55.52459015999921,
            "num_unique_values": 3830,
            "num_values_explored": 50017,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (recursive successor successor (recursive successor (transpose (chain successor successor)) (recursive (chain successor successor) equal successor))))\n)",
            "task_solution": "(disjunction (transpose successor) (recursive successor successor (recursive successor (transpose (chain successor successor)) (recursive (chain successor successor) equal successor))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.22877704404527321,
            "num_unique_values": 101,
            "num_values_explored": 211,
            "solution": "(chain (transpose (recursive successor zero (disjunction successor (transpose successor)))) (disjunction successor (chain (recursive successor (transpose successor) successor) zero)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n        False],\n       [ True,  True, False, False, False, False,  True, False, False,\n        False],\n       [False,  True, False, False, False, False, False,  True, False,\n        False],\n       [ True,  True, False, False, False, False, False, False,  True,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (recursive (transpose successor) (disjunction successor (transpose successor)) zero) (chain successor (recursive equal (transpose (chain successor successor)) zero)))\n)",
            "task_solution": "(chain (recursive (transpose successor) (disjunction successor (transpose successor)) zero) (chain successor (recursive equal (transpose (chain successor successor)) zero)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.31929696403676644,
            "num_unique_values": 136,
            "num_values_explored": 275,
            "solution": "(chain (recursive (recursive (disjunction equal (chain successor (chain successor successor))) (transpose successor) equal) zero successor) (disjunction zero successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (recursive (chain (disjunction equal (chain successor (chain successor successor))) (disjunction zero successor)) (transpose successor) equal) zero successor)\n)",
            "task_solution": "(recursive (recursive (chain (disjunction equal (chain successor (chain successor successor))) (disjunction zero successor)) (transpose successor) equal) zero successor)",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 56.53555949399015,
            "num_unique_values": 3534,
            "num_values_explored": 50023,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive successor (chain (transpose (chain successor (chain successor (chain successor successor)))) (recursive (chain successor successor) zero successor)) equal)\n)",
            "task_solution": "(recursive successor (chain (transpose (chain successor (chain successor (chain successor successor)))) (recursive (chain successor successor) zero successor)) equal)",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.3084326629759744,
            "num_unique_values": 161,
            "num_values_explored": 291,
            "solution": "(recursive (disjunction (transpose successor) (recursive successor equal successor)) (transpose (chain successor (chain successor (recursive equal (transpose successor) zero)))) successor)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (disjunction successor (transpose successor)) (transpose (disjunction equal (chain successor (chain successor (recursive equal (transpose successor) zero))))) successor)\n)",
            "task_solution": "(recursive (disjunction successor (transpose successor)) (transpose (disjunction equal (chain successor (chain successor (recursive equal (transpose successor) zero))))) successor)",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.4878460449981503,
            "num_unique_values": 198,
            "num_values_explored": 411,
            "solution": "(recursive (transpose (chain (disjunction zero (chain successor (chain successor successor))) successor)) successor (disjunction successor (chain (transpose successor) zero)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False]])],\n    solution=(recursive (transpose (chain (disjunction zero (chain successor (chain successor successor))) successor)) successor (disjunction successor (transpose (chain zero successor))))\n)",
            "task_solution": "(recursive (transpose (chain (disjunction zero (chain successor (chain successor successor))) successor)) successor (disjunction successor (transpose (chain zero successor))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.2141518190037459,
            "num_unique_values": 106,
            "num_values_explored": 209,
            "solution": "(disjunction (transpose successor) (chain successor (disjunction (chain successor (chain successor successor)) (recursive (transpose successor) successor (chain successor successor)))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False, False, False,  True, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False,  True,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n         True],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (chain successor (disjunction (chain successor (chain successor successor)) (recursive (transpose successor) successor (chain successor successor)))))\n)",
            "task_solution": "(disjunction (transpose successor) (chain successor (disjunction (chain successor (chain successor successor)) (recursive (transpose successor) successor (chain successor successor)))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.2720053169759922,
            "num_unique_values": 141,
            "num_values_explored": 255,
            "solution": "(chain (recursive (disjunction successor (disjunction equal (chain (recursive successor (chain successor successor) successor) (chain successor successor)))) zero successor) successor)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True, False,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True, False,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True, False,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction successor (disjunction equal (chain (recursive successor (disjunction zero (chain successor successor)) successor) (chain successor successor)))) successor)\n)",
            "task_solution": "(chain (disjunction successor (disjunction equal (chain (recursive successor (disjunction zero (chain successor successor)) successor) (chain successor successor)))) successor)",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 57.602721596020274,
            "num_unique_values": 2665,
            "num_values_explored": 50079,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor successor (transpose successor)) (transpose (chain (disjunction successor equal) (recursive equal (transpose successor) (transpose (chain successor successor))))))\n)",
            "task_solution": "(chain (recursive successor successor (transpose successor)) (transpose (chain (disjunction successor equal) (recursive equal (transpose successor) (transpose (chain successor successor))))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 53.589122778968886,
            "num_unique_values": 3004,
            "num_values_explored": 50060,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (transpose (chain zero successor)) (chain successor (transpose (chain successor successor))) (recursive (transpose (chain successor successor)) successor (transpose successor)))\n)",
            "task_solution": "(recursive (transpose (chain zero successor)) (chain successor (transpose (chain successor successor))) (recursive (transpose (chain successor successor)) successor (transpose successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 19.971216421981808,
            "num_unique_values": 1798,
            "num_values_explored": 18786,
            "solution": "(recursive (disjunction successor (transpose (chain successor (recursive successor successor (recursive successor (chain successor successor) successor))))) equal (chain successor successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False]])],\n    solution=(recursive (disjunction successor (recursive (transpose (chain successor successor)) (recursive successor (chain successor successor) successor) successor)) equal (chain successor successor))\n)",
            "task_solution": "(recursive (disjunction successor (recursive (transpose (chain successor successor)) (recursive successor (chain successor successor) successor) successor)) equal (chain successor successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.41199250402860343,
            "num_unique_values": 176,
            "num_values_explored": 399,
            "solution": "(chain successor (chain (recursive (chain successor successor) (chain (transpose (chain successor (chain successor successor))) (disjunction zero successor)) successor) successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False,  True,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False,  True,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain (recursive (chain successor successor) (chain (transpose (chain successor (chain successor successor))) (disjunction zero successor)) successor) successor))\n)",
            "task_solution": "(chain successor (chain (recursive (chain successor successor) (chain (transpose (chain successor (chain successor successor))) (disjunction zero successor)) successor) successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.3693153820349835,
            "num_unique_values": 166,
            "num_values_explored": 352,
            "solution": "(transpose (disjunction (recursive successor (transpose successor) (transpose (chain successor successor))) (recursive (chain successor successor) (transpose successor) (chain successor successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [ True, False,  True, False, False,  True, False, False,  True,\n        False],\n       [ True,  True, False,  True, False, False,  True, False, False,\n         True],\n       [False,  True,  True, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True,  True, False,  True, False, False,  True,\n        False],\n       [False, False,  True,  True,  True, False,  True, False, False,\n         True],\n       [False, False, False,  True,  True,  True, False,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(transpose (disjunction (recursive successor (transpose successor) (transpose (chain successor successor))) (recursive (chain successor successor) (transpose successor) (chain successor successor))))\n)",
            "task_solution": "(transpose (disjunction (recursive successor (transpose successor) (transpose (chain successor successor))) (recursive (chain successor successor) (transpose successor) (chain successor successor))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.3185364480013959,
            "num_unique_values": 149,
            "num_values_explored": 314,
            "solution": "(disjunction (transpose successor) (chain (disjunction (chain successor successor) (recursive (transpose (chain (disjunction zero successor) successor)) (transpose successor) successor)) successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n        False],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False, False, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False, False, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (chain (disjunction (chain successor successor) (recursive (transpose (chain (disjunction zero successor) successor)) (transpose successor) successor)) successor))\n)",
            "task_solution": "(disjunction (transpose successor) (chain (disjunction (chain successor successor) (recursive (transpose (chain (disjunction zero successor) successor)) (transpose successor) successor)) successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 55.43647272896487,
            "num_unique_values": 2774,
            "num_values_explored": 50052,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True, False,  True, False, False, False,\n        False],\n       [ True, False, False,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True, False, False,  True,  True, False,  True, False,\n        False],\n       [ True, False,  True, False, False,  True,  True, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True,  True, False,\n         True],\n       [ True,  True, False, False,  True, False, False,  True,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (recursive successor (transpose (chain successor successor)) (disjunction zero (chain (transpose (disjunction zero successor)) (chain successor successor)))))\n)",
            "task_solution": "(disjunction (transpose successor) (recursive successor (transpose (chain successor successor)) (disjunction zero (chain (transpose (disjunction zero successor)) (chain successor successor)))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 59.996187344018836,
            "num_unique_values": 3515,
            "num_values_explored": 50085,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False, False, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False, False, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False, False, False,  True, False,\n         True],\n       [False, False, False, False,  True, False, False, False,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (disjunction (transpose successor) (chain (disjunction successor (transpose successor)) (chain (disjunction zero (chain successor successor)) (chain successor successor)))))\n)",
            "task_solution": "(chain successor (disjunction (transpose successor) (chain (disjunction successor (transpose successor)) (chain (disjunction zero (chain successor successor)) (chain successor successor)))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 55.74907229398377,
            "num_unique_values": 2649,
            "num_values_explored": 50065,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True, False,  True,  True,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True,  True,  True, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True,  True,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (transpose (disjunction successor (chain (transpose (disjunction zero successor)) (recursive successor (recursive successor zero (transpose successor)) (transpose successor))))))\n)",
            "task_solution": "(chain successor (transpose (disjunction successor (chain (transpose (disjunction zero successor)) (recursive successor (recursive successor zero (transpose successor)) (transpose successor))))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 53.55952791898744,
            "num_unique_values": 2667,
            "num_values_explored": 50004,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False,  True, False, False,\n         True],\n       [ True,  True, False,  True, False, False,  True, False, False,\n         True],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False]])],\n    solution=(transpose (chain (recursive (chain successor (disjunction successor (transpose successor))) (transpose (chain successor (chain successor successor))) zero) (disjunction successor equal)))\n)",
            "task_solution": "(transpose (chain (recursive (chain successor (disjunction successor (transpose successor))) (transpose (chain successor (chain successor successor))) zero) (disjunction successor equal)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 62.497805055987556,
            "num_unique_values": 3814,
            "num_values_explored": 50011,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(recursive (chain (transpose successor) (recursive (recursive successor (transpose (chain successor successor)) equal) zero (transpose successor))) successor (chain successor successor))\n)",
            "task_solution": "(recursive (chain (transpose successor) (recursive (recursive successor (transpose (chain successor successor)) equal) zero (transpose successor))) successor (chain successor successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 1.6889731819974259,
            "num_unique_values": 535,
            "num_values_explored": 1937,
            "solution": "(chain (chain successor (recursive equal (transpose (chain successor (chain successor (chain successor (recursive successor (transpose successor) successor))))) successor)) successor)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n         True],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain (recursive equal (transpose (chain successor (chain successor (chain successor (recursive successor (transpose successor) successor))))) successor) successor))\n)",
            "task_solution": "(chain successor (chain (recursive equal (transpose (chain successor (chain successor (chain successor (recursive successor (transpose successor) successor))))) successor) successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 52.0190928200027,
            "num_unique_values": 2167,
            "num_values_explored": 50057,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive successor (recursive (transpose zero) (transpose (chain (recursive successor (transpose successor) successor) (chain successor successor))) (transpose successor)) (transpose successor))\n)",
            "task_solution": "(recursive successor (recursive (transpose zero) (transpose (chain (recursive successor (transpose successor) successor) (chain successor successor))) (transpose successor)) (transpose successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 3.9733544350019656,
            "num_unique_values": 632,
            "num_values_explored": 3943,
            "solution": "(chain (disjunction zero (chain (recursive (chain successor (transpose (chain successor (chain successor (chain successor successor))))) successor equal) successor)) successor)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (disjunction zero (chain successor (chain (transpose (chain successor (chain successor (chain successor successor)))) successor))) successor) successor equal)\n)",
            "task_solution": "(recursive (chain (disjunction zero (chain successor (chain (transpose (chain successor (chain successor (chain successor successor)))) successor))) successor) successor equal)",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.2513597600045614,
            "num_unique_values": 106,
            "num_values_explored": 230,
            "solution": "(disjunction (transpose (chain (recursive zero zero (transpose successor)) successor)) (chain (recursive equal (chain successor successor) successor) (chain successor successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction (transpose (chain (recursive zero zero (transpose successor)) successor)) (chain (recursive equal (chain successor successor) successor) (chain successor successor)))\n)",
            "task_solution": "(disjunction (transpose (chain (recursive zero zero (transpose successor)) successor)) (chain (recursive equal (chain successor successor) successor) (chain successor successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 53.146662643994205,
            "num_unique_values": 2292,
            "num_values_explored": 50033,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True, False,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True]])],\n    solution=(recursive (disjunction zero successor) (recursive equal (transpose successor) successor) (recursive (transpose (chain successor (chain successor successor))) (transpose successor) zero))\n)",
            "task_solution": "(recursive (disjunction zero successor) (recursive equal (transpose successor) successor) (recursive (transpose (chain successor (chain successor successor))) (transpose successor) zero))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.8143798399833031,
            "num_unique_values": 267,
            "num_values_explored": 820,
            "solution": "(disjunction zero (chain (recursive (transpose (chain successor (disjunction successor (recursive zero (transpose successor) (transpose successor))))) equal successor) (chain successor successor)))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (transpose zero) (recursive (transpose (chain successor successor)) equal successor) (recursive (transpose (chain successor successor)) equal (chain zero successor)))\n)",
            "task_solution": "(recursive (transpose zero) (recursive (transpose (chain successor successor)) equal successor) (recursive (transpose (chain successor successor)) equal (chain zero successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 51.46288619504776,
            "num_unique_values": 1753,
            "num_values_explored": 50055,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (recursive (chain successor (chain successor successor)) (recursive zero zero (transpose successor)) successor) (transpose successor) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (recursive (chain successor (chain successor successor)) (recursive zero zero (transpose successor)) successor) (transpose successor) (transpose (chain successor successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 55.637145922053605,
            "num_unique_values": 2431,
            "num_values_explored": 50069,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (chain (recursive (chain zero (recursive successor successor (transpose successor))) (transpose successor) (recursive successor (chain successor successor) successor)) successor))\n)",
            "task_solution": "(transpose (chain (recursive (chain zero (recursive successor successor (transpose successor))) (transpose successor) (recursive successor (chain successor successor) successor)) successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 54.944730391027406,
            "num_unique_values": 2014,
            "num_values_explored": 50069,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain zero (recursive successor (chain successor successor) successor)) (recursive (transpose successor) (transpose (chain successor successor)) (transpose successor)) successor)\n)",
            "task_solution": "(recursive (chain zero (recursive successor (chain successor successor) successor)) (recursive (transpose successor) (transpose (chain successor successor)) (transpose successor)) successor)",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 57.0395914419787,
            "num_unique_values": 4182,
            "num_values_explored": 50059,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (chain (transpose (chain successor successor)) successor) (transpose successor) (recursive (disjunction zero successor) successor (chain successor (chain successor successor))))\n)",
            "task_solution": "(recursive (chain (transpose (chain successor successor)) successor) (transpose successor) (recursive (disjunction zero successor) successor (chain successor (chain successor successor))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.36554258700925857,
            "num_unique_values": 156,
            "num_values_explored": 336,
            "solution": "(recursive (recursive (chain (transpose successor) successor) successor (chain successor successor)) successor (chain (transpose successor) (recursive successor successor (transpose successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (recursive (chain (transpose successor) successor) successor (chain successor successor)) successor (transpose (chain (recursive successor (transpose successor) successor) successor)))\n)",
            "task_solution": "(recursive (recursive (chain (transpose successor) successor) successor (chain successor successor)) successor (transpose (chain (recursive successor (transpose successor) successor) successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.3453797879628837,
            "num_unique_values": 139,
            "num_values_explored": 308,
            "solution": "(chain (disjunction (transpose successor) successor) (disjunction (transpose successor) (chain (recursive (disjunction equal successor) (transpose successor) zero) (chain successor successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True, False,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [False, False,  True, False, False,  True, False,  True,  True,\n         True],\n       [False, False,  True, False, False, False,  True, False,  True,\n         True],\n       [False, False,  True, False, False, False, False,  True, False,\n        False]])],\n    solution=(chain (disjunction successor (transpose successor)) (disjunction (transpose successor) (chain (recursive (disjunction successor equal) (transpose successor) zero) (chain successor successor))))\n)",
            "task_solution": "(chain (disjunction successor (transpose successor)) (disjunction (transpose successor) (chain (recursive (disjunction successor equal) (transpose successor) zero) (chain successor successor))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 54.43227621499682,
            "num_unique_values": 2730,
            "num_values_explored": 50021,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain (recursive (chain (recursive successor equal successor) (chain successor successor)) successor successor) (chain (disjunction zero successor) successor)))\n)",
            "task_solution": "(disjunction equal (chain (recursive (chain (recursive successor equal successor) (chain successor successor)) successor successor) (chain (disjunction zero successor) successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.3965757430414669,
            "num_unique_values": 204,
            "num_values_explored": 364,
            "solution": "(recursive (transpose (disjunction equal (chain (disjunction equal (recursive successor successor (chain successor (chain successor successor)))) (chain successor successor)))) successor zero)",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n         True]])],\n    solution=(transpose (disjunction equal (chain (disjunction zero (chain (disjunction equal (recursive successor successor (chain successor (chain successor successor)))) successor)) successor)))\n)",
            "task_solution": "(transpose (disjunction equal (chain (disjunction zero (chain (disjunction equal (recursive successor successor (chain successor (chain successor successor)))) successor)) successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 58.11733888997696,
            "num_unique_values": 3180,
            "num_values_explored": 50009,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [ True,  True,  True,  True,  True, False,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n         True]])],\n    solution=(disjunction (transpose (chain (recursive successor (transpose successor) successor) successor)) (recursive successor (recursive successor (transpose successor) successor) (chain successor successor)))\n)",
            "task_solution": "(disjunction (transpose (chain (recursive successor (transpose successor) successor) successor)) (recursive successor (recursive successor (transpose successor) successor) (chain successor successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.37327336403541267,
            "num_unique_values": 166,
            "num_values_explored": 379,
            "solution": "(transpose (disjunction equal (chain (disjunction successor (transpose (chain successor successor))) (recursive (chain successor (chain successor successor)) successor (transpose successor)))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False, False,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True,  True, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True, False,  True,  True, False,\n        False],\n       [ True, False,  True,  True,  True,  True, False,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n         True]])],\n    solution=(transpose (disjunction equal (chain (disjunction successor (transpose (chain successor successor))) (recursive (chain successor (chain successor successor)) successor (transpose successor)))))\n)",
            "task_solution": "(transpose (disjunction equal (chain (disjunction successor (transpose (chain successor successor))) (recursive (chain successor (chain successor successor)) successor (transpose successor)))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 56.07503209600691,
            "num_unique_values": 3520,
            "num_values_explored": 50042,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain (recursive (recursive (transpose successor) (transpose successor) (disjunction zero successor)) (chain successor successor) (disjunction successor equal)) successor))\n)",
            "task_solution": "(chain successor (chain (recursive (recursive (transpose successor) (transpose successor) (disjunction zero successor)) (chain successor successor) (disjunction successor equal)) successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 63.789445209957194,
            "num_unique_values": 3686,
            "num_values_explored": 50035,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (chain (disjunction equal (chain (transpose successor) (chain successor successor))) (disjunction equal (chain successor (chain successor successor)))) equal successor)\n)",
            "task_solution": "(recursive (chain (disjunction equal (chain (transpose successor) (chain successor successor))) (disjunction equal (chain successor (chain successor successor)))) equal successor)",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 55.617219663981814,
            "num_unique_values": 2741,
            "num_values_explored": 50014,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (transpose (disjunction zero successor)) (recursive (transpose successor) (recursive zero zero (recursive successor equal (chain successor successor))) successor) successor)\n)",
            "task_solution": "(recursive (transpose (disjunction zero successor)) (recursive (transpose successor) (recursive zero zero (recursive successor equal (chain successor successor))) successor) successor)",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 59.94885782600613,
            "num_unique_values": 3617,
            "num_values_explored": 50010,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n         True]])],\n    solution=(disjunction (recursive equal (recursive successor successor (chain successor successor)) successor) (chain (recursive successor (transpose successor) successor) (chain successor successor)))\n)",
            "task_solution": "(disjunction (recursive equal (recursive successor successor (chain successor successor)) successor) (chain (recursive successor (transpose successor) successor) (chain successor successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 59.51053618802689,
            "num_unique_values": 3567,
            "num_values_explored": 50092,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True, False, False,  True, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False,  True, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False,  True,  True, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n         True],\n       [ True,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False,  True,  True, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n        False]])],\n    solution=(recursive (chain successor (chain successor successor)) (recursive successor (recursive (transpose (chain successor successor)) equal (chain zero successor)) successor) successor)\n)",
            "task_solution": "(recursive (chain successor (chain successor successor)) (recursive successor (recursive (transpose (chain successor successor)) equal (chain zero successor)) successor) successor)",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.23686494602588937,
            "num_unique_values": 107,
            "num_values_explored": 208,
            "solution": "(disjunction (transpose successor) (chain (disjunction zero (chain (disjunction successor (transpose successor)) (recursive (chain successor successor) zero (transpose successor)))) successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False, False,  True, False,  True, False, False,\n        False],\n       [False, False,  True, False, False,  True, False,  True, False,\n        False],\n       [False, False, False,  True, False, False,  True, False,  True,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n         True],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (chain (disjunction zero (chain (disjunction successor (transpose successor)) (recursive (chain successor successor) zero (transpose successor)))) successor))\n)",
            "task_solution": "(disjunction (transpose successor) (chain (disjunction zero (chain (disjunction successor (transpose successor)) (recursive (chain successor successor) zero (transpose successor)))) successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.24565041199093685,
            "num_unique_values": 121,
            "num_values_explored": 230,
            "solution": "(recursive (chain zero (chain successor (chain successor successor))) (transpose (chain successor (chain successor successor))) (disjunction equal (chain successor successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain zero (chain successor (chain successor successor))) (transpose (chain successor (chain successor successor))) (recursive equal successor (transpose successor)))\n)",
            "task_solution": "(recursive (chain zero (chain successor (chain successor successor))) (transpose (chain successor (chain successor successor))) (recursive equal successor (transpose successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.40215616300702095,
            "num_unique_values": 206,
            "num_values_explored": 391,
            "solution": "(transpose (disjunction equal (chain successor (chain successor (disjunction equal (chain (recursive successor (recursive equal (transpose successor) zero) successor) successor))))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n         True]])],\n    solution=(transpose (disjunction equal (chain successor (chain successor (disjunction equal (chain (recursive successor (recursive equal (transpose successor) zero) successor) successor))))))\n)",
            "task_solution": "(transpose (disjunction equal (chain successor (chain successor (disjunction equal (chain (recursive successor (recursive equal (transpose successor) zero) successor) successor))))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.19950627797516063,
            "num_unique_values": 99,
            "num_values_explored": 192,
            "solution": "(chain (recursive (chain successor successor) (transpose (disjunction zero (chain successor successor))) successor) (disjunction zero (chain successor (chain successor successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [ True, False, False,  True,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n         True],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n         True],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False]])],\n    solution=(chain (recursive (chain successor successor) (transpose (disjunction zero (chain successor successor))) successor) (disjunction zero (chain successor (chain successor successor))))\n)",
            "task_solution": "(chain (recursive (chain successor successor) (transpose (disjunction zero (chain successor successor))) successor) (disjunction zero (chain successor (chain successor successor))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.2803273290046491,
            "num_unique_values": 144,
            "num_values_explored": 275,
            "solution": "(chain (disjunction zero successor) (disjunction successor (recursive equal (chain (transpose (chain successor successor)) (recursive successor zero (transpose successor))) successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True,  True, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False,  True,  True,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n         True],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction zero successor) (disjunction successor (recursive equal (chain (transpose (chain successor successor)) (recursive successor zero (transpose successor))) successor)))\n)",
            "task_solution": "(chain (disjunction zero successor) (disjunction successor (recursive equal (chain (transpose (chain successor successor)) (recursive successor zero (transpose successor))) successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 57.935634432011284,
            "num_unique_values": 3415,
            "num_values_explored": 50012,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True]])],\n    solution=(transpose (disjunction successor (disjunction equal (recursive (disjunction (chain successor successor) (transpose (chain successor successor))) (recursive equal successor equal) successor))))\n)",
            "task_solution": "(transpose (disjunction successor (disjunction equal (recursive (disjunction (chain successor successor) (transpose (chain successor successor))) (recursive equal successor equal) successor))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.26934660697588697,
            "num_unique_values": 116,
            "num_values_explored": 236,
            "solution": "(recursive (disjunction (chain zero successor) (chain (transpose successor) (recursive successor equal successor))) (recursive zero (transpose successor) (transpose successor)) (transpose successor))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(disjunction (recursive (chain (transpose successor) successor) equal successor) (recursive (chain zero successor) (recursive equal (transpose successor) successor) (transpose successor)))\n)",
            "task_solution": "(disjunction (recursive (chain (transpose successor) successor) equal successor) (recursive (chain zero successor) (recursive equal (transpose successor) successor) (transpose successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.25292088702553883,
            "num_unique_values": 117,
            "num_values_explored": 233,
            "solution": "(recursive (chain (recursive equal (recursive equal zero (transpose successor)) (chain (disjunction zero successor) successor)) successor) (transpose successor) (chain zero successor))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (recursive successor (transpose successor) (recursive successor (transpose (chain zero successor)) equal)) zero (recursive equal successor (chain successor successor)))\n)",
            "task_solution": "(recursive (recursive successor (transpose successor) (recursive successor (transpose (chain zero successor)) equal)) zero (recursive equal successor (chain successor successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 55.75159576401347,
            "num_unique_values": 2950,
            "num_values_explored": 50005,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True, False, False, False, False,  True,  True,  True, False,\n        False],\n       [ True,  True,  True, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (recursive successor (chain (recursive successor equal (chain successor successor)) zero) (transpose (chain successor successor))) (chain successor successor))\n)",
            "task_solution": "(recursive successor (recursive successor (chain (recursive successor equal (chain successor successor)) zero) (transpose (chain successor successor))) (chain successor successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.282104590034578,
            "num_unique_values": 139,
            "num_values_explored": 275,
            "solution": "(chain (recursive (chain successor successor) (chain successor successor) (recursive equal successor (recursive (transpose successor) (chain successor successor) successor))) successor)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain (recursive successor (chain successor successor) (recursive equal successor (recursive (transpose successor) (chain successor successor) successor))) successor))\n)",
            "task_solution": "(chain successor (chain (recursive successor (chain successor successor) (recursive equal successor (recursive (transpose successor) (chain successor successor) successor))) successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 42.267870807030704,
            "num_unique_values": 2699,
            "num_values_explored": 36390,
            "solution": "(chain (disjunction equal successor) (transpose (chain successor (recursive (transpose (chain successor (disjunction (transpose successor) successor))) successor (transpose (chain successor successor))))))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True, False,  True,  True, False,  True, False,\n        False]])],\n    solution=(chain (disjunction successor equal) (recursive (chain successor (transpose (chain successor (disjunction successor (transpose successor))))) (transpose (chain successor successor)) successor))\n)",
            "task_solution": "(chain (disjunction successor equal) (recursive (chain successor (transpose (chain successor (disjunction successor (transpose successor))))) (transpose (chain successor successor)) successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.2778266479726881,
            "num_unique_values": 144,
            "num_values_explored": 275,
            "solution": "(chain (recursive equal successor (recursive successor successor (transpose successor))) (chain (disjunction successor (transpose (chain successor successor))) (disjunction zero successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (recursive equal successor (recursive successor successor (transpose successor))) (chain (disjunction successor (transpose (chain successor successor))) (disjunction zero successor)))\n)",
            "task_solution": "(chain (recursive equal successor (recursive successor successor (transpose successor))) (chain (disjunction successor (transpose (chain successor successor))) (disjunction zero successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.5560178809682839,
            "num_unique_values": 216,
            "num_values_explored": 557,
            "solution": "(chain successor (disjunction (recursive successor successor (chain successor successor)) (recursive equal (transpose successor) (recursive zero (transpose successor) (transpose successor)))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive (disjunction equal (recursive successor successor (chain successor successor))) (transpose successor) (recursive zero (transpose successor) (transpose successor))))\n)",
            "task_solution": "(chain successor (recursive (disjunction equal (recursive successor successor (chain successor successor))) (transpose successor) (recursive zero (transpose successor) (transpose successor))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.3113083619973622,
            "num_unique_values": 158,
            "num_values_explored": 290,
            "solution": "(recursive equal (disjunction successor (recursive zero zero (transpose (chain successor successor)))) (recursive (transpose successor) (transpose successor) (chain successor successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (disjunction successor (recursive zero zero (transpose (chain successor successor)))) (recursive (transpose successor) (transpose successor) (chain successor successor)))\n)",
            "task_solution": "(recursive equal (disjunction successor (recursive zero zero (transpose (chain successor successor)))) (recursive (transpose successor) (transpose successor) (chain successor successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.30225720698945224,
            "num_unique_values": 166,
            "num_values_explored": 312,
            "solution": "(transpose (chain (disjunction zero successor) (disjunction (transpose successor) (recursive (chain successor successor) (transpose successor) (chain successor (chain successor successor))))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False,  True, False, False, False,\n        False],\n       [False,  True,  True, False, False, False,  True, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False,  True, False,\n        False],\n       [ True, False, False,  True,  True, False, False, False,  True,\n        False],\n       [False,  True, False, False,  True,  True, False, False, False,\n        False],\n       [False, False,  True, False, False,  True,  True, False, False,\n        False],\n       [False, False, False,  True, False, False,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False]])],\n    solution=(transpose (chain (disjunction zero successor) (disjunction (transpose successor) (recursive (chain successor successor) (transpose successor) (chain successor (chain successor successor))))))\n)",
            "task_solution": "(transpose (chain (disjunction zero successor) (disjunction (transpose successor) (recursive (chain successor successor) (transpose successor) (chain successor (chain successor successor))))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 56.498476759996265,
            "num_unique_values": 3319,
            "num_values_explored": 50009,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False]])],\n    solution=(transpose (chain (recursive (chain (disjunction (chain successor successor) (transpose (chain zero successor))) (disjunction zero successor)) (transpose successor) successor) successor))\n)",
            "task_solution": "(transpose (chain (recursive (chain (disjunction (chain successor successor) (transpose (chain zero successor))) (disjunction zero successor)) (transpose successor) successor) successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 57.24669660296058,
            "num_unique_values": 3677,
            "num_values_explored": 50028,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False,  True,  True, False, False,\n         True],\n       [ True,  True, False,  True,  True, False, False,  True, False,\n        False],\n       [False,  True,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False,  True,  True, False, False,  True, False, False,\n         True],\n       [False, False, False,  True,  True, False, False,  True, False,\n        False],\n       [False, False, False, False,  True,  True, False, False,  True,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n         True],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction successor (chain (transpose successor) (recursive successor (chain (transpose (chain (disjunction zero successor) (chain successor successor))) successor) successor))))\n)",
            "task_solution": "(transpose (disjunction successor (chain (transpose successor) (recursive successor (chain (transpose (chain (disjunction zero successor) (chain successor successor))) successor) successor))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.2847143849940039,
            "num_unique_values": 146,
            "num_values_explored": 287,
            "solution": "(disjunction equal (chain successor (recursive (chain successor (disjunction equal (chain successor successor))) (disjunction (transpose successor) (chain successor successor)) successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (disjunction equal (chain successor successor)) (disjunction equal (chain successor (recursive successor (disjunction (transpose successor) (chain successor successor)) successor))))\n)",
            "task_solution": "(chain (disjunction equal (chain successor successor)) (disjunction equal (chain successor (recursive successor (disjunction (transpose successor) (chain successor successor)) successor))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.06143234099727124,
            "num_unique_values": 12,
            "num_values_explored": 73,
            "solution": "(transpose (recursive successor equal successor))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) successor equal)\n)",
            "task_solution": "(recursive (transpose successor) successor equal)",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.07356442394666374,
            "num_unique_values": 21,
            "num_values_explored": 85,
            "solution": "(chain (recursive successor zero successor) successor)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction zero successor) successor)\n)",
            "task_solution": "(chain (disjunction zero successor) successor)",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.1235284690046683,
            "num_unique_values": 56,
            "num_values_explored": 133,
            "solution": "(chain successor (chain successor successor))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor successor))\n)",
            "task_solution": "(chain successor (chain successor successor))",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.061145214014686644,
            "num_unique_values": 12,
            "num_values_explored": 73,
            "solution": "(transpose (recursive successor successor equal))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (transpose successor) equal successor)\n)",
            "task_solution": "(recursive (transpose successor) equal successor)",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.11503263702616096,
            "num_unique_values": 37,
            "num_values_explored": 113,
            "solution": "(recursive successor zero (transpose successor))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor zero (transpose successor))\n)",
            "task_solution": "(recursive successor zero (transpose successor))",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.11361697898246348,
            "num_unique_values": 36,
            "num_values_explored": 109,
            "solution": "(recursive successor successor (transpose successor))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (transpose successor))\n)",
            "task_solution": "(recursive successor successor (transpose successor))",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.108357273042202,
            "num_unique_values": 37,
            "num_values_explored": 107,
            "solution": "(recursive equal (transpose successor) successor)",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(recursive equal (transpose successor) successor)\n)",
            "task_solution": "(recursive equal (transpose successor) successor)",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.10818835196550936,
            "num_unique_values": 36,
            "num_values_explored": 107,
            "solution": "(recursive equal (disjunction successor (transpose successor)) (transpose successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (transpose successor))\n)",
            "task_solution": "(recursive equal successor (transpose successor))",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.10685160802677274,
            "num_unique_values": 36,
            "num_values_explored": 108,
            "solution": "(recursive equal zero (transpose successor))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal zero (transpose successor))\n)",
            "task_solution": "(recursive equal zero (transpose successor))",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.08550265099620447,
            "num_unique_values": 27,
            "num_values_explored": 97,
            "solution": "(disjunction equal (chain successor successor))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain successor successor))\n)",
            "task_solution": "(disjunction equal (chain successor successor))",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.10822551796445623,
            "num_unique_values": 36,
            "num_values_explored": 107,
            "solution": "(recursive successor (transpose successor) successor)",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive successor (transpose successor) successor)\n)",
            "task_solution": "(recursive successor (transpose successor) successor)",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.1107519639772363,
            "num_unique_values": 36,
            "num_values_explored": 108,
            "solution": "(recursive equal (transpose successor) zero)",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [ True, False, False, False, False,  True, False, False, False,\n        False],\n       [ True, False, False, False, False, False,  True, False, False,\n        False],\n       [ True, False, False, False, False, False, False,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (transpose successor) zero)\n)",
            "task_solution": "(recursive equal (transpose successor) zero)",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.13738289498724043,
            "num_unique_values": 56,
            "num_values_explored": 137,
            "solution": "(chain zero (chain successor successor))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain zero (chain successor successor))\n)",
            "task_solution": "(chain zero (chain successor successor))",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.13508601201465353,
            "num_unique_values": 56,
            "num_values_explored": 135,
            "solution": "(chain (transpose successor) (chain zero successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (transpose successor) (chain zero successor))\n)",
            "task_solution": "(chain (transpose successor) (chain zero successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.12586485501378775,
            "num_unique_values": 47,
            "num_values_explored": 124,
            "solution": "(transpose (chain (disjunction zero successor) successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(transpose (chain (disjunction zero successor) successor))\n)",
            "task_solution": "(transpose (chain (disjunction zero successor) successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.11678798502543941,
            "num_unique_values": 36,
            "num_values_explored": 109,
            "solution": "(recursive successor (chain zero successor) equal)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (chain zero successor) equal)\n)",
            "task_solution": "(recursive successor (chain zero successor) equal)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.08594296197406948,
            "num_unique_values": 27,
            "num_values_explored": 98,
            "solution": "(disjunction (transpose successor) (chain successor (transpose successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (disjunction successor equal) (transpose successor))\n)",
            "task_solution": "(chain (disjunction successor equal) (transpose successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.12524701497750357,
            "num_unique_values": 46,
            "num_values_explored": 123,
            "solution": "(transpose (disjunction equal (chain successor successor)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True]])],\n    solution=(transpose (disjunction equal (chain successor successor)))\n)",
            "task_solution": "(transpose (disjunction equal (chain successor successor)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.11316961998818442,
            "num_unique_values": 38,
            "num_values_explored": 108,
            "solution": "(recursive (disjunction equal successor) equal successor)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (disjunction successor equal) equal successor)\n)",
            "task_solution": "(recursive (disjunction successor equal) equal successor)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.10812290600733832,
            "num_unique_values": 36,
            "num_values_explored": 108,
            "solution": "(recursive (chain successor successor) zero successor)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor successor) zero successor)\n)",
            "task_solution": "(recursive (chain successor successor) zero successor)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.10641562496311963,
            "num_unique_values": 38,
            "num_values_explored": 107,
            "solution": "(recursive (transpose successor) successor (transpose successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) successor (transpose successor))\n)",
            "task_solution": "(recursive (transpose successor) successor (transpose successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.0888608309905976,
            "num_unique_values": 30,
            "num_values_explored": 100,
            "solution": "(disjunction (chain successor successor) (chain successor (transpose successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (disjunction successor (transpose successor)))\n)",
            "task_solution": "(chain successor (disjunction successor (transpose successor)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.07439139799680561,
            "num_unique_values": 17,
            "num_values_explored": 83,
            "solution": "(chain (recursive successor equal successor) zero)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor equal successor) zero)\n)",
            "task_solution": "(chain (recursive successor equal successor) zero)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.346199978957884,
            "num_unique_values": 163,
            "num_values_explored": 299,
            "solution": "(recursive (transpose (chain zero (disjunction zero successor))) (transpose successor) zero)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (transpose zero) (transpose successor) zero)\n)",
            "task_solution": "(recursive (transpose zero) (transpose successor) zero)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.13033346395241097,
            "num_unique_values": 56,
            "num_values_explored": 138,
            "solution": "(chain (transpose successor) (disjunction zero successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (transpose successor) (disjunction zero successor))\n)",
            "task_solution": "(chain (transpose successor) (disjunction zero successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.10691206698538736,
            "num_unique_values": 37,
            "num_values_explored": 106,
            "solution": "(recursive equal (chain successor successor) successor)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (chain successor successor) successor)\n)",
            "task_solution": "(recursive equal (chain successor successor) successor)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.11297516198828816,
            "num_unique_values": 39,
            "num_values_explored": 109,
            "solution": "(recursive (transpose successor) equal (transpose successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(recursive (transpose successor) equal (transpose successor))\n)",
            "task_solution": "(recursive (transpose successor) equal (transpose successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.11083114700159058,
            "num_unique_values": 37,
            "num_values_explored": 111,
            "solution": "(recursive (chain successor successor) successor equal)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor successor) successor equal)\n)",
            "task_solution": "(recursive (chain successor successor) successor equal)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.08742808096576482,
            "num_unique_values": 26,
            "num_values_explored": 98,
            "solution": "(disjunction (transpose successor) (chain successor successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (chain successor successor))\n)",
            "task_solution": "(disjunction (transpose successor) (chain successor successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.13563010399229825,
            "num_unique_values": 58,
            "num_values_explored": 141,
            "solution": "(chain (transpose (chain successor successor)) successor)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (transpose (chain successor successor)) successor)\n)",
            "task_solution": "(chain (transpose (chain successor successor)) successor)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.07883529498940334,
            "num_unique_values": 18,
            "num_values_explored": 83,
            "solution": "(chain (recursive successor equal successor) successor)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor equal successor) successor)\n)",
            "task_solution": "(chain (recursive successor equal successor) successor)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.08440657402388752,
            "num_unique_values": 30,
            "num_values_explored": 96,
            "solution": "(disjunction successor (chain (transpose successor) zero))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction successor (transpose (chain zero successor)))\n)",
            "task_solution": "(disjunction successor (transpose (chain zero successor)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.07680787501158193,
            "num_unique_values": 20,
            "num_values_explored": 85,
            "solution": "(chain (transpose (recursive successor zero successor)) successor)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (transpose (disjunction zero successor)) successor)\n)",
            "task_solution": "(chain (transpose (disjunction zero successor)) successor)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.10684341797605157,
            "num_unique_values": 42,
            "num_values_explored": 111,
            "solution": "(recursive (transpose successor) (transpose successor) zero)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [ True, False, False, False, False,  True, False, False, False,\n        False],\n       [ True, False, False, False, False, False,  True, False, False,\n        False],\n       [ True, False, False, False, False, False, False,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (transpose successor) zero)\n)",
            "task_solution": "(recursive (transpose successor) (transpose successor) zero)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.1775614710059017,
            "num_unique_values": 88,
            "num_values_explored": 181,
            "solution": "(transpose (chain successor (disjunction equal successor)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False]])],\n    solution=(transpose (chain successor (disjunction successor equal)))\n)",
            "task_solution": "(transpose (chain successor (disjunction successor equal)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.10729950596578419,
            "num_unique_values": 37,
            "num_values_explored": 109,
            "solution": "(recursive equal successor (chain successor successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (chain successor successor))\n)",
            "task_solution": "(recursive equal successor (chain successor successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.10448831296525896,
            "num_unique_values": 39,
            "num_values_explored": 108,
            "solution": "(recursive successor successor (chain successor successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (chain successor successor))\n)",
            "task_solution": "(recursive successor successor (chain successor successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.10804764501517639,
            "num_unique_values": 36,
            "num_values_explored": 108,
            "solution": "(recursive (disjunction zero successor) successor equal)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (disjunction zero successor) successor equal)\n)",
            "task_solution": "(recursive (disjunction zero successor) successor equal)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.0864270250312984,
            "num_unique_values": 32,
            "num_values_explored": 96,
            "solution": "(disjunction successor (chain successor (transpose successor)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (transpose (disjunction successor equal)))\n)",
            "task_solution": "(chain successor (transpose (disjunction successor equal)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.1164562440244481,
            "num_unique_values": 46,
            "num_values_explored": 126,
            "solution": "(transpose (disjunction zero (chain successor successor)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(transpose (disjunction zero (chain successor successor)))\n)",
            "task_solution": "(transpose (disjunction zero (chain successor successor)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.14696631697006524,
            "num_unique_values": 56,
            "num_values_explored": 137,
            "solution": "(chain (transpose successor) (chain successor successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (transpose successor) (chain successor successor))\n)",
            "task_solution": "(chain (transpose successor) (chain successor successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.128122063993942,
            "num_unique_values": 56,
            "num_values_explored": 134,
            "solution": "(chain successor (transpose (chain successor successor)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (transpose (chain successor successor)))\n)",
            "task_solution": "(chain successor (transpose (chain successor successor)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.08569941797759384,
            "num_unique_values": 33,
            "num_values_explored": 98,
            "solution": "(disjunction (chain (transpose successor) successor) (chain successor (disjunction zero successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (disjunction successor (transpose successor)) successor)\n)",
            "task_solution": "(chain (disjunction successor (transpose successor)) successor)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.2014662210131064,
            "num_unique_values": 86,
            "num_values_explored": 193,
            "solution": "(transpose (chain zero (chain successor successor)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (chain zero (chain successor successor)))\n)",
            "task_solution": "(transpose (chain zero (chain successor successor)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.07389487803447992,
            "num_unique_values": 19,
            "num_values_explored": 83,
            "solution": "(chain zero (recursive successor successor equal))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain zero (recursive successor successor equal))\n)",
            "task_solution": "(chain zero (recursive successor successor equal))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.17873401299584657,
            "num_unique_values": 86,
            "num_values_explored": 182,
            "solution": "(transpose (chain successor (chain successor successor)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False]])],\n    solution=(transpose (chain successor (chain successor successor)))\n)",
            "task_solution": "(transpose (chain successor (chain successor successor)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.0866753039881587,
            "num_unique_values": 27,
            "num_values_explored": 97,
            "solution": "(disjunction (transpose successor) (chain zero successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (chain zero successor))\n)",
            "task_solution": "(disjunction (transpose successor) (chain zero successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.0887472010217607,
            "num_unique_values": 35,
            "num_values_explored": 96,
            "solution": "(disjunction (transpose successor) (chain (transpose successor) successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(chain (transpose successor) (disjunction successor equal))\n)",
            "task_solution": "(chain (transpose successor) (disjunction successor equal))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.09191926999483258,
            "num_unique_values": 31,
            "num_values_explored": 97,
            "solution": "(disjunction (transpose successor) (disjunction zero successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction zero (disjunction successor (transpose successor)))\n)",
            "task_solution": "(disjunction zero (disjunction successor (transpose successor)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.16698600101517513,
            "num_unique_values": 79,
            "num_values_explored": 162,
            "solution": "(recursive zero (transpose successor) (transpose successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([ True, False,  True, False,  True, False,  True, False,  True,\n       False])],\n    solution=(recursive zero (transpose successor) (transpose successor))\n)",
            "task_solution": "(recursive zero (transpose successor) (transpose successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.14211650495417416,
            "num_unique_values": 67,
            "num_values_explored": 151,
            "solution": "(disjunction successor (transpose (disjunction equal successor)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(disjunction successor (transpose (disjunction successor equal)))\n)",
            "task_solution": "(disjunction successor (transpose (disjunction successor equal)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.10786863602697849,
            "num_unique_values": 40,
            "num_values_explored": 108,
            "solution": "(recursive successor (chain successor successor) successor)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (chain successor successor) successor)\n)",
            "task_solution": "(recursive successor (chain successor successor) successor)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.11466467101126909,
            "num_unique_values": 46,
            "num_values_explored": 122,
            "solution": "(transpose (recursive zero zero (transpose successor)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (recursive zero zero (transpose successor)))\n)",
            "task_solution": "(transpose (recursive zero zero (transpose successor)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.1437184379901737,
            "num_unique_values": 66,
            "num_values_explored": 151,
            "solution": "(disjunction successor (recursive zero zero (transpose successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction successor (recursive zero zero (transpose successor)))\n)",
            "task_solution": "(disjunction successor (recursive zero zero (transpose successor)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.20890497998334467,
            "num_unique_values": 96,
            "num_values_explored": 200,
            "solution": "(chain (transpose (disjunction (recursive successor equal successor) (recursive successor (disjunction successor (transpose successor)) successor))) (disjunction equal successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(recursive (transpose (disjunction successor equal)) successor equal)\n)",
            "task_solution": "(recursive (transpose (disjunction successor equal)) successor equal)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.1378456269740127,
            "num_unique_values": 56,
            "num_values_explored": 137,
            "solution": "(chain zero (recursive (disjunction zero (chain successor successor)) successor (transpose successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain zero (recursive equal successor (transpose successor)))\n)",
            "task_solution": "(chain zero (recursive equal successor (transpose successor)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.14639795402763411,
            "num_unique_values": 66,
            "num_values_explored": 153,
            "solution": "(disjunction equal (chain successor (chain successor successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain successor (chain successor successor)))\n)",
            "task_solution": "(disjunction equal (chain successor (chain successor successor)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.17706812301184982,
            "num_unique_values": 83,
            "num_values_explored": 166,
            "solution": "(recursive successor (transpose (chain zero successor)) equal)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (transpose (chain zero successor)) equal)\n)",
            "task_solution": "(recursive successor (transpose (chain zero successor)) equal)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.13280213403049856,
            "num_unique_values": 60,
            "num_values_explored": 132,
            "solution": "(chain (recursive equal (transpose successor) successor) zero)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive equal (transpose successor) successor) zero)\n)",
            "task_solution": "(chain (recursive equal (transpose successor) successor) zero)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.19450304098427296,
            "num_unique_values": 103,
            "num_values_explored": 200,
            "solution": "(chain zero (chain successor (chain successor successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain zero (chain successor (chain successor successor)))\n)",
            "task_solution": "(chain zero (chain successor (chain successor successor)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.07326242601266131,
            "num_unique_values": 22,
            "num_values_explored": 83,
            "solution": "(chain (transpose (recursive successor successor equal)) successor)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (recursive (transpose successor) equal successor) successor)\n)",
            "task_solution": "(chain (recursive (transpose successor) equal successor) successor)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.10484247602289543,
            "num_unique_values": 43,
            "num_values_explored": 106,
            "solution": "(recursive (disjunction zero successor) (transpose successor) zero)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [ True, False, False, False, False,  True, False, False, False,\n        False],\n       [ True, False, False, False, False, False,  True, False, False,\n        False],\n       [ True, False, False, False, False, False, False,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n         True],\n       [ True, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (disjunction zero successor) (transpose successor) zero)\n)",
            "task_solution": "(recursive (disjunction zero successor) (transpose successor) zero)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.10923986497800797,
            "num_unique_values": 36,
            "num_values_explored": 108,
            "solution": "(recursive (chain successor successor) zero (transpose successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor successor) zero (transpose successor))\n)",
            "task_solution": "(recursive (chain successor successor) zero (transpose successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.08860287902643904,
            "num_unique_values": 30,
            "num_values_explored": 97,
            "solution": "(disjunction equal (chain (disjunction zero successor) successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain (disjunction zero successor) successor))\n)",
            "task_solution": "(disjunction equal (chain (disjunction zero successor) successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.11706330598099157,
            "num_unique_values": 46,
            "num_values_explored": 124,
            "solution": "(transpose (recursive zero (transpose successor) (transpose successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (recursive zero (transpose successor) (transpose successor)))\n)",
            "task_solution": "(transpose (recursive zero (transpose successor) (transpose successor)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.12400905799586326,
            "num_unique_values": 64,
            "num_values_explored": 133,
            "solution": "(chain (disjunction successor (chain successor (transpose successor))) (chain successor successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (disjunction successor equal)))\n)",
            "task_solution": "(chain successor (chain successor (disjunction successor equal)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.11963152303360403,
            "num_unique_values": 55,
            "num_values_explored": 124,
            "solution": "(transpose (recursive (chain successor successor) equal successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain successor successor)) successor equal)\n)",
            "task_solution": "(recursive (transpose (chain successor successor)) successor equal)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.10855448403162882,
            "num_unique_values": 44,
            "num_values_explored": 108,
            "solution": "(recursive zero (recursive successor equal successor) successor)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([ True,  True,  True,  True,  True,  True,  True,  True, False,\n       False])],\n    solution=(recursive zero (recursive successor equal successor) successor)\n)",
            "task_solution": "(recursive zero (recursive successor equal successor) successor)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.14155769697390497,
            "num_unique_values": 67,
            "num_values_explored": 150,
            "solution": "(disjunction zero (recursive successor (disjunction (transpose successor) successor) successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive successor (transpose (disjunction zero successor)) successor)\n)",
            "task_solution": "(recursive successor (transpose (disjunction zero successor)) successor)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.1281662909896113,
            "num_unique_values": 64,
            "num_values_explored": 133,
            "solution": "(chain zero (disjunction zero (chain successor successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain zero (disjunction zero (chain successor successor)))\n)",
            "task_solution": "(chain zero (disjunction zero (chain successor successor)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.13537430297583342,
            "num_unique_values": 46,
            "num_values_explored": 123,
            "solution": "(transpose (chain (recursive successor equal successor) zero))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (chain (recursive successor equal successor) zero))\n)",
            "task_solution": "(transpose (chain (recursive successor equal successor) zero))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 57.925036241998896,
            "num_unique_values": 2198,
            "num_values_explored": 50008,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([ True,  True,  True,  True,  True,  True,  True,  True,  True,\n       False])],\n    solution=(recursive zero zero (recursive successor equal successor))\n)",
            "task_solution": "(recursive zero zero (recursive successor equal successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.13017115800175816,
            "num_unique_values": 56,
            "num_values_explored": 131,
            "solution": "(chain (recursive zero zero (transpose successor)) successor)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive zero zero (transpose successor)) successor)\n)",
            "task_solution": "(chain (recursive zero zero (transpose successor)) successor)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.11394928401568905,
            "num_unique_values": 39,
            "num_values_explored": 109,
            "solution": "(recursive (chain zero successor) (transpose successor) equal)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain zero successor) (transpose successor) equal)\n)",
            "task_solution": "(recursive (chain zero successor) (transpose successor) equal)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.08564840100007132,
            "num_unique_values": 30,
            "num_values_explored": 96,
            "solution": "(disjunction successor (transpose (recursive successor successor equal)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(disjunction successor (recursive (transpose successor) equal successor))\n)",
            "task_solution": "(disjunction successor (recursive (transpose successor) equal successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.07357139198575169,
            "num_unique_values": 24,
            "num_values_explored": 84,
            "solution": "(chain (recursive successor successor equal) (transpose successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (transpose successor)) successor equal)\n)",
            "task_solution": "(recursive (chain successor (transpose successor)) successor equal)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.11623961699660867,
            "num_unique_values": 37,
            "num_values_explored": 109,
            "solution": "(recursive (disjunction equal successor) (transpose successor) zero)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False, False,  True,  True, False, False, False, False,\n        False],\n       [ True, False, False, False,  True,  True, False, False, False,\n        False],\n       [ True, False, False, False, False,  True,  True, False, False,\n        False],\n       [ True, False, False, False, False, False,  True,  True, False,\n        False],\n       [ True, False, False, False, False, False, False,  True,  True,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n         True],\n       [ True, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (disjunction successor equal) (transpose successor) zero)\n)",
            "task_solution": "(recursive (disjunction successor equal) (transpose successor) zero)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.10439473099540919,
            "num_unique_values": 36,
            "num_values_explored": 108,
            "solution": "(recursive successor zero (recursive successor equal successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor zero (recursive successor equal successor))\n)",
            "task_solution": "(recursive successor zero (recursive successor equal successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.08876481204060838,
            "num_unique_values": 29,
            "num_values_explored": 97,
            "solution": "(disjunction (chain zero successor) (chain (transpose successor) zero))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain zero successor) (transpose successor) successor)\n)",
            "task_solution": "(recursive (chain zero successor) (transpose successor) successor)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.1061824539792724,
            "num_unique_values": 38,
            "num_values_explored": 109,
            "solution": "(recursive successor equal (recursive successor equal successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor equal (recursive successor equal successor))\n)",
            "task_solution": "(recursive successor equal (recursive successor equal successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.10777139500714839,
            "num_unique_values": 41,
            "num_values_explored": 109,
            "solution": "(recursive successor successor (recursive successor equal successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (recursive successor equal successor))\n)",
            "task_solution": "(recursive successor successor (recursive successor equal successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.14764719101367518,
            "num_unique_values": 73,
            "num_values_explored": 150,
            "solution": "(disjunction successor (chain zero (recursive successor successor (transpose successor))))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor zero (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive successor zero (transpose (chain successor successor)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.10677107400260866,
            "num_unique_values": 39,
            "num_values_explored": 107,
            "solution": "(recursive (disjunction equal successor) zero (transpose successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (disjunction successor equal) zero (transpose successor))\n)",
            "task_solution": "(recursive (disjunction successor equal) zero (transpose successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.11770250898553059,
            "num_unique_values": 46,
            "num_values_explored": 127,
            "solution": "(transpose (disjunction (chain (transpose successor) successor) (chain successor successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True]])],\n    solution=(transpose (chain (disjunction successor (transpose successor)) successor))\n)",
            "task_solution": "(transpose (chain (disjunction successor (transpose successor)) successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.10876589297549799,
            "num_unique_values": 37,
            "num_values_explored": 109,
            "solution": "(recursive equal successor (recursive successor equal successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (recursive successor equal successor))\n)",
            "task_solution": "(recursive equal successor (recursive successor equal successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.17656002996955067,
            "num_unique_values": 77,
            "num_values_explored": 170,
            "solution": "(recursive (transpose (chain successor successor)) equal successor)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain successor successor)) equal successor)\n)",
            "task_solution": "(recursive (transpose (chain successor successor)) equal successor)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.10792833101004362,
            "num_unique_values": 39,
            "num_values_explored": 108,
            "solution": "(recursive (chain (transpose successor) successor) equal successor)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (chain (transpose successor) successor) equal successor)\n)",
            "task_solution": "(recursive (chain (transpose successor) successor) equal successor)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.166463821020443,
            "num_unique_values": 81,
            "num_values_explored": 157,
            "solution": "(recursive zero zero (transpose (chain successor successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([ True, False,  True, False, False, False, False, False, False,\n       False])],\n    solution=(recursive zero zero (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive zero zero (transpose (chain successor successor)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.08510175801347941,
            "num_unique_values": 28,
            "num_values_explored": 95,
            "solution": "(disjunction successor (transpose (recursive successor equal successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction successor (recursive (transpose successor) successor equal))\n)",
            "task_solution": "(disjunction successor (recursive (transpose successor) successor equal))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.08637849794467911,
            "num_unique_values": 31,
            "num_values_explored": 96,
            "solution": "(disjunction successor (chain (transpose successor) (recursive successor equal successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive successor (transpose successor) (disjunction successor equal))\n)",
            "task_solution": "(recursive successor (transpose successor) (disjunction successor equal))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.12530413904460147,
            "num_unique_values": 56,
            "num_values_explored": 132,
            "solution": "(chain (disjunction successor equal) (disjunction equal successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (disjunction successor equal) (disjunction successor equal))\n)",
            "task_solution": "(chain (disjunction successor equal) (disjunction successor equal))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.0889741099672392,
            "num_unique_values": 26,
            "num_values_explored": 97,
            "solution": "(disjunction (transpose successor) (recursive successor successor equal))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (recursive successor successor equal))\n)",
            "task_solution": "(disjunction (transpose successor) (recursive successor successor equal))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.11081651301356032,
            "num_unique_values": 37,
            "num_values_explored": 110,
            "solution": "(recursive (transpose successor) successor (chain successor successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) successor (chain successor successor))\n)",
            "task_solution": "(recursive (transpose successor) successor (chain successor successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.10448695300146937,
            "num_unique_values": 37,
            "num_values_explored": 106,
            "solution": "(recursive successor (transpose successor) (disjunction zero successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive successor (transpose successor) (disjunction zero successor))\n)",
            "task_solution": "(recursive successor (transpose successor) (disjunction zero successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.11672663001809269,
            "num_unique_values": 36,
            "num_values_explored": 110,
            "solution": "(recursive equal (transpose successor) (chain zero successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (transpose successor) (chain zero successor))\n)",
            "task_solution": "(recursive equal (transpose successor) (chain zero successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.13004107400774956,
            "num_unique_values": 48,
            "num_values_explored": 121,
            "solution": "(transpose (chain (recursive successor equal successor) successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False]])],\n    solution=(transpose (chain (recursive successor equal successor) successor))\n)",
            "task_solution": "(transpose (chain (recursive successor equal successor) successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.10640534898266196,
            "num_unique_values": 38,
            "num_values_explored": 107,
            "solution": "(recursive (chain successor successor) successor (transpose successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor successor) successor (transpose successor))\n)",
            "task_solution": "(recursive (chain successor successor) successor (transpose successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.1079224559944123,
            "num_unique_values": 45,
            "num_values_explored": 106,
            "solution": "(recursive (transpose successor) (chain successor (disjunction zero successor)) successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (chain successor successor) successor)\n)",
            "task_solution": "(recursive (transpose successor) (chain successor successor) successor)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.14827710803365335,
            "num_unique_values": 68,
            "num_values_explored": 145,
            "solution": "(disjunction successor (recursive (disjunction equal (chain successor successor)) successor (transpose successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True,  True,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True,  True,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction successor (recursive equal successor (transpose successor)))\n)",
            "task_solution": "(disjunction successor (recursive equal successor (transpose successor)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.11816890200134367,
            "num_unique_values": 39,
            "num_values_explored": 107,
            "solution": "(recursive equal (disjunction zero successor) (transpose successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (disjunction zero successor) (transpose successor))\n)",
            "task_solution": "(recursive equal (disjunction zero successor) (transpose successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.13319294701796025,
            "num_unique_values": 53,
            "num_values_explored": 126,
            "solution": "(transpose (recursive equal successor (recursive equal successor equal)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive equal equal (recursive successor equal successor))\n)",
            "task_solution": "(recursive equal equal (recursive successor equal successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.07812144298804924,
            "num_unique_values": 18,
            "num_values_explored": 84,
            "solution": "(chain (transpose successor) (recursive successor successor equal))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (transpose successor) (recursive successor successor equal))\n)",
            "task_solution": "(chain (transpose successor) (recursive successor successor equal))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.15186161000747234,
            "num_unique_values": 67,
            "num_values_explored": 153,
            "solution": "(disjunction equal (chain zero (chain successor successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (chain zero successor) (transpose successor))\n)",
            "task_solution": "(recursive equal (chain zero successor) (transpose successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.15582500398159027,
            "num_unique_values": 66,
            "num_values_explored": 156,
            "solution": "(disjunction zero (disjunction (transpose successor) (chain successor successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction zero (disjunction (transpose successor) (chain successor successor)))\n)",
            "task_solution": "(disjunction zero (disjunction (transpose successor) (chain successor successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.12182419595774263,
            "num_unique_values": 40,
            "num_values_explored": 115,
            "solution": "(recursive equal (transpose successor) (recursive successor successor equal))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True]])],\n    solution=(recursive equal (transpose successor) (recursive successor successor equal))\n)",
            "task_solution": "(recursive equal (transpose successor) (recursive successor successor equal))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.18270132399629802,
            "num_unique_values": 86,
            "num_values_explored": 188,
            "solution": "(transpose (chain successor (recursive successor (transpose successor) successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(transpose (chain successor (recursive successor (transpose successor) successor)))\n)",
            "task_solution": "(transpose (chain successor (recursive successor (transpose successor) successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.12262426200322807,
            "num_unique_values": 50,
            "num_values_explored": 126,
            "solution": "(transpose (disjunction (transpose successor) (chain (disjunction zero successor) successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(disjunction successor (transpose (chain (disjunction zero successor) successor)))\n)",
            "task_solution": "(disjunction successor (transpose (chain (disjunction zero successor) successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.10787055402761325,
            "num_unique_values": 42,
            "num_values_explored": 109,
            "solution": "(recursive equal (transpose successor) (chain (transpose successor) successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive equal (transpose successor) (chain (transpose successor) successor))\n)",
            "task_solution": "(recursive equal (transpose successor) (chain (transpose successor) successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.12522663897834718,
            "num_unique_values": 56,
            "num_values_explored": 131,
            "solution": "(chain zero (recursive successor (chain successor successor) successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain zero (recursive successor (chain successor successor) successor))\n)",
            "task_solution": "(chain zero (recursive successor (chain successor successor) successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.13195519399596378,
            "num_unique_values": 59,
            "num_values_explored": 137,
            "solution": "(chain (recursive successor successor (chain successor successor)) zero)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor successor (chain successor successor)) zero)\n)",
            "task_solution": "(chain (recursive successor successor (chain successor successor)) zero)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.11466104700230062,
            "num_unique_values": 54,
            "num_values_explored": 120,
            "solution": "(transpose (recursive successor (transpose successor) (chain successor successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n         True],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) successor (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (transpose successor) successor (transpose (chain successor successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.19983589398907498,
            "num_unique_values": 88,
            "num_values_explored": 177,
            "solution": "(transpose (chain (chain zero (disjunction zero successor)) successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (chain zero (chain successor (disjunction successor equal))))\n)",
            "task_solution": "(transpose (chain zero (chain successor (disjunction successor equal))))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1760911830351688,
            "num_unique_values": 77,
            "num_values_explored": 163,
            "solution": "(recursive (disjunction (recursive successor (disjunction zero successor) (transpose successor)) (recursive zero (transpose successor) (transpose successor))) equal successor)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (recursive successor successor (transpose successor)) equal successor)\n)",
            "task_solution": "(recursive (recursive successor successor (transpose successor)) equal successor)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1305905120098032,
            "num_unique_values": 51,
            "num_values_explored": 121,
            "solution": "(transpose (disjunction equal (recursive successor (transpose successor) equal)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction zero (recursive successor (transpose successor) equal)))\n)",
            "task_solution": "(transpose (disjunction zero (recursive successor (transpose successor) equal)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1386976619833149,
            "num_unique_values": 56,
            "num_values_explored": 135,
            "solution": "(chain (transpose successor) (disjunction equal (chain successor successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (transpose successor) (disjunction equal (chain successor successor)))\n)",
            "task_solution": "(chain (transpose successor) (disjunction equal (chain successor successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1046742870239541,
            "num_unique_values": 36,
            "num_values_explored": 107,
            "solution": "(recursive (transpose successor) equal (recursive successor equal successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (transpose successor) equal (recursive successor equal successor))\n)",
            "task_solution": "(recursive (transpose successor) equal (recursive successor equal successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.10913694399641827,
            "num_unique_values": 39,
            "num_values_explored": 108,
            "solution": "(recursive (chain (transpose successor) successor) successor (transpose successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (chain (transpose successor) successor) successor (transpose successor))\n)",
            "task_solution": "(recursive (chain (transpose successor) successor) successor (transpose successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1315896839951165,
            "num_unique_values": 56,
            "num_values_explored": 139,
            "solution": "(chain (transpose (chain successor successor)) (chain successor successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (transpose (chain successor successor)) (chain successor successor))\n)",
            "task_solution": "(chain (transpose (chain successor successor)) (chain successor successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1766071540187113,
            "num_unique_values": 84,
            "num_values_explored": 159,
            "solution": "(recursive equal (recursive equal successor (transpose successor)) successor)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive equal (recursive equal successor (transpose successor)) successor)\n)",
            "task_solution": "(recursive equal (recursive equal successor (transpose successor)) successor)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.13770665397169068,
            "num_unique_values": 56,
            "num_values_explored": 138,
            "solution": "(chain (disjunction (transpose successor) (chain zero successor)) successor)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (disjunction (transpose successor) (chain zero successor)) successor)\n)",
            "task_solution": "(chain (disjunction (transpose successor) (chain zero successor)) successor)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1391010990482755,
            "num_unique_values": 56,
            "num_values_explored": 139,
            "solution": "(chain (transpose (chain (disjunction zero successor) successor)) successor)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (transpose (chain (disjunction zero successor) successor)) successor)\n)",
            "task_solution": "(chain (transpose (chain (disjunction zero successor) successor)) successor)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.18281109601957723,
            "num_unique_values": 77,
            "num_values_explored": 169,
            "solution": "(recursive (chain successor (chain successor successor)) zero successor)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (chain successor successor)) zero successor)\n)",
            "task_solution": "(recursive (chain successor (chain successor successor)) zero successor)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.12964994204230607,
            "num_unique_values": 56,
            "num_values_explored": 135,
            "solution": "(chain (disjunction successor equal) (disjunction successor (transpose successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (disjunction successor equal) (disjunction successor (transpose successor)))\n)",
            "task_solution": "(chain (disjunction successor equal) (disjunction successor (transpose successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.18546451994916424,
            "num_unique_values": 78,
            "num_values_explored": 170,
            "solution": "(recursive (chain successor (chain successor successor)) successor equal)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (chain successor successor)) successor equal)\n)",
            "task_solution": "(recursive (chain successor (chain successor successor)) successor equal)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1935440450324677,
            "num_unique_values": 80,
            "num_values_explored": 166,
            "solution": "(recursive equal successor (recursive equal successor (transpose successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (recursive equal successor (transpose successor)))\n)",
            "task_solution": "(recursive equal successor (recursive equal successor (transpose successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.12006726098479703,
            "num_unique_values": 50,
            "num_values_explored": 124,
            "solution": "(transpose (recursive successor (transpose successor) (disjunction successor equal)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(recursive (transpose successor) (disjunction successor equal) (transpose successor))\n)",
            "task_solution": "(recursive (transpose successor) (disjunction successor equal) (transpose successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.10391232097754255,
            "num_unique_values": 38,
            "num_values_explored": 105,
            "solution": "(recursive (chain successor successor) equal (chain successor successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor successor) equal (chain successor successor))\n)",
            "task_solution": "(recursive (chain successor successor) equal (chain successor successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.18163249897770584,
            "num_unique_values": 76,
            "num_values_explored": 166,
            "solution": "(recursive (transpose (recursive successor equal successor)) equal successor)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (transpose successor) (disjunction successor (transpose successor)) equal)\n)",
            "task_solution": "(recursive (transpose successor) (disjunction successor (transpose successor)) equal)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1261818310013041,
            "num_unique_values": 56,
            "num_values_explored": 137,
            "solution": "(chain successor (disjunction (transpose successor) (chain successor successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (disjunction (transpose successor) (chain successor successor)))\n)",
            "task_solution": "(chain successor (disjunction (transpose successor) (chain successor successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.14705928199691698,
            "num_unique_values": 67,
            "num_values_explored": 154,
            "solution": "(disjunction zero (disjunction successor (transpose (chain successor successor))))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(disjunction zero (disjunction successor (transpose (chain successor successor))))\n)",
            "task_solution": "(disjunction zero (disjunction successor (transpose (chain successor successor))))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.10336989496136084,
            "num_unique_values": 37,
            "num_values_explored": 107,
            "solution": "(recursive (recursive successor equal successor) (transpose successor) zero)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (recursive equal (transpose successor) zero) successor)\n)",
            "task_solution": "(recursive successor (recursive equal (transpose successor) zero) successor)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.20474900596309453,
            "num_unique_values": 97,
            "num_values_explored": 204,
            "solution": "(chain (disjunction successor (transpose (disjunction successor equal))) successor)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (disjunction successor (transpose (disjunction successor equal))) successor)\n)",
            "task_solution": "(chain (disjunction successor (transpose (disjunction successor equal))) successor)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.14625833003083244,
            "num_unique_values": 66,
            "num_values_explored": 153,
            "solution": "(disjunction (transpose successor) (chain successor (chain successor successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n        False],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [False, False, False,  True, False, False, False,  True, False,\n        False],\n       [False, False, False, False,  True, False, False, False,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (chain successor (chain successor successor)))\n)",
            "task_solution": "(disjunction (transpose successor) (chain successor (chain successor successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1456468320102431,
            "num_unique_values": 66,
            "num_values_explored": 159,
            "solution": "(disjunction successor (disjunction (transpose successor) (chain successor (transpose successor))))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction successor (chain (disjunction successor equal) (transpose successor)))\n)",
            "task_solution": "(disjunction successor (chain (disjunction successor equal) (transpose successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.10403001098893583,
            "num_unique_values": 36,
            "num_values_explored": 106,
            "solution": "(recursive (chain successor successor) (chain successor successor) successor)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor successor) (chain successor successor) successor)\n)",
            "task_solution": "(recursive (chain successor successor) (chain successor successor) successor)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.16387257602764294,
            "num_unique_values": 76,
            "num_values_explored": 164,
            "solution": "(recursive equal (transpose (chain successor successor)) (transpose successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive equal (transpose (chain successor successor)) (transpose successor))\n)",
            "task_solution": "(recursive equal (transpose (chain successor successor)) (transpose successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.11184724100166932,
            "num_unique_values": 38,
            "num_values_explored": 115,
            "solution": "(recursive successor successor (transpose (recursive successor successor equal)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (recursive (transpose successor) equal successor))\n)",
            "task_solution": "(recursive successor successor (recursive (transpose successor) equal successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.10603205399820581,
            "num_unique_values": 37,
            "num_values_explored": 107,
            "solution": "(recursive (disjunction equal (transpose successor)) zero (transpose successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(recursive (transpose (disjunction successor equal)) zero (transpose successor))\n)",
            "task_solution": "(recursive (transpose (disjunction successor equal)) zero (transpose successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.18324820598354563,
            "num_unique_values": 86,
            "num_values_explored": 184,
            "solution": "(transpose (chain (disjunction equal successor) (disjunction equal successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True]])],\n    solution=(transpose (chain (disjunction successor equal) (disjunction successor equal)))\n)",
            "task_solution": "(transpose (chain (disjunction successor equal) (disjunction successor equal)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.12909625901374966,
            "num_unique_values": 57,
            "num_values_explored": 135,
            "solution": "(chain (recursive successor successor (chain successor successor)) successor)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor successor (chain successor successor)) successor)\n)",
            "task_solution": "(chain (recursive successor successor (chain successor successor)) successor)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.17093563202070072,
            "num_unique_values": 86,
            "num_values_explored": 182,
            "solution": "(transpose (chain (disjunction successor equal) (chain successor successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False]])],\n    solution=(transpose (chain successor (chain successor (disjunction successor equal))))\n)",
            "task_solution": "(transpose (chain successor (chain successor (disjunction successor equal))))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1436489109764807,
            "num_unique_values": 66,
            "num_values_explored": 152,
            "solution": "(disjunction equal (chain (transpose (chain successor successor)) successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(disjunction equal (chain (transpose (chain successor successor)) successor))\n)",
            "task_solution": "(disjunction equal (chain (transpose (chain successor successor)) successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.10558443603804335,
            "num_unique_values": 36,
            "num_values_explored": 107,
            "solution": "(recursive equal successor (transpose (recursive successor successor equal)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (recursive (transpose successor) equal successor))\n)",
            "task_solution": "(recursive equal successor (recursive (transpose successor) equal successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.284751937026158,
            "num_unique_values": 145,
            "num_values_explored": 274,
            "solution": "(chain (transpose (chain successor successor)) (chain zero successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (transpose (chain successor successor)) (chain zero successor))\n)",
            "task_solution": "(chain (transpose (chain successor successor)) (chain zero successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.186372256022878,
            "num_unique_values": 86,
            "num_values_explored": 179,
            "solution": "(transpose (recursive zero zero (transpose (chain successor successor))))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (recursive zero zero (transpose (chain successor successor))))\n)",
            "task_solution": "(transpose (recursive zero zero (transpose (chain successor successor))))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.16477361699799076,
            "num_unique_values": 76,
            "num_values_explored": 157,
            "solution": "(recursive successor successor (chain successor (chain successor successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (chain successor (chain successor successor)))\n)",
            "task_solution": "(recursive successor successor (chain successor (chain successor successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.10623470903374255,
            "num_unique_values": 38,
            "num_values_explored": 108,
            "solution": "(recursive (disjunction equal successor) (chain zero successor) equal)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (disjunction successor equal) (chain zero successor) equal)\n)",
            "task_solution": "(recursive (disjunction successor equal) (chain zero successor) equal)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.2070277479942888,
            "num_unique_values": 99,
            "num_values_explored": 211,
            "solution": "(chain successor (chain successor (transpose (disjunction successor equal))))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (transpose (disjunction successor equal))))\n)",
            "task_solution": "(chain successor (chain successor (transpose (disjunction successor equal))))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.2060567910084501,
            "num_unique_values": 92,
            "num_values_explored": 199,
            "solution": "(transpose (disjunction (chain (transpose successor) successor) (chain (transpose (chain successor successor)) successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (transpose successor) (chain successor (disjunction successor equal)))\n)",
            "task_solution": "(chain (transpose successor) (chain successor (disjunction successor equal)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.257469002972357,
            "num_unique_values": 132,
            "num_values_explored": 253,
            "solution": "(transpose (chain zero (chain successor (chain successor successor))))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (chain zero (chain successor (chain successor successor))))\n)",
            "task_solution": "(transpose (chain zero (chain successor (chain successor successor))))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.19181923801079392,
            "num_unique_values": 86,
            "num_values_explored": 192,
            "solution": "(transpose (disjunction equal (chain successor (chain successor successor))))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True]])],\n    solution=(transpose (disjunction equal (chain successor (chain successor successor))))\n)",
            "task_solution": "(transpose (disjunction equal (chain successor (chain successor successor))))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.15172356000402942,
            "num_unique_values": 71,
            "num_values_explored": 152,
            "solution": "(disjunction (transpose successor) (chain (recursive successor (transpose successor) successor) zero))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [ True, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (transpose (chain successor successor)) zero)\n)",
            "task_solution": "(recursive (transpose successor) (transpose (chain successor successor)) zero)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1840504770516418,
            "num_unique_values": 86,
            "num_values_explored": 179,
            "solution": "(transpose (disjunction successor (recursive equal (transpose successor) successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False,  True,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False,  True,  True, False,  True, False,\n         True],\n       [False, False, False, False, False,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction successor (recursive equal (transpose successor) successor)))\n)",
            "task_solution": "(transpose (disjunction successor (recursive equal (transpose successor) successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.17737196694361046,
            "num_unique_values": 76,
            "num_values_explored": 171,
            "solution": "(recursive equal (transpose successor) (recursive successor zero (transpose successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(recursive equal (transpose successor) (recursive successor zero (transpose successor)))\n)",
            "task_solution": "(recursive equal (transpose successor) (recursive successor zero (transpose successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1085381589946337,
            "num_unique_values": 45,
            "num_values_explored": 111,
            "solution": "(recursive (disjunction successor equal) successor (recursive successor equal successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (disjunction successor equal) successor (recursive successor equal successor))\n)",
            "task_solution": "(recursive (disjunction successor equal) successor (recursive successor equal successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.10649865196319297,
            "num_unique_values": 41,
            "num_values_explored": 105,
            "solution": "(recursive (transpose successor) (chain successor (transpose successor)) (transpose successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (chain successor (transpose successor)) (transpose successor))\n)",
            "task_solution": "(recursive (transpose successor) (chain successor (transpose successor)) (transpose successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.18528008001158014,
            "num_unique_values": 86,
            "num_values_explored": 177,
            "solution": "(transpose (disjunction equal (recursive successor successor (chain successor successor))))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction equal (recursive successor successor (chain successor successor))))\n)",
            "task_solution": "(transpose (disjunction equal (recursive successor successor (chain successor successor))))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1474766000173986,
            "num_unique_values": 57,
            "num_values_explored": 139,
            "solution": "(chain (disjunction zero (chain successor successor)) (chain successor successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction zero (chain successor successor)) (chain successor successor))\n)",
            "task_solution": "(chain (disjunction zero (chain successor successor)) (chain successor successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.09443859895691276,
            "num_unique_values": 31,
            "num_values_explored": 96,
            "solution": "(disjunction (chain successor successor) (transpose (recursive successor equal successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (chain successor successor) (recursive (transpose successor) successor equal))\n)",
            "task_solution": "(disjunction (chain successor successor) (recursive (transpose successor) successor equal))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.19944949797354639,
            "num_unique_values": 86,
            "num_values_explored": 178,
            "solution": "(transpose (chain (disjunction successor (transpose successor)) (disjunction equal successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True]])],\n    solution=(transpose (chain (disjunction successor (transpose successor)) (disjunction successor equal)))\n)",
            "task_solution": "(transpose (chain (disjunction successor (transpose successor)) (disjunction successor equal)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.18337081500794739,
            "num_unique_values": 78,
            "num_values_explored": 171,
            "solution": "(recursive (recursive equal (chain successor successor) successor) (chain successor (transpose (disjunction equal (chain successor successor)))) (chain successor successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (chain successor (disjunction successor (transpose successor))) successor)\n)",
            "task_solution": "(recursive equal (chain successor (disjunction successor (transpose successor))) successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.10576821101130918,
            "num_unique_values": 37,
            "num_values_explored": 107,
            "solution": "(recursive successor (chain successor successor) (disjunction successor (transpose successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (chain successor successor) (disjunction successor (transpose successor)))\n)",
            "task_solution": "(recursive successor (chain successor successor) (disjunction successor (transpose successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.15761261800071225,
            "num_unique_values": 63,
            "num_values_explored": 138,
            "solution": "(chain successor (transpose (chain (recursive successor successor equal) successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (transpose (chain successor successor))) equal successor)\n)",
            "task_solution": "(recursive (chain successor (transpose (chain successor successor))) equal successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.16039087600074708,
            "num_unique_values": 74,
            "num_values_explored": 145,
            "solution": "(disjunction (chain zero successor) (chain zero (recursive equal successor (transpose successor))))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain zero (disjunction successor (recursive equal successor (transpose successor))))\n)",
            "task_solution": "(chain zero (disjunction successor (recursive equal successor (transpose successor))))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1416737959953025,
            "num_unique_values": 57,
            "num_values_explored": 140,
            "solution": "(chain (transpose successor) (recursive (chain successor successor) zero successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (transpose successor) (recursive (chain successor successor) zero successor))\n)",
            "task_solution": "(chain (transpose successor) (recursive (chain successor successor) zero successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.18380725203314796,
            "num_unique_values": 84,
            "num_values_explored": 168,
            "solution": "(recursive (transpose (disjunction equal (chain successor successor))) successor (recursive successor successor (recursive successor successor equal)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True]])],\n    solution=(transpose (disjunction equal (recursive (chain successor successor) equal successor)))\n)",
            "task_solution": "(transpose (disjunction equal (recursive (chain successor successor) equal successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1717403790098615,
            "num_unique_values": 77,
            "num_values_explored": 171,
            "solution": "(recursive successor (chain (transpose (chain successor successor)) successor) successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive successor (chain (transpose (chain successor successor)) successor) successor)\n)",
            "task_solution": "(recursive successor (chain (transpose (chain successor successor)) successor) successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1343279280117713,
            "num_unique_values": 57,
            "num_values_explored": 134,
            "solution": "(chain (recursive successor (transpose successor) (disjunction equal successor)) successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (recursive successor (transpose successor) (disjunction successor equal)) successor)\n)",
            "task_solution": "(chain (recursive successor (transpose successor) (disjunction successor equal)) successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.17583114298759028,
            "num_unique_values": 84,
            "num_values_explored": 169,
            "solution": "(recursive (transpose (recursive zero zero (transpose successor))) successor equal)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (transpose (recursive zero zero (transpose successor))) successor equal)\n)",
            "task_solution": "(recursive (transpose (recursive zero zero (transpose successor))) successor equal)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.10716151801170781,
            "num_unique_values": 38,
            "num_values_explored": 108,
            "solution": "(recursive (transpose successor) successor (disjunction equal (chain successor successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) successor (disjunction equal (chain successor successor)))\n)",
            "task_solution": "(recursive (transpose successor) successor (disjunction equal (chain successor successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.21234293503221124,
            "num_unique_values": 87,
            "num_values_explored": 194,
            "solution": "(transpose (chain (recursive successor (chain successor successor) successor) successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False]])],\n    solution=(transpose (chain (recursive successor (chain successor successor) successor) successor))\n)",
            "task_solution": "(transpose (chain (recursive successor (chain successor successor) successor) successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.19875606999266893,
            "num_unique_values": 104,
            "num_values_explored": 203,
            "solution": "(chain successor (chain (disjunction zero (chain successor successor)) (chain successor successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (chain successor (chain successor successor))))\n)",
            "task_solution": "(chain successor (chain successor (chain successor (chain successor successor))))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.14561460498953238,
            "num_unique_values": 60,
            "num_values_explored": 138,
            "solution": "(chain (disjunction equal successor) (disjunction (chain successor successor) equal))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (disjunction successor equal) (disjunction equal (chain successor successor)))\n)",
            "task_solution": "(chain (disjunction successor equal) (disjunction equal (chain successor successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.17432210402330384,
            "num_unique_values": 76,
            "num_values_explored": 162,
            "solution": "(recursive (disjunction zero successor) (transpose (chain successor successor)) equal)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (disjunction zero successor) (transpose (chain successor successor)) equal)\n)",
            "task_solution": "(recursive (disjunction zero successor) (transpose (chain successor successor)) equal)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1417170639615506,
            "num_unique_values": 65,
            "num_values_explored": 138,
            "solution": "(chain (recursive equal successor (transpose successor)) (disjunction zero (chain successor successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (disjunction zero (chain successor successor)) successor (transpose successor))\n)",
            "task_solution": "(recursive (disjunction zero (chain successor successor)) successor (transpose successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.17122071998892352,
            "num_unique_values": 76,
            "num_values_explored": 160,
            "solution": "(recursive successor successor (recursive equal (chain successor successor) successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (recursive equal (chain successor successor) successor))\n)",
            "task_solution": "(recursive successor successor (recursive equal (chain successor successor) successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.16401885903906077,
            "num_unique_values": 66,
            "num_values_explored": 154,
            "solution": "(disjunction equal (recursive (chain successor successor) zero (transpose successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (recursive (chain successor successor) zero (transpose successor)))\n)",
            "task_solution": "(disjunction equal (recursive (chain successor successor) zero (transpose successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.11240600503515452,
            "num_unique_values": 38,
            "num_values_explored": 106,
            "solution": "(recursive (chain successor successor) (disjunction zero successor) (transpose successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor successor) (disjunction zero successor) (transpose successor))\n)",
            "task_solution": "(recursive (chain successor successor) (disjunction zero successor) (transpose successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1357506099739112,
            "num_unique_values": 57,
            "num_values_explored": 136,
            "solution": "(chain (recursive (disjunction successor equal) equal (chain successor successor)) (disjunction successor (transpose successor)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(chain (disjunction successor equal) (recursive successor (transpose successor) successor))\n)",
            "task_solution": "(chain (disjunction successor equal) (recursive successor (transpose successor) successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1482841760152951,
            "num_unique_values": 67,
            "num_values_explored": 157,
            "solution": "(disjunction (transpose (chain successor successor)) (chain (transpose successor) (chain successor successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(transpose (chain (disjunction successor (transpose (chain successor successor))) successor))\n)",
            "task_solution": "(transpose (chain (disjunction successor (transpose (chain successor successor))) successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.30113925598561764,
            "num_unique_values": 158,
            "num_values_explored": 287,
            "solution": "(recursive (transpose successor) (transpose (disjunction (chain successor successor) (recursive equal equal successor))) (chain (recursive successor successor equal) successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (recursive (transpose successor) successor equal) successor)\n)",
            "task_solution": "(recursive (transpose successor) (recursive (transpose successor) successor equal) successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.10727022995706648,
            "num_unique_values": 44,
            "num_values_explored": 108,
            "solution": "(recursive (chain (disjunction zero successor) successor) successor (transpose successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (disjunction zero successor) successor) successor (transpose successor))\n)",
            "task_solution": "(recursive (chain (disjunction zero successor) successor) successor (transpose successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.17177527502644807,
            "num_unique_values": 79,
            "num_values_explored": 161,
            "solution": "(recursive equal (chain zero successor) (transpose (chain successor successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (chain zero successor) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive equal (chain zero successor) (transpose (chain successor successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1748672870453447,
            "num_unique_values": 76,
            "num_values_explored": 166,
            "solution": "(recursive (disjunction successor equal) (recursive equal equal successor) (chain successor (recursive (disjunction zero successor) (transpose successor) zero)))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (disjunction successor equal) equal (recursive successor equal successor))\n)",
            "task_solution": "(recursive (disjunction successor equal) equal (recursive successor equal successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1417568540200591,
            "num_unique_values": 57,
            "num_values_explored": 140,
            "solution": "(chain (disjunction zero (chain successor successor)) (disjunction zero successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction zero (chain successor successor)) (disjunction zero successor))\n)",
            "task_solution": "(chain (disjunction zero (chain successor successor)) (disjunction zero successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.13658172194845974,
            "num_unique_values": 56,
            "num_values_explored": 140,
            "solution": "(chain successor (disjunction successor (transpose (recursive successor successor equal))))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (disjunction successor (recursive (transpose successor) equal successor)))\n)",
            "task_solution": "(chain successor (disjunction successor (recursive (transpose successor) equal successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.2563937819795683,
            "num_unique_values": 136,
            "num_values_explored": 260,
            "solution": "(chain (disjunction successor (disjunction equal (recursive (chain successor successor) successor (recursive equal successor equal)))) successor)",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (recursive successor successor (chain successor successor)) equal)\n)",
            "task_solution": "(recursive successor (recursive successor successor (chain successor successor)) equal)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1829397429828532,
            "num_unique_values": 81,
            "num_values_explored": 173,
            "solution": "(recursive (transpose (disjunction zero successor)) equal (chain zero successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose (disjunction zero successor)) equal (chain zero successor))\n)",
            "task_solution": "(recursive (transpose (disjunction zero successor)) equal (chain zero successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.13302407396258786,
            "num_unique_values": 60,
            "num_values_explored": 134,
            "solution": "(chain (recursive successor (chain (transpose successor) successor) successor) successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor (chain (transpose successor) successor) successor) successor)\n)",
            "task_solution": "(chain (recursive successor (chain (transpose successor) successor) successor) successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.17192653403617442,
            "num_unique_values": 77,
            "num_values_explored": 160,
            "solution": "(recursive (chain successor (chain successor successor)) (transpose successor) successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False]])],\n    solution=(recursive (chain successor (chain successor successor)) (transpose successor) successor)\n)",
            "task_solution": "(recursive (chain successor (chain successor successor)) (transpose successor) successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.13974214298650622,
            "num_unique_values": 58,
            "num_values_explored": 137,
            "solution": "(chain (recursive successor (transpose successor) successor) (disjunction zero successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(chain (recursive successor (transpose successor) successor) (disjunction zero successor))\n)",
            "task_solution": "(chain (recursive successor (transpose successor) successor) (disjunction zero successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1441796210128814,
            "num_unique_values": 66,
            "num_values_explored": 156,
            "solution": "(disjunction equal (chain successor (recursive successor (transpose successor) successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain successor (recursive successor (transpose successor) successor)))\n)",
            "task_solution": "(disjunction equal (chain successor (recursive successor (transpose successor) successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1628087239805609,
            "num_unique_values": 77,
            "num_values_explored": 164,
            "solution": "(recursive (transpose successor) (chain (disjunction zero successor) successor) equal)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (chain (disjunction zero successor) successor) equal)\n)",
            "task_solution": "(recursive (transpose successor) (chain (disjunction zero successor) successor) equal)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1692931120051071,
            "num_unique_values": 77,
            "num_values_explored": 164,
            "solution": "(recursive (chain successor successor) (disjunction successor (transpose successor)) equal)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (chain successor successor) (disjunction successor (transpose successor)) equal)\n)",
            "task_solution": "(recursive (chain successor successor) (disjunction successor (transpose successor)) equal)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1396653549745679,
            "num_unique_values": 68,
            "num_values_explored": 148,
            "solution": "(disjunction equal (recursive successor (transpose successor) (disjunction zero successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True,  True,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n         True]])],\n    solution=(disjunction equal (recursive successor (transpose successor) (disjunction zero successor)))\n)",
            "task_solution": "(disjunction equal (recursive successor (transpose successor) (disjunction zero successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.10641854099230841,
            "num_unique_values": 37,
            "num_values_explored": 108,
            "solution": "(recursive (disjunction (transpose successor) (chain successor successor)) zero successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (disjunction (transpose successor) (chain successor successor)) zero successor)\n)",
            "task_solution": "(recursive (disjunction (transpose successor) (chain successor successor)) zero successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.11512855801265687,
            "num_unique_values": 50,
            "num_values_explored": 120,
            "solution": "(transpose (recursive (chain successor successor) equal (chain successor successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain successor successor)) (chain successor successor) equal)\n)",
            "task_solution": "(recursive (transpose (chain successor successor)) (chain successor successor) equal)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.10778319998644292,
            "num_unique_values": 40,
            "num_values_explored": 107,
            "solution": "(recursive equal (disjunction successor (transpose successor)) (chain successor successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True,  True,\n        False],\n       [ True,  True,  True,  True, False,  True,  True, False, False,\n         True]])],\n    solution=(recursive equal (disjunction successor (transpose successor)) (chain successor successor))\n)",
            "task_solution": "(recursive equal (disjunction successor (transpose successor)) (chain successor successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.12368288898142055,
            "num_unique_values": 44,
            "num_values_explored": 108,
            "solution": "(recursive successor (recursive equal successor equal) (chain successor successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (recursive equal successor equal) (chain successor successor))\n)",
            "task_solution": "(recursive successor (recursive equal successor equal) (chain successor successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.18085961497854441,
            "num_unique_values": 86,
            "num_values_explored": 186,
            "solution": "(transpose (chain (disjunction (chain successor successor) (transpose successor)) successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True]])],\n    solution=(transpose (chain (disjunction (transpose successor) (chain successor successor)) successor))\n)",
            "task_solution": "(transpose (chain (disjunction (transpose successor) (chain successor successor)) successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1797060479875654,
            "num_unique_values": 79,
            "num_values_explored": 169,
            "solution": "(recursive (transpose (chain (disjunction zero successor) successor)) (transpose successor) (disjunction equal successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain (disjunction zero successor) successor)) equal successor)\n)",
            "task_solution": "(recursive (transpose (chain (disjunction zero successor) successor)) equal successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.10277493897592649,
            "num_unique_values": 36,
            "num_values_explored": 106,
            "solution": "(recursive (transpose successor) (chain successor successor) (disjunction successor equal))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (chain successor successor) (disjunction successor equal))\n)",
            "task_solution": "(recursive (transpose successor) (chain successor successor) (disjunction successor equal))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.22115378902526572,
            "num_unique_values": 113,
            "num_values_explored": 215,
            "solution": "(disjunction (recursive successor (transpose successor) (recursive equal equal successor)) (transpose (recursive successor (disjunction successor (transpose (chain zero successor))) equal)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive successor (transpose successor) (recursive successor (transpose successor) equal))\n)",
            "task_solution": "(recursive successor (transpose successor) (recursive successor (transpose successor) equal))",
            "task_solution_weight": 9
        }
    ],
    "success_rate": 0.9203413940256046
}
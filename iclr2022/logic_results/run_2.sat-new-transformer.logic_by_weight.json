{
    "num_tasks": 703,
    "num_tasks_solved": 667,
    "results": [
        {
            "elapsed_time": 0.319120517000556,
            "num_unique_values": 110,
            "num_values_explored": 228,
            "solution": "(disjunction (chain successor successor) (chain (transpose (chain successor (chain successor successor))) successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n        False],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [False, False, False,  True, False, False, False,  True, False,\n        False],\n       [False, False, False, False,  True, False, False, False,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(chain (disjunction successor (transpose (chain successor (chain successor successor)))) successor)\n)",
            "task_solution": "(chain (disjunction successor (transpose (chain successor (chain successor successor)))) successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.1963868479942903,
            "num_unique_values": 66,
            "num_values_explored": 155,
            "solution": "(disjunction equal (chain (recursive successor (disjunction zero successor) (transpose successor)) (transpose successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive successor (disjunction zero successor) (transpose successor)) successor)\n)",
            "task_solution": "(recursive equal (recursive successor (disjunction zero successor) (transpose successor)) successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.25322935095755383,
            "num_unique_values": 86,
            "num_values_explored": 188,
            "solution": "(transpose (chain (recursive successor (transpose successor) successor) (chain successor successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False]])],\n    solution=(transpose (chain (recursive successor (transpose successor) successor) (chain successor successor)))\n)",
            "task_solution": "(transpose (chain (recursive successor (transpose successor) successor) (chain successor successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.2759174059610814,
            "num_unique_values": 96,
            "num_values_explored": 204,
            "solution": "(chain (transpose (disjunction successor (recursive equal (transpose successor) successor))) successor)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False,  True,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False,  True,  True, False,  True, False,\n         True],\n       [False, False, False, False, False,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (transpose (disjunction successor (recursive equal (transpose successor) successor))) successor)\n)",
            "task_solution": "(chain (transpose (disjunction successor (recursive equal (transpose successor) successor))) successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.2995532889617607,
            "num_unique_values": 113,
            "num_values_explored": 223,
            "solution": "(disjunction successor (chain (recursive (transpose successor) (transpose successor) successor) (chain successor successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive successor (recursive (transpose successor) (transpose successor) successor) (transpose successor))\n)",
            "task_solution": "(recursive successor (recursive (transpose successor) (transpose successor) successor) (transpose successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.1804383149719797,
            "num_unique_values": 56,
            "num_values_explored": 138,
            "solution": "(chain (recursive equal successor (chain successor successor)) (chain zero successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive equal successor (chain successor successor)) (chain zero successor))\n)",
            "task_solution": "(chain (recursive equal successor (chain successor successor)) (chain zero successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.27181279595242813,
            "num_unique_values": 96,
            "num_values_explored": 203,
            "solution": "(chain (disjunction (chain zero successor) (transpose (chain successor successor))) successor)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (disjunction (chain zero successor) (transpose (chain successor successor))) successor)\n)",
            "task_solution": "(chain (disjunction (chain zero successor) (transpose (chain successor successor))) successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.23629954596981406,
            "num_unique_values": 90,
            "num_values_explored": 181,
            "solution": "(transpose (recursive successor (recursive successor successor (chain successor successor)) equal))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (transpose successor) equal (recursive successor successor (chain successor successor)))\n)",
            "task_solution": "(recursive (transpose successor) equal (recursive successor successor (chain successor successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.237226010998711,
            "num_unique_values": 77,
            "num_values_explored": 167,
            "solution": "(recursive successor (recursive (disjunction (chain successor successor) equal) (transpose successor) successor) successor)",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False]])],\n    solution=(recursive successor (recursive (chain successor successor) (transpose successor) successor) successor)\n)",
            "task_solution": "(recursive successor (recursive (chain successor successor) (transpose successor) successor) successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.3076727259904146,
            "num_unique_values": 106,
            "num_values_explored": 228,
            "solution": "(disjunction successor (transpose (chain (recursive successor (transpose successor) successor) successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True,  True,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True,  True,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True,  True,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True]])],\n    solution=(disjunction successor (transpose (chain (recursive successor (transpose successor) successor) successor)))\n)",
            "task_solution": "(disjunction successor (transpose (chain (recursive successor (transpose successor) successor) successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.23456158599583432,
            "num_unique_values": 77,
            "num_values_explored": 172,
            "solution": "(recursive (chain (transpose successor) (chain successor successor)) (transpose successor) successor)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (chain (transpose successor) (chain successor successor)) (transpose successor) successor)\n)",
            "task_solution": "(recursive (chain (transpose successor) (chain successor successor)) (transpose successor) successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.2492928080027923,
            "num_unique_values": 96,
            "num_values_explored": 190,
            "solution": "(chain (recursive successor successor (transpose (chain successor successor))) (transpose successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False,  True, False, False,\n        False],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor successor (transpose (chain successor successor))) (transpose successor))\n)",
            "task_solution": "(chain (recursive successor successor (transpose (chain successor successor))) (transpose successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.3347942400141619,
            "num_unique_values": 120,
            "num_values_explored": 223,
            "solution": "(recursive (transpose (disjunction successor equal)) equal (transpose (chain successor successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(recursive (transpose (disjunction successor equal)) equal (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (transpose (disjunction successor equal)) equal (transpose (chain successor successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.20428851299220696,
            "num_unique_values": 66,
            "num_values_explored": 160,
            "solution": "(disjunction equal (disjunction (chain successor successor) (chain (transpose successor) zero)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (disjunction equal (chain successor successor)) equal (chain zero successor))\n)",
            "task_solution": "(recursive (disjunction equal (chain successor successor)) equal (chain zero successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.2091924850246869,
            "num_unique_values": 73,
            "num_values_explored": 167,
            "solution": "(disjunction equal (chain (transpose (chain successor successor)) (recursive (chain successor successor) zero successor)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive zero zero (transpose (chain successor successor))) successor)\n)",
            "task_solution": "(recursive equal (recursive zero zero (transpose (chain successor successor))) successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.14506253699073568,
            "num_unique_values": 40,
            "num_values_explored": 114,
            "solution": "(recursive (disjunction successor (transpose successor)) (chain zero successor) (transpose successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (disjunction successor (transpose successor)) (chain zero successor) (transpose successor))\n)",
            "task_solution": "(recursive (disjunction successor (transpose successor)) (chain zero successor) (transpose successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.27563978696707636,
            "num_unique_values": 96,
            "num_values_explored": 195,
            "solution": "(chain (recursive equal (chain (transpose (disjunction zero successor)) (disjunction successor equal)) (transpose (chain successor successor))) successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (chain (transpose (disjunction zero successor)) successor) (transpose successor))\n)",
            "task_solution": "(recursive successor (chain (transpose (disjunction zero successor)) successor) (transpose successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.30889445601496845,
            "num_unique_values": 106,
            "num_values_explored": 216,
            "solution": "(disjunction equal (recursive successor (recursive successor successor (transpose successor)) successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False,  True,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False,  True,  True, False,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (recursive successor (recursive successor successor (transpose successor)) successor))\n)",
            "task_solution": "(disjunction equal (recursive successor (recursive successor successor (transpose successor)) successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.2267216899781488,
            "num_unique_values": 76,
            "num_values_explored": 162,
            "solution": "(recursive (transpose successor) (recursive zero (transpose successor) (transpose successor)) successor)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (recursive zero (transpose successor) (transpose successor)) successor)\n)",
            "task_solution": "(recursive (transpose successor) (recursive zero (transpose successor) (transpose successor)) successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.21179132896941155,
            "num_unique_values": 66,
            "num_values_explored": 145,
            "solution": "(disjunction equal (chain (recursive successor (chain (transpose successor) successor) (chain successor successor)) successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain (recursive successor equal (chain successor successor)) successor))\n)",
            "task_solution": "(disjunction equal (chain (recursive successor equal (chain successor successor)) successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.2775347930146381,
            "num_unique_values": 103,
            "num_values_explored": 190,
            "solution": "(chain (transpose successor) (disjunction successor (recursive equal successor (transpose successor))))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True,  True,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True,  True,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(chain (transpose successor) (disjunction successor (recursive equal successor (transpose successor))))\n)",
            "task_solution": "(chain (transpose successor) (disjunction successor (recursive equal successor (transpose successor))))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.306602643977385,
            "num_unique_values": 123,
            "num_values_explored": 225,
            "solution": "(recursive successor (chain successor successor) (recursive (transpose successor) successor (recursive equal successor equal)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (chain successor successor) (recursive (transpose successor) successor equal))\n)",
            "task_solution": "(recursive successor (chain successor successor) (recursive (transpose successor) successor equal))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.2051181939896196,
            "num_unique_values": 71,
            "num_values_explored": 153,
            "solution": "(disjunction (transpose successor) (chain (chain successor successor) (chain successor successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False,  True, False, False, False, False,\n        False],\n       [ True, False, False, False, False,  True, False, False, False,\n        False],\n       [False,  True, False, False, False, False,  True, False, False,\n        False],\n       [False, False,  True, False, False, False, False,  True, False,\n        False],\n       [False, False, False,  True, False, False, False, False,  True,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n         True],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (chain successor (chain successor (chain successor successor))))\n)",
            "task_solution": "(disjunction (transpose successor) (chain successor (chain successor (chain successor successor))))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.23303247900912538,
            "num_unique_values": 78,
            "num_values_explored": 162,
            "solution": "(recursive (recursive equal (chain (transpose successor) successor) (transpose successor)) equal (transpose (chain successor successor)))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (transpose (disjunction successor equal)) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive equal (transpose (disjunction successor equal)) (transpose (chain successor successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.22356283699627966,
            "num_unique_values": 69,
            "num_values_explored": 166,
            "solution": "(disjunction (chain zero successor) (transpose (disjunction equal (chain successor successor))))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True]])],\n    solution=(disjunction equal (disjunction (chain zero successor) (transpose (chain successor successor))))\n)",
            "task_solution": "(disjunction equal (disjunction (chain zero successor) (transpose (chain successor successor))))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.28379101800965145,
            "num_unique_values": 107,
            "num_values_explored": 211,
            "solution": "(disjunction successor (transpose (disjunction equal (chain successor (chain successor successor)))))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False, False,  True,  True, False, False, False, False,\n        False],\n       [False,  True, False, False,  True,  True, False, False, False,\n        False],\n       [False, False,  True, False, False,  True,  True, False, False,\n        False],\n       [False, False, False,  True, False, False,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False, False,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n         True]])],\n    solution=(disjunction successor (transpose (disjunction equal (chain successor (chain successor successor)))))\n)",
            "task_solution": "(disjunction successor (transpose (disjunction equal (chain successor (chain successor successor)))))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.22998574300436303,
            "num_unique_values": 76,
            "num_values_explored": 165,
            "solution": "(recursive (recursive successor successor (recursive successor equal successor)) (chain successor successor) (recursive successor successor equal))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (recursive successor equal (recursive successor equal successor)))\n)",
            "task_solution": "(recursive successor successor (recursive successor equal (recursive successor equal successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.17766189097892493,
            "num_unique_values": 58,
            "num_values_explored": 139,
            "solution": "(chain successor (recursive (disjunction (transpose successor) successor) (transpose successor) zero))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True, False, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False, False, False,  True, False,  True, False, False,\n        False],\n       [ True, False, False, False, False,  True, False,  True, False,\n        False],\n       [ True, False, False, False, False, False,  True, False,  True,\n        False],\n       [ True, False, False, False, False, False, False,  True, False,\n         True],\n       [ True, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive (disjunction successor (transpose successor)) (transpose successor) zero))\n)",
            "task_solution": "(chain successor (recursive (disjunction successor (transpose successor)) (transpose successor) zero))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.21398947399575263,
            "num_unique_values": 68,
            "num_values_explored": 155,
            "solution": "(disjunction (transpose (chain successor successor)) (recursive successor (transpose successor) successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True,  True,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True,  True,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n        False]])],\n    solution=(disjunction (transpose (chain successor successor)) (recursive successor (transpose successor) successor))\n)",
            "task_solution": "(disjunction (transpose (chain successor successor)) (recursive successor (transpose successor) successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.2381113320006989,
            "num_unique_values": 81,
            "num_values_explored": 169,
            "solution": "(recursive successor (recursive (chain successor successor) (transpose successor) successor) equal)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive successor (recursive (chain successor successor) (transpose successor) successor) equal)\n)",
            "task_solution": "(recursive successor (recursive (chain successor successor) (transpose successor) successor) equal)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.29935085598845035,
            "num_unique_values": 114,
            "num_values_explored": 216,
            "solution": "(disjunction successor (transpose (disjunction successor (recursive equal successor (transpose successor)))))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True, False,  True,  True,  True,  True, False, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True,  True, False,\n        False],\n       [False,  True, False,  True, False,  True,  True,  True,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True]])],\n    solution=(disjunction successor (transpose (disjunction successor (recursive equal successor (transpose successor)))))\n)",
            "task_solution": "(disjunction successor (transpose (disjunction successor (recursive equal successor (transpose successor)))))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.2515751710161567,
            "num_unique_values": 76,
            "num_values_explored": 163,
            "solution": "(recursive (disjunction equal successor) equal (recursive (chain successor successor) successor equal))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True]])],\n    solution=(disjunction equal (recursive successor (recursive equal (transpose successor) successor) successor))\n)",
            "task_solution": "(disjunction equal (recursive successor (recursive equal (transpose successor) successor) successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.28319799999007955,
            "num_unique_values": 86,
            "num_values_explored": 187,
            "solution": "(transpose (chain (disjunction zero (recursive successor (transpose successor) equal)) successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True]])],\n    solution=(transpose (chain (disjunction zero (recursive successor (transpose successor) equal)) successor))\n)",
            "task_solution": "(transpose (chain (disjunction zero (recursive successor (transpose successor) equal)) successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.20149265800137073,
            "num_unique_values": 73,
            "num_values_explored": 146,
            "solution": "(disjunction equal (chain (transpose (disjunction successor equal)) (chain successor successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain (transpose (disjunction successor equal)) (chain successor successor)))\n)",
            "task_solution": "(disjunction equal (chain (transpose (disjunction successor equal)) (chain successor successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.15159649099223316,
            "num_unique_values": 38,
            "num_values_explored": 112,
            "solution": "(recursive (disjunction zero (chain successor successor)) (chain zero successor) equal)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (disjunction zero (chain successor successor)) (chain zero successor) equal)\n)",
            "task_solution": "(recursive (disjunction zero (chain successor successor)) (chain zero successor) equal)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.23953527898993343,
            "num_unique_values": 78,
            "num_values_explored": 171,
            "solution": "(recursive (disjunction successor (chain successor (transpose successor))) (chain successor successor) (disjunction successor equal))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor successor (transpose successor)) (transpose (disjunction successor equal)))\n)",
            "task_solution": "(chain (recursive successor successor (transpose successor)) (transpose (disjunction successor equal)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.22912348998943344,
            "num_unique_values": 79,
            "num_values_explored": 165,
            "solution": "(recursive equal (disjunction equal successor) (chain successor (chain successor successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True, False,  True,  True, False,  True,  True, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n         True]])],\n    solution=(recursive equal (disjunction successor equal) (chain successor (chain successor successor)))\n)",
            "task_solution": "(recursive equal (disjunction successor equal) (chain successor (chain successor successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.19926909502828494,
            "num_unique_values": 56,
            "num_values_explored": 135,
            "solution": "(chain (transpose (disjunction zero (chain successor successor))) (disjunction successor equal))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False]])],\n    solution=(chain (transpose (disjunction zero (chain successor successor))) (disjunction successor equal))\n)",
            "task_solution": "(chain (transpose (disjunction zero (chain successor successor))) (disjunction successor equal))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.1941783030051738,
            "num_unique_values": 75,
            "num_values_explored": 151,
            "solution": "(disjunction equal (chain (recursive equal (transpose successor) (recursive successor successor equal)) zero))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [ True, False, False, False, False,  True, False, False, False,\n        False],\n       [ True, False, False, False, False, False,  True, False, False,\n        False],\n       [ True, False, False, False, False, False, False,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (transpose successor) (chain zero (recursive successor successor equal)))\n)",
            "task_solution": "(recursive equal (transpose successor) (chain zero (recursive successor successor equal)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.31451792700681835,
            "num_unique_values": 116,
            "num_values_explored": 229,
            "solution": "(recursive successor (transpose successor) (transpose (chain successor (chain successor successor))))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (transpose successor) (transpose (chain successor (chain successor successor))))\n)",
            "task_solution": "(recursive successor (transpose successor) (transpose (chain successor (chain successor successor))))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.23574131802888587,
            "num_unique_values": 77,
            "num_values_explored": 166,
            "solution": "(recursive (recursive (chain zero successor) (transpose successor) equal) successor successor)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (recursive (chain zero successor) (transpose successor) equal) successor successor)\n)",
            "task_solution": "(recursive (recursive (chain zero successor) (transpose successor) equal) successor successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.23210206301882863,
            "num_unique_values": 78,
            "num_values_explored": 173,
            "solution": "(recursive (transpose successor) (transpose (disjunction successor equal)) (chain zero successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (transpose (disjunction successor equal)) (chain zero successor))\n)",
            "task_solution": "(recursive (transpose successor) (transpose (disjunction successor equal)) (chain zero successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.19747098296647891,
            "num_unique_values": 67,
            "num_values_explored": 157,
            "solution": "(disjunction (transpose successor) (chain zero (recursive successor successor (transpose successor))))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(transpose (disjunction successor (chain (recursive successor (transpose successor) successor) zero)))\n)",
            "task_solution": "(transpose (disjunction successor (chain (recursive successor (transpose successor) successor) zero)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.22752954496536404,
            "num_unique_values": 78,
            "num_values_explored": 164,
            "solution": "(recursive (recursive successor (transpose successor) successor) (chain successor successor) successor)",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (recursive successor (transpose successor) successor) (chain successor successor) successor)\n)",
            "task_solution": "(recursive (recursive successor (transpose successor) successor) (chain successor successor) successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.22701230802340433,
            "num_unique_values": 78,
            "num_values_explored": 165,
            "solution": "(recursive (chain (disjunction zero (chain successor successor)) (chain successor successor)) zero successor)",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (chain successor (chain successor successor))) zero successor)\n)",
            "task_solution": "(recursive (chain successor (chain successor (chain successor successor))) zero successor)",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.20454358798451722,
            "num_unique_values": 69,
            "num_values_explored": 150,
            "solution": "(disjunction (chain successor successor) (transpose (chain (disjunction zero successor) successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n        False],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [False, False, False,  True, False, False, False,  True, False,\n        False],\n       [False, False, False, False,  True, False, False, False,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(disjunction (chain successor successor) (transpose (chain (disjunction zero successor) successor)))\n)",
            "task_solution": "(disjunction (chain successor successor) (transpose (chain (disjunction zero successor) successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.35292304400354624,
            "num_unique_values": 136,
            "num_values_explored": 250,
            "solution": "(chain successor (recursive (chain successor (chain successor (disjunction successor (transpose successor)))) (chain zero successor) (transpose successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (chain successor (disjunction successor (transpose successor)))))\n)",
            "task_solution": "(chain successor (chain successor (chain successor (disjunction successor (transpose successor)))))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.29139549197861925,
            "num_unique_values": 106,
            "num_values_explored": 223,
            "solution": "(disjunction equal (chain (disjunction successor (transpose (chain successor successor))) successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True, False,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True, False,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True, False,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(disjunction equal (chain (disjunction successor (transpose (chain successor successor))) successor))\n)",
            "task_solution": "(disjunction equal (chain (disjunction successor (transpose (chain successor successor))) successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.14368032099446282,
            "num_unique_values": 38,
            "num_values_explored": 109,
            "solution": "(recursive (disjunction successor (chain (transpose successor) zero)) zero (transpose successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (disjunction successor (transpose (chain zero successor))) zero (transpose successor))\n)",
            "task_solution": "(recursive (disjunction successor (transpose (chain zero successor))) zero (transpose successor))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.20871923095546663,
            "num_unique_values": 66,
            "num_values_explored": 146,
            "solution": "(disjunction successor (recursive (transpose successor) (transpose successor) (chain successor successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True, False, False,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False, False,  True, False,  True, False, False,\n        False],\n       [False, False,  True, False, False,  True, False,  True, False,\n        False],\n       [ True, False, False,  True, False, False,  True, False,  True,\n        False],\n       [False,  True, False, False,  True, False, False,  True, False,\n         True],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False]])],\n    solution=(disjunction successor (recursive (transpose successor) (transpose successor) (chain successor successor)))\n)",
            "task_solution": "(disjunction successor (recursive (transpose successor) (transpose successor) (chain successor successor)))",
            "task_solution_weight": 10
        },
        {
            "elapsed_time": 0.30538961896672845,
            "num_unique_values": 98,
            "num_values_explored": 211,
            "solution": "(chain (transpose successor) (recursive (chain zero (chain successor successor)) (transpose successor) equal))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive (transpose successor) equal successor) (chain zero (chain successor successor)))\n)",
            "task_solution": "(chain (recursive (transpose successor) equal successor) (chain zero (chain successor successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2980459809768945,
            "num_unique_values": 98,
            "num_values_explored": 217,
            "solution": "(chain (transpose successor) (chain (recursive (chain successor successor) zero successor) successor))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (transpose successor) (chain (recursive (chain successor successor) zero successor) successor))\n)",
            "task_solution": "(chain (transpose successor) (chain (recursive (chain successor successor) zero successor) successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.22707174898823723,
            "num_unique_values": 80,
            "num_values_explored": 166,
            "solution": "(recursive (transpose successor) (disjunction zero (chain successor (chain successor successor))) successor)",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (chain (disjunction zero successor) (chain successor successor)) successor)\n)",
            "task_solution": "(recursive (transpose successor) (chain (disjunction zero successor) (chain successor successor)) successor)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.17238477402133867,
            "num_unique_values": 62,
            "num_values_explored": 132,
            "solution": "(chain successor (recursive (disjunction successor equal) (transpose successor) (chain successor successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True,  True, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True,  True, False, False,\n        False],\n       [ True,  True, False,  True,  True, False,  True,  True, False,\n        False],\n       [False,  True,  True, False,  True,  True, False,  True,  True,\n        False],\n       [ True, False,  True,  True, False,  True,  True, False,  True,\n         True],\n       [ True,  True, False,  True,  True, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive (disjunction successor equal) (transpose successor) (chain successor successor)))\n)",
            "task_solution": "(chain successor (recursive (disjunction successor equal) (transpose successor) (chain successor successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.32843001699075103,
            "num_unique_values": 117,
            "num_values_explored": 224,
            "solution": "(recursive successor (chain (recursive (transpose successor) equal (chain zero successor)) (chain successor (chain successor successor))) successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (chain (transpose successor) (chain successor (chain successor successor))) successor)\n)",
            "task_solution": "(recursive successor (chain (transpose successor) (chain successor (chain successor successor))) successor)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.19456226500915363,
            "num_unique_values": 71,
            "num_values_explored": 150,
            "solution": "(disjunction successor (chain (recursive equal (transpose successor) zero) (chain successor successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True, False,  True,  True, False, False, False,\n        False],\n       [False, False,  True, False, False,  True,  True, False, False,\n        False],\n       [False, False,  True, False, False, False,  True,  True, False,\n        False],\n       [False, False,  True, False, False, False, False,  True,  True,\n        False],\n       [False, False,  True, False, False, False, False, False,  True,\n         True],\n       [False, False,  True, False, False, False, False, False, False,\n         True],\n       [False, False,  True, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction equal (chain (recursive equal (transpose successor) zero) successor)) successor)\n)",
            "task_solution": "(chain (disjunction equal (chain (recursive equal (transpose successor) zero) successor)) successor)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.3170282830251381,
            "num_unique_values": 118,
            "num_values_explored": 229,
            "solution": "(recursive (transpose zero) (transpose successor) (recursive equal successor (chain successor successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (transpose zero) (transpose successor) (recursive equal successor (chain successor successor)))\n)",
            "task_solution": "(recursive (transpose zero) (transpose successor) (recursive equal successor (chain successor successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2506878260173835,
            "num_unique_values": 79,
            "num_values_explored": 168,
            "solution": "(recursive (chain (disjunction successor (chain (transpose successor) (disjunction zero successor))) successor) zero successor)",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction successor equal) (disjunction successor (recursive zero zero (transpose successor))))\n)",
            "task_solution": "(chain (disjunction successor equal) (disjunction successor (recursive zero zero (transpose successor))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.34655230602947995,
            "num_unique_values": 120,
            "num_values_explored": 239,
            "solution": "(recursive equal (chain (recursive successor (chain successor successor) successor) (disjunction successor equal)) successor)",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (chain (recursive successor (chain successor successor) successor) successor) successor)\n)",
            "task_solution": "(recursive equal (chain (recursive successor (chain successor successor) successor) successor) successor)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.279618012951687,
            "num_unique_values": 96,
            "num_values_explored": 209,
            "solution": "(chain successor (chain successor (transpose (chain successor (disjunction (transpose successor) successor)))))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (transpose (chain successor (disjunction successor (transpose successor))))))\n)",
            "task_solution": "(chain successor (chain successor (transpose (chain successor (disjunction successor (transpose successor))))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.23396234097890556,
            "num_unique_values": 82,
            "num_values_explored": 167,
            "solution": "(recursive equal (recursive equal (transpose successor) zero) (transpose (chain successor successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n         True]])],\n    solution=(recursive equal (recursive equal (transpose successor) zero) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive equal (recursive equal (transpose successor) zero) (transpose (chain successor successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.21102689096005633,
            "num_unique_values": 69,
            "num_values_explored": 149,
            "solution": "(disjunction (recursive successor (transpose successor) equal) (recursive successor (transpose successor) successor))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(disjunction (recursive successor (transpose successor) successor) (recursive successor (transpose successor) equal))\n)",
            "task_solution": "(disjunction (recursive successor (transpose successor) successor) (recursive successor (transpose successor) equal))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.20218819100409746,
            "num_unique_values": 66,
            "num_values_explored": 150,
            "solution": "(disjunction (transpose successor) (recursive successor equal (chain (disjunction zero successor) successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (recursive successor equal (chain (disjunction zero successor) successor)))\n)",
            "task_solution": "(disjunction (transpose successor) (recursive successor equal (chain (disjunction zero successor) successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.24887491203844547,
            "num_unique_values": 86,
            "num_values_explored": 181,
            "solution": "(transpose (disjunction equal (chain successor (disjunction equal (recursive successor equal successor)))))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True]])],\n    solution=(transpose (disjunction successor (disjunction equal (recursive (chain successor successor) equal successor))))\n)",
            "task_solution": "(transpose (disjunction successor (disjunction equal (recursive (chain successor successor) equal successor))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.4251814529998228,
            "num_unique_values": 159,
            "num_values_explored": 312,
            "solution": "(recursive successor (chain successor (transpose (chain successor (chain successor successor)))) (transpose (recursive successor successor (recursive successor successor equal))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (chain (transpose (chain successor successor)) (chain successor successor)) successor)\n)",
            "task_solution": "(recursive successor (chain (transpose (chain successor successor)) (chain successor successor)) successor)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.4815143430023454,
            "num_unique_values": 176,
            "num_values_explored": 349,
            "solution": "(chain successor (chain successor (recursive (chain successor (chain successor (chain successor successor))) successor (transpose (chain successor (chain successor successor))))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (chain successor (chain successor (chain successor successor)))))\n)",
            "task_solution": "(chain successor (chain successor (chain successor (chain successor (chain successor successor)))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.34290646796580404,
            "num_unique_values": 116,
            "num_values_explored": 243,
            "solution": "(recursive equal (disjunction (transpose successor) successor) (chain successor (chain successor successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n         True]])],\n    solution=(recursive equal (disjunction successor (transpose successor)) (chain successor (chain successor successor)))\n)",
            "task_solution": "(recursive equal (disjunction successor (transpose successor)) (chain successor (chain successor successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.3188842530362308,
            "num_unique_values": 117,
            "num_values_explored": 230,
            "solution": "(recursive successor (chain zero successor) (transpose (chain successor (disjunction successor equal))))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (chain zero successor) (transpose (chain successor (disjunction successor equal))))\n)",
            "task_solution": "(recursive successor (chain zero successor) (transpose (chain successor (disjunction successor equal))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2300955830141902,
            "num_unique_values": 80,
            "num_values_explored": 161,
            "solution": "(recursive (chain successor successor) (disjunction zero successor) (transpose (chain successor successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False, False,  True, False, False,\n         True],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor successor) (disjunction zero successor) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (chain successor successor) (disjunction zero successor) (transpose (chain successor successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.3802250010194257,
            "num_unique_values": 136,
            "num_values_explored": 251,
            "solution": "(chain (disjunction successor (transpose (recursive successor equal (recursive (chain successor successor) successor (chain successor successor))))) (disjunction zero successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive (chain successor successor) successor (chain successor successor)) equal)\n)",
            "task_solution": "(recursive equal (recursive (chain successor successor) successor (chain successor successor)) equal)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2348630809574388,
            "num_unique_values": 81,
            "num_values_explored": 165,
            "solution": "(recursive (transpose zero) (recursive successor successor (chain successor successor)) (transpose successor))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (transpose zero) (recursive successor successor (chain successor successor)) (transpose successor))\n)",
            "task_solution": "(recursive (transpose zero) (recursive successor successor (chain successor successor)) (transpose successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.22695455799112096,
            "num_unique_values": 77,
            "num_values_explored": 167,
            "solution": "(recursive (disjunction equal (chain successor successor)) zero (transpose (chain successor successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (disjunction equal (chain successor successor)) zero (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (disjunction equal (chain successor successor)) zero (transpose (chain successor successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2962440599803813,
            "num_unique_values": 105,
            "num_values_explored": 217,
            "solution": "(chain (disjunction zero successor) (disjunction zero (chain (recursive equal (transpose successor) zero) successor)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n        False],\n       [False,  True, False, False, False, False,  True, False, False,\n        False],\n       [False,  True, False, False, False, False, False,  True, False,\n        False],\n       [False,  True, False, False, False, False, False, False,  True,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n         True],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction zero (chain successor (chain (recursive equal (transpose successor) zero) successor)))\n)",
            "task_solution": "(disjunction zero (chain successor (chain (recursive equal (transpose successor) zero) successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2677547140046954,
            "num_unique_values": 96,
            "num_values_explored": 191,
            "solution": "(chain (recursive equal equal (disjunction (transpose successor) (chain zero (chain successor successor)))) (recursive successor (chain zero successor) equal))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (disjunction successor (transpose (chain zero (chain successor successor)))) equal)\n)",
            "task_solution": "(recursive successor (disjunction successor (transpose (chain zero (chain successor successor)))) equal)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2553578849765472,
            "num_unique_values": 78,
            "num_values_explored": 171,
            "solution": "(recursive successor (disjunction zero (transpose (chain (recursive successor successor equal) successor))) successor)",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False]])],\n    solution=(disjunction zero (disjunction successor (recursive (transpose (chain successor successor)) equal successor)))\n)",
            "task_solution": "(disjunction zero (disjunction successor (recursive (transpose (chain successor successor)) equal successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.3042535279528238,
            "num_unique_values": 109,
            "num_values_explored": 216,
            "solution": "(disjunction equal (chain zero (transpose (recursive equal (chain (transpose (chain successor successor)) successor) (chain successor (chain successor successor))))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False,  True, False, False, False,  True,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal zero (transpose (chain successor (chain successor (chain successor successor)))))\n)",
            "task_solution": "(recursive equal zero (transpose (chain successor (chain successor (chain successor successor)))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2575765160145238,
            "num_unique_values": 82,
            "num_values_explored": 186,
            "solution": "(recursive (chain successor successor) (disjunction zero successor) (disjunction successor (transpose successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor successor) (disjunction zero successor) (disjunction successor (transpose successor)))\n)",
            "task_solution": "(recursive (chain successor successor) (disjunction zero successor) (disjunction successor (transpose successor)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.29360132897272706,
            "num_unique_values": 86,
            "num_values_explored": 209,
            "solution": "(transpose (recursive (chain (recursive successor equal successor) successor) (transpose (chain successor successor)) (transpose successor)))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True]])],\n    solution=(transpose (chain (recursive (recursive successor (transpose successor) equal) successor successor) successor))\n)",
            "task_solution": "(transpose (chain (recursive (recursive successor (transpose successor) equal) successor successor) successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.23493011901155114,
            "num_unique_values": 80,
            "num_values_explored": 164,
            "solution": "(recursive (chain successor (transpose successor)) successor (transpose (recursive successor (disjunction successor equal) (recursive successor equal successor))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (transpose successor)) successor (recursive (transpose successor) successor equal))\n)",
            "task_solution": "(recursive (chain successor (transpose successor)) successor (recursive (transpose successor) successor equal))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2342693450045772,
            "num_unique_values": 76,
            "num_values_explored": 168,
            "solution": "(recursive successor (chain (recursive successor equal (chain successor successor)) zero) equal)",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False,  True, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False,  True, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (chain (recursive successor equal (chain successor successor)) zero) equal)\n)",
            "task_solution": "(recursive successor (chain (recursive successor equal (chain successor successor)) zero) equal)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.23429026803933084,
            "num_unique_values": 78,
            "num_values_explored": 169,
            "solution": "(recursive (recursive (recursive equal equal successor) zero (transpose successor)) successor (recursive successor equal successor))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (recursive equal zero (transpose successor)) equal (recursive successor equal successor))\n)",
            "task_solution": "(recursive (recursive equal zero (transpose successor)) equal (recursive successor equal successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.1424253199947998,
            "num_unique_values": 38,
            "num_values_explored": 108,
            "solution": "(recursive (disjunction (transpose successor) (chain successor successor)) (chain successor successor) equal)",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (disjunction (transpose successor) (chain successor successor)) (chain successor successor) equal)\n)",
            "task_solution": "(recursive (disjunction (transpose successor) (chain successor successor)) (chain successor successor) equal)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2102056440198794,
            "num_unique_values": 67,
            "num_values_explored": 153,
            "solution": "(disjunction successor (chain (transpose (chain successor successor)) (recursive successor successor equal)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(disjunction successor (chain (transpose (chain successor successor)) (recursive successor successor equal)))\n)",
            "task_solution": "(disjunction successor (chain (transpose (chain successor successor)) (recursive successor successor equal)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.3401932519627735,
            "num_unique_values": 126,
            "num_values_explored": 255,
            "solution": "(transpose (disjunction successor (chain (disjunction successor equal) (recursive zero (transpose successor) (transpose (chain successor successor))))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction successor (recursive zero (transpose successor) (transpose (chain successor successor)))))\n)",
            "task_solution": "(transpose (disjunction successor (recursive zero (transpose successor) (transpose (chain successor successor)))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.18057460099225864,
            "num_unique_values": 57,
            "num_values_explored": 137,
            "solution": "(chain (recursive successor (transpose successor) (disjunction zero successor)) (disjunction zero successor))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(chain (recursive successor (transpose successor) (disjunction zero successor)) (disjunction zero successor))\n)",
            "task_solution": "(chain (recursive successor (transpose successor) (disjunction zero successor)) (disjunction zero successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.18255796196172014,
            "num_unique_values": 58,
            "num_values_explored": 137,
            "solution": "(chain successor (recursive (transpose successor) (transpose successor) (recursive successor successor equal)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive (transpose successor) (transpose successor) (recursive successor successor equal)))\n)",
            "task_solution": "(chain successor (recursive (transpose successor) (transpose successor) (recursive successor successor equal)))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.23594038898590952,
            "num_unique_values": 80,
            "num_values_explored": 164,
            "solution": "(recursive (recursive (transpose successor) (transpose successor) successor) successor (chain (transpose successor) (recursive successor equal successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (recursive successor (transpose successor) successor) successor (chain (transpose successor) successor))\n)",
            "task_solution": "(recursive (recursive successor (transpose successor) successor) successor (chain (transpose successor) successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.29700192500604317,
            "num_unique_values": 114,
            "num_values_explored": 213,
            "solution": "(disjunction equal (chain (disjunction successor (recursive equal (transpose successor) successor)) successor))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True, False,\n        False],\n       [False,  True, False,  True, False,  True,  True,  True,  True,\n        False],\n       [False, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n         True]])],\n    solution=(disjunction equal (chain (disjunction successor (recursive equal (transpose successor) successor)) successor))\n)",
            "task_solution": "(disjunction equal (chain (disjunction successor (recursive equal (transpose successor) successor)) successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.24656665499787778,
            "num_unique_values": 94,
            "num_values_explored": 174,
            "solution": "(transpose (recursive successor (disjunction successor (transpose (chain successor successor))) (transpose successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (transpose successor) (transpose successor) (disjunction successor (transpose (chain successor successor))))\n)",
            "task_solution": "(recursive (transpose successor) (transpose successor) (disjunction successor (transpose (chain successor successor))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.24040539603447542,
            "num_unique_values": 87,
            "num_values_explored": 175,
            "solution": "(transpose (recursive equal (recursive successor (disjunction equal (chain successor successor)) successor) successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (recursive successor (disjunction equal (chain successor successor)) successor))\n)",
            "task_solution": "(recursive equal successor (recursive successor (disjunction equal (chain successor successor)) successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.23875313601456583,
            "num_unique_values": 82,
            "num_values_explored": 168,
            "solution": "(recursive (chain successor (chain successor successor)) (transpose (disjunction successor equal)) successor)",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False]])],\n    solution=(recursive (chain successor (chain successor successor)) (transpose (disjunction successor equal)) successor)\n)",
            "task_solution": "(recursive (chain successor (chain successor successor)) (transpose (disjunction successor equal)) successor)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.3100249750423245,
            "num_unique_values": 106,
            "num_values_explored": 223,
            "solution": "(disjunction zero (chain (recursive equal (transpose successor) (chain zero successor)) (chain successor successor)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction (chain successor successor) (recursive zero zero (transpose (chain successor successor))))\n)",
            "task_solution": "(disjunction (chain successor successor) (recursive zero zero (transpose (chain successor successor))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2299921420053579,
            "num_unique_values": 81,
            "num_values_explored": 165,
            "solution": "(recursive successor (transpose (chain successor successor)) (chain successor (chain successor successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [ True, False, False, False, False,  True, False, False, False,\n        False],\n       [False,  True, False, False, False, False,  True, False, False,\n        False],\n       [False, False,  True, False, False, False, False,  True, False,\n        False],\n       [False, False, False,  True, False, False, False, False,  True,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n         True],\n       [ True, False, False, False, False,  True, False, False, False,\n        False]])],\n    solution=(recursive successor (transpose successor) (chain successor (chain successor (chain successor successor))))\n)",
            "task_solution": "(recursive successor (transpose successor) (chain successor (chain successor (chain successor successor))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.3681798739708029,
            "num_unique_values": 151,
            "num_values_explored": 264,
            "solution": "(disjunction successor (recursive equal successor (disjunction (recursive successor (transpose successor) successor) (recursive successor (recursive equal successor (transpose successor)) successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (recursive equal (recursive successor successor (transpose successor)) successor))\n)",
            "task_solution": "(recursive equal successor (recursive equal (recursive successor successor (transpose successor)) successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2361042610136792,
            "num_unique_values": 78,
            "num_values_explored": 167,
            "solution": "(recursive (transpose (chain (disjunction zero successor) successor)) (chain successor successor) equal)",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain (disjunction zero successor) successor)) (chain successor successor) equal)\n)",
            "task_solution": "(recursive (transpose (chain (disjunction zero successor) successor)) (chain successor successor) equal)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.27932516898727044,
            "num_unique_values": 96,
            "num_values_explored": 203,
            "solution": "(chain (disjunction equal (recursive successor (transpose successor) (disjunction zero successor))) successor)",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True, False,  True,  True,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True,  True,  True, False,\n        False],\n       [False,  True,  True, False,  True, False,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(chain (disjunction equal (recursive successor (transpose successor) (disjunction zero successor))) successor)\n)",
            "task_solution": "(chain (disjunction equal (recursive successor (transpose successor) (disjunction zero successor))) successor)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.3685133109684102,
            "num_unique_values": 137,
            "num_values_explored": 280,
            "solution": "(chain successor (chain successor (chain (disjunction successor equal) (disjunction successor equal))))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (chain (disjunction successor equal) (disjunction successor equal))))\n)",
            "task_solution": "(chain successor (chain successor (chain (disjunction successor equal) (disjunction successor equal))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.2718404110055417,
            "num_unique_values": 96,
            "num_values_explored": 196,
            "solution": "(chain (disjunction equal (chain (recursive zero zero (transpose successor)) successor)) successor)",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction equal (chain (recursive zero zero (transpose successor)) successor)) successor)\n)",
            "task_solution": "(chain (disjunction equal (chain (recursive zero zero (transpose successor)) successor)) successor)",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.19789484498323873,
            "num_unique_values": 70,
            "num_values_explored": 156,
            "solution": "(disjunction successor (chain successor (disjunction (transpose successor) (recursive successor equal successor))))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (disjunction equal (disjunction (transpose successor) (recursive successor equal successor))))\n)",
            "task_solution": "(chain successor (disjunction equal (disjunction (transpose successor) (recursive successor equal successor))))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.23690749501110986,
            "num_unique_values": 77,
            "num_values_explored": 168,
            "solution": "(recursive (chain successor successor) (transpose (disjunction zero successor)) (disjunction zero successor))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False]])],\n    solution=(recursive (chain successor successor) (transpose (disjunction zero successor)) (disjunction zero successor))\n)",
            "task_solution": "(recursive (chain successor successor) (transpose (disjunction zero successor)) (disjunction zero successor))",
            "task_solution_weight": 11
        },
        {
            "elapsed_time": 0.28244339500088245,
            "num_unique_values": 97,
            "num_values_explored": 212,
            "solution": "(chain (transpose (chain successor successor)) (chain (disjunction successor equal) (disjunction successor equal)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True]])],\n    solution=(chain (transpose (chain successor successor)) (chain (disjunction successor equal) (disjunction successor equal)))\n)",
            "task_solution": "(chain (transpose (chain successor successor)) (chain (disjunction successor equal) (disjunction successor equal)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.19970450398977846,
            "num_unique_values": 66,
            "num_values_explored": 146,
            "solution": "(disjunction (chain successor successor) (recursive equal (disjunction successor equal) (chain successor successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(disjunction (chain successor successor) (recursive equal (disjunction successor equal) (chain successor successor)))\n)",
            "task_solution": "(disjunction (chain successor successor) (recursive equal (disjunction successor equal) (chain successor successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.2519995520124212,
            "num_unique_values": 76,
            "num_values_explored": 173,
            "solution": "(recursive (chain (transpose (chain successor successor)) (disjunction zero successor)) successor (transpose successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (chain (transpose (chain successor successor)) (disjunction zero successor)) successor (transpose successor))\n)",
            "task_solution": "(recursive (chain (transpose (chain successor successor)) (disjunction zero successor)) successor (transpose successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.17670244997134432,
            "num_unique_values": 56,
            "num_values_explored": 135,
            "solution": "(chain (recursive equal (disjunction successor equal) (chain (disjunction zero successor) successor)) successor)",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(chain (recursive equal (disjunction successor equal) (chain (disjunction zero successor) successor)) successor)\n)",
            "task_solution": "(chain (recursive equal (disjunction successor equal) (chain (disjunction zero successor) successor)) successor)",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.3048394719953649,
            "num_unique_values": 116,
            "num_values_explored": 216,
            "solution": "(recursive (transpose (disjunction equal (chain successor (recursive zero (transpose successor) (transpose successor))))) equal (chain (recursive successor successor equal) successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True]])],\n    solution=(recursive equal (transpose (disjunction successor (recursive zero (transpose successor) (transpose successor)))) successor)\n)",
            "task_solution": "(recursive equal (transpose (disjunction successor (recursive zero (transpose successor) (transpose successor)))) successor)",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.24833127099554986,
            "num_unique_values": 77,
            "num_values_explored": 172,
            "solution": "(recursive (chain (transpose successor) successor) equal (recursive (chain (disjunction zero successor) successor) successor equal))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True]])],\n    solution=(transpose (chain (disjunction zero (disjunction (transpose successor) (recursive successor successor equal))) successor))\n)",
            "task_solution": "(transpose (chain (disjunction zero (disjunction (transpose successor) (recursive successor successor equal))) successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.22463708004215732,
            "num_unique_values": 77,
            "num_values_explored": 159,
            "solution": "(recursive (transpose successor) (transpose (disjunction equal (chain successor (recursive successor equal successor)))) (transpose successor))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (transpose successor) (recursive (transpose (chain successor successor)) successor equal) (transpose successor))\n)",
            "task_solution": "(recursive (transpose successor) (recursive (transpose (chain successor successor)) successor equal) (transpose successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.2477057590149343,
            "num_unique_values": 81,
            "num_values_explored": 170,
            "solution": "(recursive (disjunction equal (recursive (transpose successor) (chain successor successor) equal)) zero successor)",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True,  True,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True,  True,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(recursive (transpose (disjunction equal (recursive successor equal (chain successor successor)))) zero successor)\n)",
            "task_solution": "(recursive (transpose (disjunction equal (recursive successor equal (chain successor successor)))) zero successor)",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.5337841959553771,
            "num_unique_values": 201,
            "num_values_explored": 390,
            "solution": "(recursive equal (recursive successor (recursive equal (chain successor successor) successor) successor) successor)",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive successor (recursive equal (chain successor successor) successor) successor) successor)\n)",
            "task_solution": "(recursive equal (recursive successor (recursive equal (chain successor successor) successor) successor) successor)",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.19492391595849767,
            "num_unique_values": 74,
            "num_values_explored": 150,
            "solution": "(disjunction zero (chain (disjunction (transpose successor) successor) (recursive zero zero (transpose successor))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction zero (disjunction successor (transpose successor))) (recursive zero zero (transpose successor)))\n)",
            "task_solution": "(chain (disjunction zero (disjunction successor (transpose successor))) (recursive zero zero (transpose successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.25203828600933775,
            "num_unique_values": 96,
            "num_values_explored": 198,
            "solution": "(chain successor (recursive (chain successor successor) (transpose (chain successor successor)) (transpose successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive (chain successor successor) (transpose (chain successor successor)) (transpose successor)))\n)",
            "task_solution": "(chain successor (recursive (chain successor successor) (transpose (chain successor successor)) (transpose successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.2220638429862447,
            "num_unique_values": 77,
            "num_values_explored": 161,
            "solution": "(recursive equal (disjunction equal (chain successor successor)) (chain successor (chain successor successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True,  True, False, False,\n        False],\n       [ True,  True, False,  True,  True, False,  True,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n         True]])],\n    solution=(recursive equal (disjunction equal (chain successor successor)) (chain successor (chain successor successor)))\n)",
            "task_solution": "(recursive equal (disjunction equal (chain successor successor)) (chain successor (chain successor successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.3529497039853595,
            "num_unique_values": 125,
            "num_values_explored": 234,
            "solution": "(recursive (transpose (chain zero (chain successor successor))) equal (transpose (chain zero (chain successor successor))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (transpose (chain successor successor)) (chain zero (disjunction zero (chain successor successor))))\n)",
            "task_solution": "(chain (transpose (chain successor successor)) (chain zero (disjunction zero (chain successor successor))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.2029089389834553,
            "num_unique_values": 66,
            "num_values_explored": 152,
            "solution": "(disjunction zero (chain (transpose (disjunction equal (chain successor successor))) (chain successor successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction zero (chain (transpose (disjunction equal (chain successor successor))) (chain successor successor)))\n)",
            "task_solution": "(disjunction zero (chain (transpose (disjunction equal (chain successor successor))) (chain successor successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.20508068503113464,
            "num_unique_values": 66,
            "num_values_explored": 148,
            "solution": "(disjunction (transpose (chain successor successor)) (chain successor (recursive successor (transpose successor) successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(disjunction (transpose (chain successor successor)) (chain successor (recursive successor (transpose successor) successor)))\n)",
            "task_solution": "(disjunction (transpose (chain successor successor)) (chain successor (recursive successor (transpose successor) successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.18194336496526375,
            "num_unique_values": 62,
            "num_values_explored": 135,
            "solution": "(chain (transpose (recursive (chain successor successor) zero (transpose successor))) (disjunction successor equal))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True,  True, False, False, False,\n        False],\n       [ True,  True, False, False, False,  True,  True, False, False,\n        False],\n       [ True,  True, False, False, False, False,  True,  True, False,\n        False],\n       [ True,  True, False, False, False, False, False,  True,  True,\n        False]])],\n    solution=(chain (recursive (transpose (chain successor successor)) (transpose successor) zero) (disjunction successor equal))\n)",
            "task_solution": "(chain (recursive (transpose (chain successor successor)) (transpose successor) zero) (disjunction successor equal))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.22637521696742624,
            "num_unique_values": 83,
            "num_values_explored": 166,
            "solution": "(recursive (transpose (chain (disjunction zero successor) successor)) (disjunction zero successor) (transpose successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain (disjunction zero successor) successor)) (disjunction zero successor) (transpose successor))\n)",
            "task_solution": "(recursive (transpose (chain (disjunction zero successor) successor)) (disjunction zero successor) (transpose successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.2527981199673377,
            "num_unique_values": 76,
            "num_values_explored": 176,
            "solution": "(recursive equal (recursive equal zero (transpose successor)) (chain (disjunction zero successor) successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(recursive equal (recursive equal zero (transpose successor)) (chain (disjunction zero successor) successor))\n)",
            "task_solution": "(recursive equal (recursive equal zero (transpose successor)) (chain (disjunction zero successor) successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.23671244498109445,
            "num_unique_values": 79,
            "num_values_explored": 163,
            "solution": "(recursive equal (recursive equal equal successor) (transpose (disjunction zero (chain successor successor))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive equal (recursive equal equal successor) (transpose (disjunction zero (chain successor successor))))\n)",
            "task_solution": "(recursive equal (recursive equal equal successor) (transpose (disjunction zero (chain successor successor))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.24407303205225617,
            "num_unique_values": 76,
            "num_values_explored": 168,
            "solution": "(recursive (chain successor (disjunction successor (transpose (chain successor successor)))) (transpose successor) zero)",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False, False,  True, False, False, False,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n        False],\n       [ True, False, False, False,  True, False, False,  True, False,\n        False],\n       [ True, False, False, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False, False, False, False,  True, False, False,\n         True],\n       [ True, False, False, False, False, False, False,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (disjunction successor (transpose (chain successor successor)))) (transpose successor) zero)\n)",
            "task_solution": "(recursive (chain successor (disjunction successor (transpose (chain successor successor)))) (transpose successor) zero)",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.22841477097244933,
            "num_unique_values": 76,
            "num_values_explored": 164,
            "solution": "(recursive (disjunction successor (recursive (transpose successor) (chain successor successor) successor)) (chain successor successor) (transpose successor))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (disjunction successor (transpose successor)) (chain successor successor) (disjunction successor (transpose successor)))\n)",
            "task_solution": "(recursive (disjunction successor (transpose successor)) (chain successor successor) (disjunction successor (transpose successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.32776301499689,
            "num_unique_values": 116,
            "num_values_explored": 246,
            "solution": "(recursive (chain (transpose successor) (chain successor successor)) (transpose (chain successor successor)) successor)",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n        False],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False]])],\n    solution=(recursive (chain (transpose successor) (chain successor successor)) (transpose (chain successor successor)) successor)\n)",
            "task_solution": "(recursive (chain (transpose successor) (chain successor successor)) (transpose (chain successor successor)) successor)",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.23239873099373654,
            "num_unique_values": 76,
            "num_values_explored": 166,
            "solution": "(recursive (disjunction successor equal) (disjunction (chain successor successor) equal) (chain (transpose successor) (chain successor successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(disjunction zero (recursive (recursive successor (chain successor successor) successor) (transpose successor) equal))\n)",
            "task_solution": "(disjunction zero (recursive (recursive successor (chain successor successor) successor) (transpose successor) equal))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.26871746696997434,
            "num_unique_values": 96,
            "num_values_explored": 201,
            "solution": "(chain (disjunction (chain successor successor) equal) (disjunction successor (transpose (chain successor successor))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False,  True, False, False,\n        False],\n       [False, False,  True, False,  True,  True, False,  True, False,\n        False],\n       [False, False, False,  True, False,  True,  True, False,  True,\n        False],\n       [False, False, False, False,  True, False,  True,  True, False,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(chain (disjunction equal (chain successor successor)) (disjunction successor (transpose (chain successor successor))))\n)",
            "task_solution": "(chain (disjunction equal (chain successor successor)) (disjunction successor (transpose (chain successor successor))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.2002943480038084,
            "num_unique_values": 66,
            "num_values_explored": 151,
            "solution": "(disjunction zero (chain (transpose (chain successor successor)) (disjunction zero (chain successor successor))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction zero (chain (transpose (chain successor successor)) (disjunction zero (chain successor successor))))\n)",
            "task_solution": "(disjunction zero (chain (transpose (chain successor successor)) (disjunction zero (chain successor successor))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.23680389299988747,
            "num_unique_values": 85,
            "num_values_explored": 169,
            "solution": "(recursive (chain (transpose (chain successor successor)) (chain successor successor)) equal (chain successor successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(chain (transpose (chain successor successor)) (chain successor (recursive successor (transpose successor) successor)))\n)",
            "task_solution": "(chain (transpose (chain successor successor)) (chain successor (recursive successor (transpose successor) successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.22830234601860866,
            "num_unique_values": 84,
            "num_values_explored": 162,
            "solution": "(recursive (transpose successor) (disjunction zero successor) (chain (transpose (chain successor successor)) successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (disjunction zero successor) (chain (transpose (chain successor successor)) successor))\n)",
            "task_solution": "(recursive (transpose successor) (disjunction zero successor) (chain (transpose (chain successor successor)) successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.2898196360329166,
            "num_unique_values": 108,
            "num_values_explored": 217,
            "solution": "(disjunction zero (recursive successor (transpose successor) (recursive equal successor (chain successor successor))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(disjunction zero (recursive successor (transpose successor) (recursive equal successor (chain successor successor))))\n)",
            "task_solution": "(disjunction zero (recursive successor (transpose successor) (recursive equal successor (chain successor successor))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.23389586701523513,
            "num_unique_values": 76,
            "num_values_explored": 168,
            "solution": "(recursive (recursive (transpose successor) (transpose successor) zero) successor (transpose (chain successor successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True,  True,  True, False,  True,\n        False],\n       [ True, False,  True,  True,  True, False,  True, False,  True,\n         True],\n       [ True,  True,  True, False,  True, False,  True,  True,  True,\n        False],\n       [ True, False,  True, False,  True,  True,  True, False,  True,\n        False],\n       [ True, False,  True,  True,  True, False,  True, False,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n        False],\n       [ True, False,  True, False,  True,  True,  True, False,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n         True],\n       [ True, False,  True, False, False, False, False,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (recursive (transpose successor) (transpose successor) zero) successor (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (recursive (transpose successor) (transpose successor) zero) successor (transpose (chain successor successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.22983556002145633,
            "num_unique_values": 81,
            "num_values_explored": 163,
            "solution": "(recursive successor successor (recursive (transpose successor) (chain successor successor) (disjunction successor equal)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (recursive (transpose successor) (chain successor successor) (disjunction successor equal)))\n)",
            "task_solution": "(recursive successor successor (recursive (transpose successor) (chain successor successor) (disjunction successor equal)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.29224017000524327,
            "num_unique_values": 110,
            "num_values_explored": 209,
            "solution": "(disjunction equal (chain successor (transpose (recursive equal (disjunction equal (recursive successor (chain successor successor) successor)) successor))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (recursive equal (recursive successor (chain successor successor) successor) successor))\n)",
            "task_solution": "(recursive equal successor (recursive equal (recursive successor (chain successor successor) successor) successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.22561952495016158,
            "num_unique_values": 78,
            "num_values_explored": 169,
            "solution": "(recursive (recursive successor (transpose successor) successor) (chain successor successor) (chain zero successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (recursive successor (transpose successor) successor) (chain successor successor) (chain zero successor))\n)",
            "task_solution": "(recursive (recursive successor (transpose successor) successor) (chain successor successor) (chain zero successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.23197405197424814,
            "num_unique_values": 84,
            "num_values_explored": 171,
            "solution": "(recursive equal (transpose successor) (recursive (chain successor successor) successor (recursive successor successor equal)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n         True]])],\n    solution=(recursive equal (transpose successor) (recursive (chain successor (chain successor successor)) equal successor))\n)",
            "task_solution": "(recursive equal (transpose successor) (recursive (chain successor (chain successor successor)) equal successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.33475234400248155,
            "num_unique_values": 119,
            "num_values_explored": 226,
            "solution": "(recursive (transpose successor) (recursive successor (transpose successor) (transpose (chain successor successor))) successor)",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (recursive successor (transpose successor) (transpose (chain successor successor))) successor)\n)",
            "task_solution": "(recursive (transpose successor) (recursive successor (transpose successor) (transpose (chain successor successor))) successor)",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.22823775402503088,
            "num_unique_values": 77,
            "num_values_explored": 161,
            "solution": "(recursive equal (chain successor successor) (recursive successor (disjunction zero successor) (transpose successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True, False,  True, False,  True,  True,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (chain successor successor) (recursive successor (disjunction zero successor) (transpose successor)))\n)",
            "task_solution": "(recursive equal (chain successor successor) (recursive successor (disjunction zero successor) (transpose successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.37367928196908906,
            "num_unique_values": 126,
            "num_values_explored": 274,
            "solution": "(transpose (chain successor (disjunction zero (chain (transpose (chain (recursive successor successor equal) successor)) successor))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (chain successor (chain (recursive (transpose (chain successor successor)) equal successor) successor)))\n)",
            "task_solution": "(transpose (chain successor (chain (recursive (transpose (chain successor successor)) equal successor) successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.29456829704577103,
            "num_unique_values": 96,
            "num_values_explored": 208,
            "solution": "(chain successor (recursive (transpose successor) (recursive zero (transpose successor) (transpose successor)) (chain successor (chain successor (transpose successor)))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive (transpose successor) (recursive zero (transpose successor) (transpose successor)) successor))\n)",
            "task_solution": "(chain successor (recursive (transpose successor) (recursive zero (transpose successor) (transpose successor)) successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.27089704596437514,
            "num_unique_values": 99,
            "num_values_explored": 198,
            "solution": "(chain (recursive zero zero (recursive successor (transpose successor) successor)) (recursive (disjunction equal successor) (transpose (chain successor successor)) zero))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (recursive zero zero (recursive successor (transpose successor) successor)) (disjunction successor equal))\n)",
            "task_solution": "(chain (recursive zero zero (recursive successor (transpose successor) successor)) (disjunction successor equal))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.3505378320114687,
            "num_unique_values": 119,
            "num_values_explored": 231,
            "solution": "(recursive (transpose (disjunction successor equal)) (disjunction zero (chain successor successor)) (transpose successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True, False,  True,  True, False,  True,  True, False,\n         True],\n       [False,  True,  True, False,  True,  True, False,  True,  True,\n        False],\n       [False, False,  True,  True, False,  True,  True, False,  True,\n         True],\n       [False, False, False,  True,  True, False,  True,  True, False,\n         True],\n       [False, False, False, False,  True,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True, False,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(recursive (transpose (disjunction successor equal)) (chain (disjunction zero successor) successor) (transpose successor))\n)",
            "task_solution": "(recursive (transpose (disjunction successor equal)) (chain (disjunction zero successor) successor) (transpose successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.37632584996754304,
            "num_unique_values": 154,
            "num_values_explored": 288,
            "solution": "(disjunction (transpose successor) (recursive zero zero (transpose (chain successor (chain successor successor)))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(transpose (disjunction successor (recursive zero zero (transpose (chain successor (chain successor successor))))))\n)",
            "task_solution": "(transpose (disjunction successor (recursive zero zero (transpose (chain successor (chain successor successor))))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.3184236590168439,
            "num_unique_values": 118,
            "num_values_explored": 232,
            "solution": "(recursive equal (recursive (chain successor successor) zero (transpose (chain successor successor))) (recursive equal zero (transpose (chain successor successor))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [ True, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (chain successor successor) (recursive equal zero (transpose (chain successor successor))))\n)",
            "task_solution": "(recursive equal (chain successor successor) (recursive equal zero (transpose (chain successor successor))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.3260388599592261,
            "num_unique_values": 117,
            "num_values_explored": 234,
            "solution": "(recursive (transpose (disjunction zero (chain successor successor))) (transpose (chain successor successor)) (transpose (chain zero (chain successor successor))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(transpose (disjunction (chain successor successor) (recursive zero zero (transpose (chain successor successor)))))\n)",
            "task_solution": "(transpose (disjunction (chain successor successor) (recursive zero zero (transpose (chain successor successor)))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.33439342700876296,
            "num_unique_values": 123,
            "num_values_explored": 232,
            "solution": "(recursive (recursive equal (chain successor (chain successor successor)) successor) (transpose successor) (disjunction successor equal))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (recursive equal (chain successor (chain successor successor)) successor) (transpose successor) equal)\n)",
            "task_solution": "(recursive (recursive equal (chain successor (chain successor successor)) successor) (transpose successor) equal)",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.17630698799621314,
            "num_unique_values": 59,
            "num_values_explored": 136,
            "solution": "(chain (recursive (chain successor successor) (transpose successor) successor) (transpose (disjunction zero successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False]])],\n    solution=(recursive (chain successor (chain successor (transpose successor))) (transpose successor) (disjunction zero successor))\n)",
            "task_solution": "(recursive (chain successor (chain successor (transpose successor))) (transpose successor) (disjunction zero successor))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.38010600197594613,
            "num_unique_values": 139,
            "num_values_explored": 289,
            "solution": "(chain successor (chain successor (chain (chain successor successor) (disjunction successor (transpose successor)))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (chain successor (chain successor (disjunction successor (transpose successor))))))\n)",
            "task_solution": "(chain successor (chain successor (chain successor (chain successor (disjunction successor (transpose successor))))))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.1782508660107851,
            "num_unique_values": 57,
            "num_values_explored": 134,
            "solution": "(chain (disjunction (transpose successor) (chain successor successor)) (disjunction equal (chain successor successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False,  True, False, False,\n        False],\n       [False, False,  True, False,  True,  True, False,  True, False,\n        False],\n       [False, False, False,  True, False,  True,  True, False,  True,\n        False],\n       [False, False, False, False,  True, False,  True,  True, False,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (disjunction (transpose successor) (chain successor successor)) (disjunction equal (chain successor successor)))\n)",
            "task_solution": "(chain (disjunction (transpose successor) (chain successor successor)) (disjunction equal (chain successor successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.22433201898820698,
            "num_unique_values": 76,
            "num_values_explored": 159,
            "solution": "(recursive successor (transpose (chain successor successor)) (disjunction (transpose successor) (chain successor successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False, False,  True,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True, False,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive successor (transpose (chain successor successor)) (disjunction (transpose successor) (chain successor successor)))\n)",
            "task_solution": "(recursive successor (transpose (chain successor successor)) (disjunction (transpose successor) (chain successor successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.3315747770247981,
            "num_unique_values": 125,
            "num_values_explored": 230,
            "solution": "(recursive (transpose successor) equal (chain (transpose (chain successor successor)) (disjunction zero successor)))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(recursive (transpose successor) equal (chain (transpose (chain successor successor)) (disjunction zero successor)))\n)",
            "task_solution": "(recursive (transpose successor) equal (chain (transpose (chain successor successor)) (disjunction zero successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.30148965801345184,
            "num_unique_values": 120,
            "num_values_explored": 221,
            "solution": "(recursive successor (transpose successor) (chain successor (chain (transpose (recursive (chain successor successor) successor (transpose successor))) successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive successor (transpose successor) (chain successor (recursive (transpose successor) (transpose successor) successor)))\n)",
            "task_solution": "(recursive successor (transpose successor) (chain successor (recursive (transpose successor) (transpose successor) successor)))",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.29300431901356205,
            "num_unique_values": 118,
            "num_values_explored": 215,
            "solution": "(recursive equal (recursive (chain successor successor) successor (transpose (chain successor successor))) successor)",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive (chain successor successor) successor (transpose (chain successor successor))) successor)\n)",
            "task_solution": "(recursive equal (recursive (chain successor successor) successor (transpose (chain successor successor))) successor)",
            "task_solution_weight": 12
        },
        {
            "elapsed_time": 0.35484845703467727,
            "num_unique_values": 126,
            "num_values_explored": 254,
            "solution": "(transpose (disjunction equal (recursive successor (transpose (recursive successor (chain zero successor) (transpose successor))) (disjunction successor (transpose (chain successor successor))))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(transpose (disjunction equal (recursive successor (transpose successor) (disjunction successor (transpose (chain successor successor))))))\n)",
            "task_solution": "(transpose (disjunction equal (recursive successor (transpose successor) (disjunction successor (transpose (chain successor successor))))))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.33021053799893707,
            "num_unique_values": 116,
            "num_values_explored": 228,
            "solution": "(recursive equal (transpose (chain successor successor)) (recursive (recursive (disjunction zero successor) successor equal) (transpose successor) zero))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive equal (transpose (chain successor successor)) (recursive (disjunction zero successor) (transpose successor) zero))\n)",
            "task_solution": "(recursive equal (transpose (chain successor successor)) (recursive (disjunction zero successor) (transpose successor) zero))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.333314543007873,
            "num_unique_values": 116,
            "num_values_explored": 234,
            "solution": "(recursive (chain successor (recursive (chain successor (chain successor successor)) (transpose successor) equal)) zero successor)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (recursive successor equal successor) (chain successor (chain successor successor))) zero successor)\n)",
            "task_solution": "(recursive (chain (recursive successor equal successor) (chain successor (chain successor successor))) zero successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2543877210118808,
            "num_unique_values": 77,
            "num_values_explored": 161,
            "solution": "(recursive (chain (disjunction zero (chain successor successor)) successor) (transpose (chain successor successor)) successor)",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n        False]])],\n    solution=(recursive (chain (disjunction zero (chain successor successor)) successor) (transpose (chain successor successor)) successor)\n)",
            "task_solution": "(recursive (chain (disjunction zero (chain successor successor)) successor) (transpose (chain successor successor)) successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.3436718129669316,
            "num_unique_values": 127,
            "num_values_explored": 239,
            "solution": "(transpose (chain (disjunction equal (recursive successor (chain successor successor) successor)) (disjunction successor equal)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True]])],\n    solution=(transpose (chain (recursive (disjunction successor equal) (chain successor successor) successor) (disjunction successor equal)))\n)",
            "task_solution": "(transpose (chain (recursive (disjunction successor equal) (chain successor successor) successor) (disjunction successor equal)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.23977240902604535,
            "num_unique_values": 79,
            "num_values_explored": 171,
            "solution": "(recursive (chain (disjunction successor (chain (transpose successor) (recursive successor successor equal))) successor) (chain (transpose successor) successor) successor)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive successor (transpose successor) (recursive (chain successor successor) (transpose successor) equal)))\n)",
            "task_solution": "(chain successor (recursive successor (transpose successor) (recursive (chain successor successor) (transpose successor) equal)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.34179092600243166,
            "num_unique_values": 116,
            "num_values_explored": 240,
            "solution": "(recursive (transpose (chain successor successor)) (chain (transpose successor) (recursive successor zero (transpose successor))) successor)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False]])],\n    solution=(transpose (chain (recursive successor successor (recursive equal zero (recursive successor equal successor))) successor))\n)",
            "task_solution": "(transpose (chain (recursive successor successor (recursive equal zero (recursive successor equal successor))) successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2649189099902287,
            "num_unique_values": 96,
            "num_values_explored": 196,
            "solution": "(chain (recursive (transpose successor) (transpose successor) (chain (recursive zero (transpose successor) (transpose successor)) (disjunction equal successor))) successor)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(chain (recursive (transpose successor) (transpose successor) (recursive zero (transpose successor) (transpose successor))) successor)\n)",
            "task_solution": "(chain (recursive (transpose successor) (transpose successor) (recursive zero (transpose successor) (transpose successor))) successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.26320134999696165,
            "num_unique_values": 102,
            "num_values_explored": 204,
            "solution": "(chain (recursive successor successor (chain successor (chain successor successor))) (chain successor (transpose successor)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor successor (chain successor (chain successor successor))) (chain successor (transpose successor)))\n)",
            "task_solution": "(chain (recursive successor successor (chain successor (chain successor successor))) (chain successor (transpose successor)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2811069599702023,
            "num_unique_values": 105,
            "num_values_explored": 205,
            "solution": "(chain (transpose successor) (transpose (recursive (transpose (recursive zero zero (transpose successor))) (recursive equal equal successor) successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (chain (recursive (transpose (recursive zero zero (transpose successor))) (transpose successor) zero) successor))\n)",
            "task_solution": "(transpose (chain (recursive (transpose (recursive zero zero (transpose successor))) (transpose successor) zero) successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.23190176498610526,
            "num_unique_values": 77,
            "num_values_explored": 163,
            "solution": "(recursive (disjunction (chain successor successor) (recursive (transpose successor) (transpose successor) successor)) successor equal)",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (recursive (transpose successor) (transpose successor) successor) successor (recursive equal (transpose successor) successor))\n)",
            "task_solution": "(recursive (recursive (transpose successor) (transpose successor) successor) successor (recursive equal (transpose successor) successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.3287988679949194,
            "num_unique_values": 127,
            "num_values_explored": 240,
            "solution": "(transpose (disjunction equal (chain successor (chain successor (disjunction (transpose successor) (chain successor successor))))))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False, False,  True,  True, False, False, False, False,\n        False],\n       [False,  True, False, False,  True,  True, False, False, False,\n        False],\n       [False, False,  True, False, False,  True,  True, False, False,\n        False],\n       [False, False, False,  True, False, False,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False, False,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n         True]])],\n    solution=(transpose (disjunction equal (chain successor (chain successor (disjunction (transpose successor) (chain successor successor))))))\n)",
            "task_solution": "(transpose (disjunction equal (chain successor (chain successor (disjunction (transpose successor) (chain successor successor))))))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2837931209942326,
            "num_unique_values": 107,
            "num_values_explored": 214,
            "solution": "(disjunction zero (recursive successor (transpose successor) (recursive equal (transpose successor) (chain successor successor))))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(disjunction zero (recursive successor (transpose successor) (recursive equal (transpose successor) (chain successor successor))))\n)",
            "task_solution": "(disjunction zero (recursive successor (transpose successor) (recursive equal (transpose successor) (chain successor successor))))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2995195129769854,
            "num_unique_values": 96,
            "num_values_explored": 207,
            "solution": "(chain (disjunction (recursive successor (chain successor successor) successor) (disjunction (transpose successor) (chain successor successor))) (disjunction zero successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (disjunction (transpose successor) (recursive successor (chain successor successor) successor)) (disjunction zero successor))\n)",
            "task_solution": "(chain (disjunction (transpose successor) (recursive successor (chain successor successor) successor)) (disjunction zero successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.175947654992342,
            "num_unique_values": 62,
            "num_values_explored": 136,
            "solution": "(chain (recursive (chain successor successor) zero (recursive successor equal successor)) (chain successor successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (disjunction zero (chain successor successor)) (chain successor successor)) zero (transpose successor))\n)",
            "task_solution": "(recursive (chain (disjunction zero (chain successor successor)) (chain successor successor)) zero (transpose successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.33135410596150905,
            "num_unique_values": 118,
            "num_values_explored": 238,
            "solution": "(recursive (transpose (chain successor (disjunction successor equal))) (chain successor successor) (chain (recursive successor equal successor) (transpose successor)))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False]])],\n    solution=(transpose (chain successor (disjunction equal (recursive successor (recursive equal (transpose successor) successor) successor))))\n)",
            "task_solution": "(transpose (chain successor (disjunction equal (recursive successor (recursive equal (transpose successor) successor) successor))))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.3455753219895996,
            "num_unique_values": 126,
            "num_values_explored": 257,
            "solution": "(transpose (disjunction (chain successor (transpose successor)) (recursive successor (chain successor (chain successor successor)) successor)))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True,  True, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True,  True, False, False,\n        False],\n       [False, False,  True, False,  True, False,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (disjunction successor (recursive equal successor (chain successor (chain successor successor)))) (transpose successor))\n)",
            "task_solution": "(chain (disjunction successor (recursive equal successor (chain successor (chain successor successor)))) (transpose successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.296269433980342,
            "num_unique_values": 106,
            "num_values_explored": 222,
            "solution": "(disjunction equal (recursive (chain successor successor) successor (recursive successor (chain successor successor) successor)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (recursive (chain successor successor) successor (recursive successor (chain successor successor) successor)))\n)",
            "task_solution": "(disjunction equal (recursive (chain successor successor) successor (recursive successor (chain successor successor) successor)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.4442772489855997,
            "num_unique_values": 168,
            "num_values_explored": 324,
            "solution": "(transpose (chain (recursive equal (disjunction successor equal) (chain (disjunction zero successor) successor)) successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(transpose (chain (recursive equal (disjunction successor equal) (chain (disjunction zero successor) successor)) successor))\n)",
            "task_solution": "(transpose (chain (recursive equal (disjunction successor equal) (chain (disjunction zero successor) successor)) successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.3039642669609748,
            "num_unique_values": 109,
            "num_values_explored": 214,
            "solution": "(disjunction (transpose (chain zero (chain successor successor))) (chain (recursive successor equal successor) successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction (transpose (chain zero (chain successor successor))) (chain (recursive successor equal successor) successor))\n)",
            "task_solution": "(disjunction (transpose (chain zero (chain successor successor))) (chain (recursive successor equal successor) successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2672766280011274,
            "num_unique_values": 99,
            "num_values_explored": 197,
            "solution": "(chain (disjunction successor (chain (transpose successor) zero)) (disjunction (transpose successor) (chain successor successor)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction successor (transpose (chain zero successor))) (disjunction (transpose successor) (chain successor successor)))\n)",
            "task_solution": "(chain (disjunction successor (transpose (chain zero successor))) (disjunction (transpose successor) (chain successor successor)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2273221929790452,
            "num_unique_values": 79,
            "num_values_explored": 166,
            "solution": "(recursive (disjunction successor (transpose (chain successor successor))) (disjunction successor equal) (chain successor successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False]])],\n    solution=(recursive (disjunction successor (transpose (chain successor successor))) (disjunction successor equal) (chain successor successor))\n)",
            "task_solution": "(recursive (disjunction successor (transpose (chain successor successor))) (disjunction successor equal) (chain successor successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2324595469981432,
            "num_unique_values": 83,
            "num_values_explored": 166,
            "solution": "(recursive (transpose (chain zero (recursive successor successor equal))) (chain successor successor) (transpose successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (transpose (chain zero (recursive successor successor equal))) (chain successor successor) (transpose successor))\n)",
            "task_solution": "(recursive (transpose (chain zero (recursive successor successor equal))) (chain successor successor) (transpose successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2468589170021005,
            "num_unique_values": 79,
            "num_values_explored": 171,
            "solution": "(recursive equal (disjunction zero (recursive (chain successor successor) (transpose successor) equal)) (transpose successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive equal (disjunction zero (recursive (chain successor successor) (transpose successor) equal)) (transpose successor))\n)",
            "task_solution": "(recursive equal (disjunction zero (recursive (chain successor successor) (transpose successor) equal)) (transpose successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.3289230120135471,
            "num_unique_values": 118,
            "num_values_explored": 231,
            "solution": "(recursive (disjunction (transpose successor) (recursive successor successor (disjunction equal (chain successor successor)))) equal (chain zero successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) successor (recursive (transpose successor) (disjunction equal (chain successor successor)) successor))\n)",
            "task_solution": "(recursive (transpose successor) successor (recursive (transpose successor) (disjunction equal (chain successor successor)) successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2213028899859637,
            "num_unique_values": 85,
            "num_values_explored": 156,
            "solution": "(recursive successor (recursive equal equal successor) (chain (disjunction zero (chain successor successor)) successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False]])],\n    solution=(recursive successor (recursive equal equal successor) (chain (disjunction zero (chain successor successor)) successor))\n)",
            "task_solution": "(recursive successor (recursive equal equal successor) (chain (disjunction zero (chain successor successor)) successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.3346650259918533,
            "num_unique_values": 116,
            "num_values_explored": 235,
            "solution": "(recursive (recursive successor zero (transpose successor)) (chain (transpose (chain successor successor)) successor) successor)",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (recursive successor zero (transpose successor)) (chain (transpose (chain successor successor)) successor) successor)\n)",
            "task_solution": "(recursive (recursive successor zero (transpose successor)) (chain (transpose (chain successor successor)) successor) successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.23001708096126094,
            "num_unique_values": 76,
            "num_values_explored": 163,
            "solution": "(recursive (chain (disjunction zero (chain successor successor)) successor) (recursive successor equal successor) equal)",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (disjunction zero (chain successor successor)) successor) (recursive successor equal successor) equal)\n)",
            "task_solution": "(recursive (chain (disjunction zero (chain successor successor)) successor) (recursive successor equal successor) equal)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.3239850440295413,
            "num_unique_values": 116,
            "num_values_explored": 229,
            "solution": "(recursive successor (transpose (chain successor successor)) (disjunction equal (disjunction (recursive successor (transpose successor) successor) (transpose (chain successor successor)))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive successor (transpose (chain successor successor)) (disjunction equal (recursive successor (transpose successor) successor)))\n)",
            "task_solution": "(recursive successor (transpose (chain successor successor)) (disjunction equal (recursive successor (transpose successor) successor)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.34862438798882067,
            "num_unique_values": 136,
            "num_values_explored": 254,
            "solution": "(chain (disjunction (transpose successor) (recursive successor successor (recursive equal (disjunction (transpose successor) (chain zero successor)) (transpose successor)))) successor)",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (disjunction (transpose successor) (recursive successor successor (recursive equal successor (transpose successor)))) successor)\n)",
            "task_solution": "(chain (disjunction (transpose successor) (recursive successor successor (recursive equal successor (transpose successor)))) successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.19823189300950617,
            "num_unique_values": 68,
            "num_values_explored": 150,
            "solution": "(disjunction (chain successor successor) (chain (transpose successor) (recursive equal (chain successor successor) successor)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (chain successor successor) (transpose (chain (recursive equal successor (chain successor successor)) successor)))\n)",
            "task_solution": "(disjunction (chain successor successor) (transpose (chain (recursive equal successor (chain successor successor)) successor)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.23299440904520452,
            "num_unique_values": 79,
            "num_values_explored": 164,
            "solution": "(recursive (transpose successor) successor (chain (recursive successor zero (recursive successor equal successor)) (transpose successor)))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [ True, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [ True, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) successor (recursive equal zero (recursive (chain successor successor) equal successor)))\n)",
            "task_solution": "(recursive (transpose successor) successor (recursive equal zero (recursive (chain successor successor) equal successor)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.26525406003929675,
            "num_unique_values": 96,
            "num_values_explored": 183,
            "solution": "(chain successor (chain (recursive successor (transpose successor) successor) (recursive successor zero (transpose successor))))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain (recursive successor (transpose successor) successor) (recursive successor zero (transpose successor))))\n)",
            "task_solution": "(chain successor (chain (recursive successor (transpose successor) successor) (recursive successor zero (transpose successor))))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2986704179784283,
            "num_unique_values": 106,
            "num_values_explored": 224,
            "solution": "(disjunction zero (chain (disjunction successor (transpose (recursive successor successor equal))) (chain zero (chain successor successor))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction zero (chain (recursive (transpose successor) equal successor) (chain zero (chain successor successor))))\n)",
            "task_solution": "(disjunction zero (chain (recursive (transpose successor) equal successor) (chain zero (chain successor successor))))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.29565489798551425,
            "num_unique_values": 106,
            "num_values_explored": 218,
            "solution": "(disjunction equal (recursive (recursive successor successor (transpose successor)) (chain (transpose successor) successor) (recursive successor equal successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (recursive (recursive successor successor (transpose successor)) (chain (transpose successor) successor) successor))\n)",
            "task_solution": "(disjunction equal (recursive (recursive successor successor (transpose successor)) (chain (transpose successor) successor) successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2357300620060414,
            "num_unique_values": 76,
            "num_values_explored": 170,
            "solution": "(recursive equal (recursive successor (chain successor successor) successor) (recursive successor zero (transpose successor)))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [ True, False, False, False,  True,  True,  True, False, False,\n        False],\n       [ True, False, False, False, False,  True,  True, False, False,\n        False],\n       [ True, False, False, False, False, False,  True,  True, False,\n        False],\n       [ True, False, False, False, False, False, False,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive successor (chain successor successor) successor) (recursive successor zero (transpose successor)))\n)",
            "task_solution": "(recursive equal (recursive successor (chain successor successor) successor) (recursive successor zero (transpose successor)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.3063730249996297,
            "num_unique_values": 117,
            "num_values_explored": 223,
            "solution": "(recursive (disjunction successor equal) (transpose (chain successor (chain successor successor))) (chain (transpose (disjunction successor equal)) successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True]])],\n    solution=(recursive (disjunction successor equal) (transpose (chain successor (chain successor successor))) (disjunction successor equal))\n)",
            "task_solution": "(recursive (disjunction successor equal) (transpose (chain successor (chain successor successor))) (disjunction successor equal))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.18486983398906887,
            "num_unique_values": 56,
            "num_values_explored": 136,
            "solution": "(chain (recursive (disjunction (chain zero successor) (transpose successor)) equal successor) (chain successor successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (recursive (disjunction (transpose successor) (chain zero successor)) equal successor) (chain successor successor))\n)",
            "task_solution": "(chain (recursive (disjunction (transpose successor) (chain zero successor)) equal successor) (chain successor successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.30079262098297477,
            "num_unique_values": 107,
            "num_values_explored": 212,
            "solution": "(disjunction equal (disjunction (chain successor successor) (recursive (transpose successor) successor (chain successor successor))))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(disjunction equal (disjunction (chain successor successor) (recursive (transpose successor) successor (chain successor successor))))\n)",
            "task_solution": "(disjunction equal (disjunction (chain successor successor) (recursive (transpose successor) successor (chain successor successor))))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.3689173480379395,
            "num_unique_values": 126,
            "num_values_explored": 252,
            "solution": "(transpose (disjunction (recursive zero zero (transpose (chain successor successor))) (chain successor (chain (recursive successor successor (chain successor successor)) successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False]])],\n    solution=(transpose (disjunction zero (chain successor (chain (recursive successor successor (chain successor successor)) successor))))\n)",
            "task_solution": "(transpose (disjunction zero (chain successor (chain (recursive successor successor (chain successor successor)) successor))))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.3200172010110691,
            "num_unique_values": 106,
            "num_values_explored": 224,
            "solution": "(disjunction equal (chain (recursive (chain successor successor) (transpose (recursive (disjunction zero successor) successor equal)) successor) successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (chain (disjunction (chain successor successor) (recursive equal equal successor)) successor) zero successor)\n)",
            "task_solution": "(recursive (chain (disjunction (chain successor successor) (recursive equal equal successor)) successor) zero successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.37171623698668554,
            "num_unique_values": 137,
            "num_values_explored": 264,
            "solution": "(chain (recursive (recursive (transpose successor) successor (transpose (chain successor successor))) equal successor) (disjunction zero successor))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (recursive (transpose (disjunction successor equal)) successor (transpose (chain successor successor))) equal successor)\n)",
            "task_solution": "(recursive (recursive (transpose (disjunction successor equal)) successor (transpose (chain successor successor))) equal successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.31681318499613553,
            "num_unique_values": 119,
            "num_values_explored": 218,
            "solution": "(recursive (recursive (chain (recursive successor (transpose successor) successor) zero) (transpose successor) (recursive successor (transpose successor) successor)) equal successor)",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (recursive (transpose successor) (transpose successor) (recursive successor (transpose successor) successor)) equal successor)\n)",
            "task_solution": "(recursive (recursive (transpose successor) (transpose successor) (recursive successor (transpose successor) successor)) equal successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.24491958296857774,
            "num_unique_values": 76,
            "num_values_explored": 167,
            "solution": "(recursive (recursive equal zero (recursive successor equal successor)) (transpose successor) (chain successor successor))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n        False],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n         True]])],\n    solution=(recursive (recursive equal zero (recursive successor equal successor)) (transpose successor) (chain successor successor))\n)",
            "task_solution": "(recursive (recursive equal zero (recursive successor equal successor)) (transpose successor) (chain successor successor))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.332549434970133,
            "num_unique_values": 117,
            "num_values_explored": 227,
            "solution": "(recursive equal (chain successor successor) (recursive (chain zero (recursive successor successor (transpose successor))) (recursive successor equal successor) successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (recursive (chain (recursive successor equal successor) zero) successor (transpose successor)))\n)",
            "task_solution": "(recursive equal successor (recursive (chain (recursive successor equal successor) zero) successor (transpose successor)))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.34427122795023024,
            "num_unique_values": 127,
            "num_values_explored": 246,
            "solution": "(transpose (recursive successor (disjunction successor equal) (chain successor (chain successor (chain successor successor)))))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True, False,  True,  True,  True, False,\n        False],\n       [ True, False, False,  True,  True, False,  True,  True,  True,\n        False],\n       [False,  True, False, False,  True,  True, False, False, False,\n        False],\n       [False, False,  True, False, False,  True,  True, False, False,\n        False],\n       [False, False, False,  True, False, False,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False, False,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (chain successor (chain successor (chain successor successor))) (disjunction successor equal))\n)",
            "task_solution": "(recursive (transpose successor) (chain successor (chain successor (chain successor successor))) (disjunction successor equal))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.20436315599363297,
            "num_unique_values": 70,
            "num_values_explored": 151,
            "solution": "(disjunction (recursive successor (transpose successor) successor) (recursive (disjunction successor (transpose successor)) successor equal))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(disjunction (recursive successor (transpose successor) successor) (recursive (disjunction successor (transpose successor)) successor equal))\n)",
            "task_solution": "(disjunction (recursive successor (transpose successor) successor) (recursive (disjunction successor (transpose successor)) successor equal))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.2748764849966392,
            "num_unique_values": 96,
            "num_values_explored": 200,
            "solution": "(chain (recursive equal (disjunction (transpose successor) (chain successor (chain successor successor))) successor) successor)",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(chain (recursive equal (disjunction (transpose successor) (chain successor (chain successor successor))) successor) successor)\n)",
            "task_solution": "(chain (recursive equal (disjunction (transpose successor) (chain successor (chain successor successor))) successor) successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.25101360701955855,
            "num_unique_values": 76,
            "num_values_explored": 173,
            "solution": "(recursive (recursive (disjunction equal (chain successor successor)) (transpose successor) successor) (recursive successor successor equal) successor)",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(recursive (chain (recursive successor (transpose successor) successor) successor) (recursive successor successor equal) successor)\n)",
            "task_solution": "(recursive (chain (recursive successor (transpose successor) successor) successor) (recursive successor successor equal) successor)",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.33029202598845586,
            "num_unique_values": 130,
            "num_values_explored": 241,
            "solution": "(transpose (disjunction equal (recursive successor (transpose (disjunction equal (chain successor successor))) (transpose successor))))",
            "solution_weight": 13,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(transpose (disjunction equal (recursive successor (transpose (disjunction equal (chain successor successor))) (transpose successor))))\n)",
            "task_solution": "(transpose (disjunction equal (recursive successor (transpose (disjunction equal (chain successor successor))) (transpose successor))))",
            "task_solution_weight": 13
        },
        {
            "elapsed_time": 0.35078714799601585,
            "num_unique_values": 126,
            "num_values_explored": 244,
            "solution": "(transpose (disjunction successor (recursive equal (recursive equal (transpose successor) zero) (transpose (chain successor successor)))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True]])],\n    solution=(transpose (disjunction successor (recursive equal (recursive equal (transpose successor) zero) (transpose (chain successor successor)))))\n)",
            "task_solution": "(transpose (disjunction successor (recursive equal (recursive equal (transpose successor) zero) (transpose (chain successor successor)))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 73.98124761303188,
            "num_unique_values": 4975,
            "num_values_explored": 50025,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False,  True,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive equal (recursive (transpose (chain successor successor)) (chain successor successor) successor) successor))\n)",
            "task_solution": "(chain successor (recursive equal (recursive (transpose (chain successor successor)) (chain successor successor) successor) successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.36213051300728694,
            "num_unique_values": 116,
            "num_values_explored": 242,
            "solution": "(recursive (chain (disjunction (chain successor successor) (recursive zero (transpose successor) (transpose successor))) successor) successor equal)",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (recursive zero (transpose successor) (transpose successor)) successor) successor (recursive equal equal successor))\n)",
            "task_solution": "(recursive (chain (recursive zero (transpose successor) (transpose successor)) successor) successor (recursive equal equal successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.3848747709998861,
            "num_unique_values": 136,
            "num_values_explored": 266,
            "solution": "(chain successor (disjunction (chain successor successor) (transpose (disjunction equal (recursive successor successor (transpose successor))))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False,  True, False, False,\n        False],\n       [ True, False,  True, False,  True,  True, False,  True, False,\n        False],\n       [False,  True, False,  True, False,  True,  True, False,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True,  True, False,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (disjunction equal (disjunction (chain successor successor) (recursive (transpose successor) (transpose successor) successor))))\n)",
            "task_solution": "(chain successor (disjunction equal (disjunction (chain successor successor) (recursive (transpose successor) (transpose successor) successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 1.962167728052009,
            "num_unique_values": 496,
            "num_values_explored": 1655,
            "solution": "(chain zero (chain successor (chain (recursive equal (chain successor (chain successor successor)) successor) (chain successor successor))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain zero (recursive (chain successor (chain successor successor)) (recursive successor successor (transpose successor)) successor))\n)",
            "task_solution": "(chain zero (recursive (chain successor (chain successor successor)) (recursive successor successor (transpose successor)) successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.31857744802255183,
            "num_unique_values": 117,
            "num_values_explored": 240,
            "solution": "(recursive (disjunction successor (recursive equal successor (recursive successor successor (transpose successor)))) (transpose successor) zero)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True,  True, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True,  True, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True,  True, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n         True],\n       [ True, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (disjunction successor (recursive equal successor (recursive successor successor (transpose successor)))) (transpose successor) zero)\n)",
            "task_solution": "(recursive (disjunction successor (recursive equal successor (recursive successor successor (transpose successor)))) (transpose successor) zero)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.22524292598245665,
            "num_unique_values": 76,
            "num_values_explored": 164,
            "solution": "(recursive (recursive (chain successor successor) (transpose successor) successor) (chain successor successor) (disjunction successor equal))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False]])],\n    solution=(recursive (recursive (chain successor successor) (transpose successor) successor) (chain successor successor) (disjunction successor equal))\n)",
            "task_solution": "(recursive (recursive (chain successor successor) (transpose successor) successor) (chain successor successor) (disjunction successor equal))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.23336479801218957,
            "num_unique_values": 77,
            "num_values_explored": 160,
            "solution": "(recursive (disjunction (chain successor successor) (transpose successor)) (transpose (chain (disjunction zero successor) successor)) equal)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (disjunction (transpose successor) (chain successor successor)) (transpose (chain (disjunction zero successor) successor)) equal)\n)",
            "task_solution": "(recursive (disjunction (transpose successor) (chain successor successor)) (transpose (chain (disjunction zero successor) successor)) equal)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.48966366797685623,
            "num_unique_values": 186,
            "num_values_explored": 370,
            "solution": "(disjunction (recursive successor successor equal) (disjunction equal (recursive (recursive (transpose zero) (transpose (chain successor successor)) (transpose successor)) successor equal)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True, False,  True,  True,  True,\n         True],\n       [False, False, False, False,  True, False, False,  True,  True,\n         True],\n       [False, False, False, False,  True, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (disjunction equal (recursive (transpose zero) (transpose (chain successor successor)) (transpose successor))) successor equal)\n)",
            "task_solution": "(recursive (disjunction equal (recursive (transpose zero) (transpose (chain successor successor)) (transpose successor))) successor equal)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.3386143789975904,
            "num_unique_values": 116,
            "num_values_explored": 237,
            "solution": "(recursive successor (transpose (recursive (chain successor successor) zero successor)) (recursive equal (transpose successor) successor))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive successor (recursive (transpose (chain successor successor)) successor zero) (recursive equal (transpose successor) successor))\n)",
            "task_solution": "(recursive successor (recursive (transpose (chain successor successor)) successor zero) (recursive equal (transpose successor) successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.44295247399713844,
            "num_unique_values": 167,
            "num_values_explored": 303,
            "solution": "(transpose (chain (recursive successor (recursive (chain successor (chain successor successor)) equal successor) successor) successor))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False]])],\n    solution=(transpose (chain (recursive successor (recursive (chain successor (chain successor successor)) equal successor) successor) successor))\n)",
            "task_solution": "(transpose (chain (recursive successor (recursive (chain successor (chain successor successor)) equal successor) successor) successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.34646967402659357,
            "num_unique_values": 116,
            "num_values_explored": 247,
            "solution": "(recursive (recursive (chain successor successor) (chain successor (chain successor successor)) successor) (transpose successor) successor)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False]])],\n    solution=(recursive (recursive (chain successor successor) (chain successor (chain successor successor)) successor) (transpose successor) successor)\n)",
            "task_solution": "(recursive (recursive (chain successor successor) (chain successor (chain successor successor)) successor) (transpose successor) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.24959501205012202,
            "num_unique_values": 83,
            "num_values_explored": 161,
            "solution": "(recursive (disjunction successor equal) (transpose (chain successor successor)) (recursive (transpose successor) (transpose successor) zero))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (disjunction successor equal) (transpose (chain successor successor)) (recursive (transpose successor) (transpose successor) zero))\n)",
            "task_solution": "(recursive (disjunction successor equal) (transpose (chain successor successor)) (recursive (transpose successor) (transpose successor) zero))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.4241721120197326,
            "num_unique_values": 166,
            "num_values_explored": 301,
            "solution": "(transpose (chain successor (recursive (recursive equal zero (transpose (chain successor successor))) (transpose successor) successor)))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False, False, False,  True, False,  True, False,\n        False],\n       [ True, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(transpose (chain successor (recursive (recursive equal zero (transpose (chain successor successor))) (transpose successor) successor)))\n)",
            "task_solution": "(transpose (chain successor (recursive (recursive equal zero (transpose (chain successor successor))) (transpose successor) successor)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.2757852519862354,
            "num_unique_values": 96,
            "num_values_explored": 194,
            "solution": "(chain (recursive (chain (recursive (chain zero successor) (transpose successor) successor) (disjunction zero successor)) (transpose successor) successor) successor)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive (chain zero (chain successor successor)) (transpose successor) (recursive successor successor equal)) successor)\n)",
            "task_solution": "(chain (recursive (chain zero (chain successor successor)) (transpose successor) (recursive successor successor equal)) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.3024314360227436,
            "num_unique_values": 107,
            "num_values_explored": 217,
            "solution": "(disjunction successor (transpose (chain (disjunction zero successor) (recursive (chain successor successor) (transpose successor) successor))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False]])],\n    solution=(disjunction successor (transpose (chain (disjunction zero successor) (recursive (chain successor successor) (transpose successor) successor))))\n)",
            "task_solution": "(disjunction successor (transpose (chain (disjunction zero successor) (recursive (chain successor successor) (transpose successor) successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.23326309397816658,
            "num_unique_values": 77,
            "num_values_explored": 169,
            "solution": "(recursive (recursive (transpose successor) (transpose successor) zero) (recursive zero (transpose successor) (transpose successor)) successor)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False, False, False, False, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (recursive (transpose successor) (transpose successor) zero) (recursive zero (transpose successor) (transpose successor)) successor)\n)",
            "task_solution": "(recursive (recursive (transpose successor) (transpose successor) zero) (recursive zero (transpose successor) (transpose successor)) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.4167143009835854,
            "num_unique_values": 156,
            "num_values_explored": 298,
            "solution": "(recursive successor (transpose (chain zero (disjunction zero successor))) (transpose (chain successor (chain successor successor))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False, False,  True, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (transpose (chain zero (disjunction zero successor))) (transpose (chain successor (chain successor successor))))\n)",
            "task_solution": "(recursive successor (transpose (chain zero (disjunction zero successor))) (transpose (chain successor (chain successor successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.27277042798232287,
            "num_unique_values": 99,
            "num_values_explored": 202,
            "solution": "(chain (recursive (transpose successor) successor (recursive successor successor (transpose successor))) (recursive successor successor (transpose successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (transpose successor) (recursive successor successor (recursive (transpose successor) equal (transpose (chain successor successor)))))\n)",
            "task_solution": "(chain (transpose successor) (recursive successor successor (recursive (transpose successor) equal (transpose (chain successor successor)))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.2769802150432952,
            "num_unique_values": 101,
            "num_values_explored": 200,
            "solution": "(chain (disjunction successor equal) (disjunction (transpose successor) (chain successor (recursive successor (transpose successor) successor))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (disjunction successor equal) (disjunction (transpose successor) (chain successor (recursive successor (transpose successor) successor))))\n)",
            "task_solution": "(chain (disjunction successor equal) (disjunction (transpose successor) (chain successor (recursive successor (transpose successor) successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.27013600297505036,
            "num_unique_values": 96,
            "num_values_explored": 192,
            "solution": "(chain (recursive (transpose successor) (transpose successor) (recursive successor (transpose successor) (chain successor successor))) successor)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False,  True, False, False,\n         True],\n       [False,  True,  True,  True,  True,  True, False,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (recursive (transpose successor) (transpose successor) (recursive successor (transpose successor) (chain successor successor))) successor)\n)",
            "task_solution": "(chain (recursive (transpose successor) (transpose successor) (recursive successor (transpose successor) (chain successor successor))) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.43628547998378053,
            "num_unique_values": 158,
            "num_values_explored": 310,
            "solution": "(recursive (transpose (disjunction zero successor)) (recursive successor (transpose (chain (disjunction zero (chain successor successor)) successor)) equal) (transpose successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (transpose (disjunction zero successor)) (recursive equal (transpose successor) (chain successor successor)) (transpose successor))\n)",
            "task_solution": "(recursive (transpose (disjunction zero successor)) (recursive equal (transpose successor) (chain successor successor)) (transpose successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.1915563420043327,
            "num_unique_values": 61,
            "num_values_explored": 137,
            "solution": "(chain (disjunction (chain zero successor) (transpose successor)) (recursive equal zero (recursive successor equal successor)))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (disjunction (transpose successor) (chain zero successor)) equal (chain (recursive successor equal successor) zero))\n)",
            "task_solution": "(recursive (disjunction (transpose successor) (chain zero successor)) equal (chain (recursive successor equal successor) zero))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.28397624695207924,
            "num_unique_values": 96,
            "num_values_explored": 202,
            "solution": "(chain (transpose (disjunction (recursive successor (transpose successor) equal) (recursive equal successor (chain successor successor)))) successor)",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction (recursive successor (chain successor successor) successor) (chain (transpose successor) (recursive successor successor equal)))\n)",
            "task_solution": "(disjunction (recursive successor (chain successor successor) successor) (chain (transpose successor) (recursive successor successor equal)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.23808613402070478,
            "num_unique_values": 78,
            "num_values_explored": 171,
            "solution": "(recursive (disjunction zero (chain (transpose (recursive successor (chain zero successor) equal)) (chain successor successor))) (transpose successor) (chain (transpose successor) zero))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction zero (chain (transpose successor) (chain (disjunction successor (recursive zero zero (transpose successor))) successor)))\n)",
            "task_solution": "(disjunction zero (chain (transpose successor) (chain (disjunction successor (recursive zero zero (transpose successor))) successor)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.34210278501268476,
            "num_unique_values": 120,
            "num_values_explored": 256,
            "solution": "(recursive (transpose (chain successor successor)) (disjunction zero successor) (transpose (chain successor (chain successor successor))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False,  True, False, False, False,  True, False,\n        False],\n       [ True, False, False, False,  True, False, False, False,  True,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n         True],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [False, False, False,  True, False, False, False,  True, False,\n        False],\n       [False, False, False, False,  True, False, False, False,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain successor successor)) (disjunction zero successor) (transpose (chain successor (chain successor successor))))\n)",
            "task_solution": "(recursive (transpose (chain successor successor)) (disjunction zero successor) (transpose (chain successor (chain successor successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.2840075920103118,
            "num_unique_values": 99,
            "num_values_explored": 195,
            "solution": "(chain (recursive (recursive (chain successor successor) successor equal) (transpose successor) (chain (disjunction zero successor) successor)) successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True, False,  True, False, False,\n        False]])],\n    solution=(chain (recursive (recursive (chain successor successor) successor equal) (transpose successor) (chain successor successor)) successor)\n)",
            "task_solution": "(chain (recursive (recursive (chain successor successor) successor equal) (transpose successor) (chain successor successor)) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.3515580779640004,
            "num_unique_values": 129,
            "num_values_explored": 232,
            "solution": "(transpose (disjunction equal (recursive (recursive successor zero (transpose successor)) (transpose successor) (chain successor successor))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False,  True,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n         True],\n       [ True,  True,  True,  True,  True, False, False,  True, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False,  True,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n         True],\n       [ True,  True,  True, False,  True,  True, False,  True, False,\n        False],\n       [ True,  True, False, False, False,  True,  True, False,  True,\n        False],\n       [ True,  True, False, False, False, False,  True,  True, False,\n         True],\n       [ True, False, False, False, False, False, False,  True,  True,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction equal (recursive (recursive successor zero (transpose successor)) (transpose successor) (chain successor successor))))\n)",
            "task_solution": "(transpose (disjunction equal (recursive (recursive successor zero (transpose successor)) (transpose successor) (chain successor successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 5.7047358640120365,
            "num_unique_values": 1089,
            "num_values_explored": 5127,
            "solution": "(recursive successor equal (chain (disjunction successor equal) (chain successor (chain successor (recursive zero (recursive successor equal successor) successor)))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (recursive successor (chain successor (chain successor successor)) (recursive successor equal successor)))\n)",
            "task_solution": "(recursive successor successor (recursive successor (chain successor (chain successor successor)) (recursive successor equal successor)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.2942540419753641,
            "num_unique_values": 100,
            "num_values_explored": 211,
            "solution": "(chain (recursive equal (transpose (chain successor successor)) (transpose (disjunction zero successor))) (recursive successor successor equal))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True]])],\n    solution=(chain (recursive equal (transpose (disjunction equal (chain successor successor))) (transpose (disjunction zero successor))) successor)\n)",
            "task_solution": "(chain (recursive equal (transpose (disjunction equal (chain successor successor))) (transpose (disjunction zero successor))) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.22243962401989847,
            "num_unique_values": 78,
            "num_values_explored": 161,
            "solution": "(recursive (disjunction successor (recursive equal (chain successor successor) (disjunction successor (transpose successor)))) equal successor)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (disjunction successor (recursive equal (chain successor successor) (disjunction successor (transpose successor)))) equal successor)\n)",
            "task_solution": "(recursive (disjunction successor (recursive equal (chain successor successor) (disjunction successor (transpose successor)))) equal successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.22188343800371513,
            "num_unique_values": 67,
            "num_values_explored": 155,
            "solution": "(disjunction (transpose successor) (chain successor (recursive (chain successor successor) (recursive equal equal successor) (transpose successor))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) successor (recursive (transpose (chain successor (chain successor successor))) equal (transpose successor)))\n)",
            "task_solution": "(recursive (transpose successor) successor (recursive (transpose (chain successor (chain successor successor))) equal (transpose successor)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.3810675150016323,
            "num_unique_values": 138,
            "num_values_explored": 262,
            "solution": "(chain (transpose (disjunction successor (recursive (recursive equal zero (transpose successor)) (transpose successor) successor))) successor)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True, False,  True,  True, False,\n         True],\n       [False,  True,  True,  True, False, False, False,  True,  True,\n        False],\n       [False,  True,  True, False, False, False, False, False,  True,\n         True],\n       [False,  True, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (transpose (disjunction successor (recursive (recursive equal zero (transpose successor)) (transpose successor) successor))) successor)\n)",
            "task_solution": "(chain (transpose (disjunction successor (recursive (recursive equal zero (transpose successor)) (transpose successor) successor))) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.5052007529884577,
            "num_unique_values": 186,
            "num_values_explored": 373,
            "solution": "(disjunction equal (disjunction (transpose successor) (chain successor (chain successor (chain successor (disjunction successor equal))))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True,  True, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True,  True, False, False, False,\n        False],\n       [False,  True,  True, False, False,  True,  True, False, False,\n        False],\n       [False, False,  True,  True, False, False,  True,  True, False,\n        False],\n       [False, False, False,  True,  True, False, False,  True,  True,\n        False],\n       [False, False, False, False,  True,  True, False, False,  True,\n         True],\n       [False, False, False, False, False,  True,  True, False, False,\n         True],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(disjunction zero (chain (disjunction (transpose successor) (chain successor (chain successor successor))) (disjunction successor equal)))\n)",
            "task_solution": "(disjunction zero (chain (disjunction (transpose successor) (chain successor (chain successor successor))) (disjunction successor equal)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.214963925012853,
            "num_unique_values": 67,
            "num_values_explored": 153,
            "solution": "(disjunction (recursive equal successor (chain successor successor)) (recursive (chain zero successor) (transpose successor) equal))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True, False,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True, False, False, False,  True,  True,  True, False,\n        False],\n       [False,  True, False, False, False, False, False,  True,  True,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (disjunction equal (recursive (chain zero successor) (transpose successor) equal)) successor (chain successor successor))\n)",
            "task_solution": "(recursive (disjunction equal (recursive (chain zero successor) (transpose successor) equal)) successor (chain successor successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.3196122729568742,
            "num_unique_values": 107,
            "num_values_explored": 234,
            "solution": "(disjunction zero (chain (disjunction successor (transpose successor)) (chain (disjunction zero successor) (chain successor successor))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction zero (chain (disjunction successor (transpose successor)) (chain (disjunction zero successor) (chain successor successor))))\n)",
            "task_solution": "(disjunction zero (chain (disjunction successor (transpose successor)) (chain (disjunction zero successor) (chain successor successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.2849119089660235,
            "num_unique_values": 103,
            "num_values_explored": 197,
            "solution": "(chain (recursive (disjunction (transpose successor) (chain successor successor)) equal successor) (recursive successor (chain successor successor) successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (recursive successor (disjunction (transpose successor) (chain successor successor)) (recursive successor successor equal)) successor)\n)",
            "task_solution": "(chain (recursive successor (disjunction (transpose successor) (chain successor successor)) (recursive successor successor equal)) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.2872068209690042,
            "num_unique_values": 88,
            "num_values_explored": 185,
            "solution": "(transpose (disjunction (transpose successor) (chain (recursive (disjunction (chain successor successor) equal) (transpose successor) zero) successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False]])],\n    solution=(disjunction successor (transpose (chain (recursive (disjunction equal (chain successor successor)) (transpose successor) zero) successor)))\n)",
            "task_solution": "(disjunction successor (transpose (chain (recursive (disjunction equal (chain successor successor)) (transpose successor) zero) successor)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.3184820740134455,
            "num_unique_values": 111,
            "num_values_explored": 213,
            "solution": "(disjunction successor (transpose (recursive (disjunction equal (chain successor (chain successor successor))) (transpose successor) successor)))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n         True]])],\n    solution=(recursive (disjunction successor (transpose (disjunction equal (chain successor (chain successor successor))))) successor (transpose successor))\n)",
            "task_solution": "(recursive (disjunction successor (transpose (disjunction equal (chain successor (chain successor successor))))) successor (transpose successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.2972554549924098,
            "num_unique_values": 96,
            "num_values_explored": 211,
            "solution": "(chain (disjunction (transpose successor) (chain zero successor)) (disjunction equal (chain (disjunction zero successor) successor)))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (disjunction (transpose successor) (chain zero successor)) (disjunction equal (chain (disjunction zero successor) successor)))\n)",
            "task_solution": "(chain (disjunction (transpose successor) (chain zero successor)) (disjunction equal (chain (disjunction zero successor) successor)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.17216064600506797,
            "num_unique_values": 62,
            "num_values_explored": 134,
            "solution": "(chain (recursive successor (disjunction zero (chain successor successor)) (transpose successor)) (disjunction successor (transpose successor)))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True, False,  True,  True, False,\n         True],\n       [False, False,  True, False,  True,  True, False,  True,  True,\n        False],\n       [False, False, False,  True, False,  True,  True, False,  True,\n        False],\n       [False, False, False, False,  True, False,  True,  True, False,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor (disjunction zero (chain successor successor)) (transpose successor)) (disjunction successor (transpose successor)))\n)",
            "task_solution": "(chain (recursive successor (disjunction zero (chain successor successor)) (transpose successor)) (disjunction successor (transpose successor)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.23579319199780002,
            "num_unique_values": 76,
            "num_values_explored": 163,
            "solution": "(recursive (disjunction successor (recursive zero (recursive successor equal successor) successor)) (chain successor successor) successor)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (disjunction successor (recursive zero (recursive successor equal successor) successor)) (chain successor successor) successor)\n)",
            "task_solution": "(recursive (disjunction successor (recursive zero (recursive successor equal successor) successor)) (chain successor successor) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.2801797779975459,
            "num_unique_values": 96,
            "num_values_explored": 202,
            "solution": "(chain (recursive (disjunction equal successor) (chain successor successor) (recursive successor successor equal)) (transpose successor))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (chain (disjunction successor equal) (transpose successor)) (chain successor successor) (recursive successor successor equal))\n)",
            "task_solution": "(recursive (chain (disjunction successor equal) (transpose successor)) (chain successor successor) (recursive successor successor equal))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.2979579200036824,
            "num_unique_values": 106,
            "num_values_explored": 219,
            "solution": "(disjunction successor (transpose (recursive (chain successor (recursive zero (transpose successor) (transpose successor))) successor (transpose successor))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [False,  True, False, False, False,  True, False,  True, False,\n        False],\n       [ True, False, False, False,  True, False, False, False,  True,\n        False],\n       [False, False, False,  True, False, False, False,  True, False,\n         True],\n       [False, False,  True, False, False, False,  True, False, False,\n        False]])],\n    solution=(disjunction successor (recursive (chain successor (recursive zero (transpose successor) (transpose successor))) (transpose successor) successor))\n)",
            "task_solution": "(disjunction successor (recursive (chain successor (recursive zero (transpose successor) (transpose successor))) (transpose successor) successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.2077626470127143,
            "num_unique_values": 75,
            "num_values_explored": 161,
            "solution": "(disjunction zero (chain (transpose (chain successor successor)) (recursive successor (chain zero successor) (transpose successor))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction zero (chain (transpose (chain successor successor)) (recursive successor (chain zero successor) (transpose successor))))\n)",
            "task_solution": "(disjunction zero (chain (transpose (chain successor successor)) (recursive successor (chain zero successor) (transpose successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.4254479800001718,
            "num_unique_values": 156,
            "num_values_explored": 308,
            "solution": "(recursive equal successor (disjunction successor (recursive (chain successor (chain successor (chain successor successor))) zero (transpose successor))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False, False,  True, False, False, False,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False,  True, False,\n        False],\n       [ True, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (recursive (chain successor (chain successor (chain successor successor))) zero (transpose successor)))\n)",
            "task_solution": "(recursive equal successor (recursive (chain successor (chain successor (chain successor successor))) zero (transpose successor)))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.2841788669466041,
            "num_unique_values": 109,
            "num_values_explored": 213,
            "solution": "(disjunction successor (recursive (chain (recursive successor equal (chain successor successor)) zero) equal (transpose successor)))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor equal (recursive (transpose zero) (recursive equal equal successor) (transpose (chain successor successor))))\n)",
            "task_solution": "(recursive successor equal (recursive (transpose zero) (recursive equal equal successor) (transpose (chain successor successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.3187812609830871,
            "num_unique_values": 125,
            "num_values_explored": 221,
            "solution": "(recursive successor (transpose (disjunction successor equal)) (chain successor (recursive zero (transpose successor) (transpose successor))))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (transpose (disjunction successor equal)) (chain successor (recursive zero (transpose successor) (transpose successor))))\n)",
            "task_solution": "(recursive successor (transpose (disjunction successor equal)) (chain successor (recursive zero (transpose successor) (transpose successor))))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.37364371796138585,
            "num_unique_values": 126,
            "num_values_explored": 274,
            "solution": "(transpose (chain (recursive (disjunction equal (chain successor successor)) (transpose (chain successor successor)) zero) successor))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False]])],\n    solution=(transpose (chain (recursive (disjunction equal (chain successor successor)) (transpose (chain successor successor)) zero) successor))\n)",
            "task_solution": "(transpose (chain (recursive (disjunction equal (chain successor successor)) (transpose (chain successor successor)) zero) successor))",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.27299613296054304,
            "num_unique_values": 96,
            "num_values_explored": 212,
            "solution": "(chain (recursive (transpose successor) (recursive (transpose successor) successor (transpose successor)) (disjunction zero successor)) successor)",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(chain (recursive (transpose successor) (recursive (transpose successor) successor (transpose successor)) (disjunction zero successor)) successor)\n)",
            "task_solution": "(chain (recursive (transpose successor) (recursive (transpose successor) successor (transpose successor)) (disjunction zero successor)) successor)",
            "task_solution_weight": 14
        },
        {
            "elapsed_time": 0.19563528196886182,
            "num_unique_values": 68,
            "num_values_explored": 146,
            "solution": "(disjunction (chain successor (chain successor successor)) (recursive (transpose successor) successor (disjunction equal (chain successor successor))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (chain successor (chain successor successor)) (recursive (transpose successor) successor (disjunction equal (chain successor successor))))\n)",
            "task_solution": "(disjunction (chain successor (chain successor successor)) (recursive (transpose successor) successor (disjunction equal (chain successor successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.34250383800826967,
            "num_unique_values": 126,
            "num_values_explored": 246,
            "solution": "(transpose (chain (recursive equal (chain successor successor) (chain successor (disjunction (chain successor successor) equal))) successor))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False]])],\n    solution=(transpose (chain (recursive equal (chain successor successor) (chain successor (disjunction equal (chain successor successor)))) successor))\n)",
            "task_solution": "(transpose (chain (recursive equal (chain successor successor) (chain successor (disjunction equal (chain successor successor)))) successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.2920534339500591,
            "num_unique_values": 106,
            "num_values_explored": 214,
            "solution": "(disjunction (transpose successor) (recursive (chain successor (chain successor successor)) (chain successor (chain successor successor)) successor))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False, False, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False, False, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False, False, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False, False, False,  True, False,\n        False],\n       [False, False, False, False,  True, False, False, False,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (recursive (chain successor (chain successor successor)) (chain successor (chain successor successor)) successor))\n)",
            "task_solution": "(disjunction (transpose successor) (recursive (chain successor (chain successor successor)) (chain successor (chain successor successor)) successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3156630209996365,
            "num_unique_values": 123,
            "num_values_explored": 230,
            "solution": "(recursive (chain (disjunction successor (transpose successor)) (disjunction (transpose successor) (chain zero (chain successor successor)))) successor zero)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(chain (disjunction successor (transpose successor)) (disjunction zero (disjunction (transpose successor) (chain zero (chain successor successor)))))\n)",
            "task_solution": "(chain (disjunction successor (transpose successor)) (disjunction zero (disjunction (transpose successor) (chain zero (chain successor successor)))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3206596990348771,
            "num_unique_values": 106,
            "num_values_explored": 240,
            "solution": "(disjunction zero (chain (disjunction (chain zero successor) (recursive (chain successor successor) (transpose successor) (chain successor successor))) successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False]])],\n    solution=(disjunction zero (chain (recursive (chain (disjunction zero successor) successor) (transpose successor) (chain successor successor)) successor))\n)",
            "task_solution": "(disjunction zero (chain (recursive (chain (disjunction zero successor) successor) (transpose successor) (chain successor successor)) successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 1.8623787499964237,
            "num_unique_values": 430,
            "num_values_explored": 1750,
            "solution": "(recursive (recursive successor (chain zero successor) equal) successor (recursive (transpose (chain zero (chain successor successor))) (disjunction successor equal) (transpose successor)))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False,  True, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False,  True, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False,  True, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (recursive (transpose (chain zero (chain successor successor))) (disjunction successor equal) (transpose successor)))\n)",
            "task_solution": "(recursive successor successor (recursive (transpose (chain zero (chain successor successor))) (disjunction successor equal) (transpose successor)))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3002028790069744,
            "num_unique_values": 112,
            "num_values_explored": 227,
            "solution": "(disjunction successor (recursive (transpose successor) (transpose (chain successor successor)) (disjunction (transpose successor) (chain zero successor))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True,  True,  True, False,  True, False,\n        False],\n       [False,  True, False,  True,  True,  True,  True, False,  True,\n        False],\n       [ True, False,  True, False,  True,  True,  True,  True, False,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(disjunction successor (recursive (transpose successor) (transpose (chain successor successor)) (disjunction (transpose successor) (chain zero successor))))\n)",
            "task_solution": "(disjunction successor (recursive (transpose successor) (transpose (chain successor successor)) (disjunction (transpose successor) (chain zero successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.40878962801070884,
            "num_unique_values": 158,
            "num_values_explored": 285,
            "solution": "(recursive (recursive (disjunction successor (transpose (chain successor (chain successor successor)))) successor equal) (transpose successor) zero)",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False, False, False,  True,  True,  True, False,  True,\n         True],\n       [ True, False, False, False, False,  True,  True, False, False,\n         True],\n       [ True, False, False, False, False, False,  True, False, False,\n        False]])],\n    solution=(recursive (recursive (disjunction successor (transpose (chain successor (chain successor successor)))) successor equal) (transpose successor) zero)\n)",
            "task_solution": "(recursive (recursive (disjunction successor (transpose (chain successor (chain successor successor)))) successor equal) (transpose successor) zero)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3271310600102879,
            "num_unique_values": 116,
            "num_values_explored": 230,
            "solution": "(recursive (chain successor successor) (chain (recursive successor equal (chain successor successor)) zero) (recursive (transpose successor) (transpose successor) successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive successor (chain (recursive equal (transpose successor) successor) zero) (transpose (chain successor successor))))\n)",
            "task_solution": "(chain successor (recursive successor (chain (recursive equal (transpose successor) successor) zero) (transpose (chain successor successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.46574300195788965,
            "num_unique_values": 156,
            "num_values_explored": 310,
            "solution": "(recursive (transpose (chain (disjunction zero (chain successor (disjunction successor (transpose (chain successor successor))))) successor)) (transpose successor) zero)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False, False,  True, False, False, False,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n        False],\n       [ True, False, False, False,  True, False, False,  True, False,\n        False],\n       [ True, False, False, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False, False, False, False,  True, False, False,\n        False]])],\n    solution=(transpose (chain (recursive successor zero (transpose successor)) (chain (disjunction successor (transpose (chain successor successor))) successor)))\n)",
            "task_solution": "(transpose (chain (recursive successor zero (transpose successor)) (chain (disjunction successor (transpose (chain successor successor))) successor)))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.36337926803389564,
            "num_unique_values": 126,
            "num_values_explored": 252,
            "solution": "(transpose (disjunction equal (chain successor (recursive (disjunction successor (transpose (chain successor successor))) (transpose successor) zero))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True, False,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True, False,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True, False,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True]])],\n    solution=(transpose (disjunction equal (chain successor (recursive (disjunction successor (transpose (chain successor successor))) (transpose successor) zero))))\n)",
            "task_solution": "(transpose (disjunction equal (chain successor (recursive (disjunction successor (transpose (chain successor successor))) (transpose successor) zero))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3399879439966753,
            "num_unique_values": 107,
            "num_values_explored": 226,
            "solution": "(disjunction successor (chain (transpose (disjunction equal (recursive successor successor (transpose (recursive successor successor equal))))) zero))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [ True, False, False, False, False,  True, False, False, False,\n        False],\n       [ True, False, False, False, False, False,  True, False, False,\n        False],\n       [ True, False, False, False, False, False, False,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n         True],\n       [ True, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction zero (disjunction successor (transpose (chain zero (recursive successor successor (recursive (transpose successor) equal successor))))))\n)",
            "task_solution": "(disjunction zero (disjunction successor (transpose (chain zero (recursive successor successor (recursive (transpose successor) equal successor))))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3345019639818929,
            "num_unique_values": 116,
            "num_values_explored": 230,
            "solution": "(recursive (recursive equal (transpose (recursive successor equal successor)) (chain (transpose successor) (chain successor successor))) successor equal)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n         True]])],\n    solution=(recursive (recursive equal successor equal) (transpose successor) (chain (transpose successor) (chain successor (chain successor successor))))\n)",
            "task_solution": "(recursive (recursive equal successor equal) (transpose successor) (chain (transpose successor) (chain successor (chain successor successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3532217540196143,
            "num_unique_values": 126,
            "num_values_explored": 254,
            "solution": "(transpose (chain (recursive equal (disjunction successor equal) (chain successor (chain successor successor))) (disjunction zero successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True, False,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(transpose (chain (recursive equal (disjunction successor equal) (chain successor (chain successor successor))) (disjunction zero successor)))\n)",
            "task_solution": "(transpose (chain (recursive equal (disjunction successor equal) (chain successor (chain successor successor))) (disjunction zero successor)))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.4876086799777113,
            "num_unique_values": 192,
            "num_values_explored": 352,
            "solution": "(disjunction equal (recursive successor successor (recursive (transpose successor) (recursive successor (chain successor successor) successor) successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n         True],\n       [False, False, False, False, False,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (recursive successor successor (recursive (transpose successor) (recursive successor (chain successor successor) successor) successor)))\n)",
            "task_solution": "(disjunction equal (recursive successor successor (recursive (transpose successor) (recursive successor (chain successor successor) successor) successor)))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3159650170127861,
            "num_unique_values": 116,
            "num_values_explored": 220,
            "solution": "(recursive (recursive equal (chain (disjunction zero successor) successor) (transpose (chain successor successor))) (recursive equal equal successor) successor)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (recursive equal successor (transpose (chain successor (chain successor successor)))) equal (recursive successor equal successor))\n)",
            "task_solution": "(recursive (recursive equal successor (transpose (chain successor (chain successor successor)))) equal (recursive successor equal successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.36214049300178885,
            "num_unique_values": 122,
            "num_values_explored": 249,
            "solution": "(recursive (transpose successor) (recursive successor equal successor) (disjunction (chain zero successor) (transpose (chain successor successor))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (recursive successor equal successor) (disjunction (chain zero successor) (transpose (chain successor successor))))\n)",
            "task_solution": "(recursive (transpose successor) (recursive successor equal successor) (disjunction (chain zero successor) (transpose (chain successor successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.20393841800978407,
            "num_unique_values": 69,
            "num_values_explored": 156,
            "solution": "(disjunction equal (chain (recursive (disjunction zero successor) (transpose successor) zero) (disjunction equal (chain successor successor))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True, False,  True, False,  True,  True, False,  True, False,\n        False],\n       [ True, False,  True, False, False,  True,  True, False,  True,\n        False],\n       [ True, False,  True, False, False, False,  True,  True, False,\n         True],\n       [ True, False,  True, False, False, False, False,  True,  True,\n        False],\n       [ True, False,  True, False, False, False, False, False,  True,\n         True],\n       [ True, False,  True, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain (recursive (disjunction zero successor) (transpose successor) zero) (disjunction equal (chain successor successor))))\n)",
            "task_solution": "(disjunction equal (chain (recursive (disjunction zero successor) (transpose successor) zero) (disjunction equal (chain successor successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.33558790798997506,
            "num_unique_values": 116,
            "num_values_explored": 243,
            "solution": "(recursive (recursive equal (transpose successor) successor) successor (recursive zero (transpose successor) (transpose (chain successor successor))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False,  True, False, False,\n         True],\n       [ True,  True, False,  True, False, False,  True, False, False,\n         True],\n       [ True, False,  True,  True, False, False,  True, False, False,\n         True],\n       [ True,  True, False,  True, False, False,  True, False, False,\n         True],\n       [ True, False,  True,  True,  True, False,  True, False, False,\n         True],\n       [ True,  True, False,  True, False,  True,  True, False, False,\n         True],\n       [ True, False,  True,  True,  True, False,  True, False, False,\n         True],\n       [ True,  True, False,  True, False,  True,  True,  True, False,\n         True],\n       [ True, False,  True,  True,  True, False,  True, False,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(recursive (recursive equal (transpose successor) successor) successor (recursive zero (transpose successor) (transpose (chain successor successor))))\n)",
            "task_solution": "(recursive (recursive equal (transpose successor) successor) successor (recursive zero (transpose successor) (transpose (chain successor successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.2969391599763185,
            "num_unique_values": 97,
            "num_values_explored": 213,
            "solution": "(chain (recursive (transpose successor) (chain successor successor) (chain (transpose successor) (recursive successor successor equal))) successor)",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (recursive (transpose successor) (chain successor successor) (chain (transpose successor) (recursive successor successor equal))) successor)\n)",
            "task_solution": "(chain (recursive (transpose successor) (chain successor successor) (chain (transpose successor) (recursive successor successor equal))) successor)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3537968879682012,
            "num_unique_values": 116,
            "num_values_explored": 236,
            "solution": "(recursive (chain (disjunction zero (chain successor successor)) (chain (recursive equal (transpose successor) zero) successor)) zero (transpose successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n        False],\n       [False,  True, False, False, False, False,  True, False, False,\n        False],\n       [False,  True, False, False, False, False, False,  True, False,\n        False],\n       [False,  True, False, False, False, False, False, False,  True,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n         True],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (chain successor (chain (recursive equal (transpose successor) zero) successor))) zero (transpose successor))\n)",
            "task_solution": "(recursive (chain successor (chain successor (chain (recursive equal (transpose successor) zero) successor))) zero (transpose successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.33782977698137984,
            "num_unique_values": 116,
            "num_values_explored": 218,
            "solution": "(recursive equal (chain (transpose successor) (recursive successor successor (chain successor (chain successor successor)))) (transpose successor))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive (chain (transpose successor) successor) successor (chain successor (chain successor successor))) (transpose successor))\n)",
            "task_solution": "(recursive equal (recursive (chain (transpose successor) successor) successor (chain successor (chain successor successor))) (transpose successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.41922036500182003,
            "num_unique_values": 146,
            "num_values_explored": 310,
            "solution": "(disjunction successor (recursive equal (transpose (chain successor (chain successor successor))) (recursive equal (transpose successor) successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True,  True,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True,  True,  True, False,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(disjunction successor (recursive equal (transpose (chain successor (chain successor successor))) (recursive equal (transpose successor) successor)))\n)",
            "task_solution": "(disjunction successor (recursive equal (transpose (chain successor (chain successor successor))) (recursive equal (transpose successor) successor)))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3170745040406473,
            "num_unique_values": 116,
            "num_values_explored": 216,
            "solution": "(recursive (transpose successor) (recursive successor successor equal) (recursive successor (chain (disjunction zero (chain successor successor)) successor) successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (recursive successor successor equal) (recursive successor (chain successor (chain successor successor)) successor))\n)",
            "task_solution": "(recursive (transpose successor) (recursive successor successor equal) (recursive successor (chain successor (chain successor successor)) successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3775838430156,
            "num_unique_values": 136,
            "num_values_explored": 275,
            "solution": "(chain (disjunction zero successor) (disjunction equal (chain successor (chain (disjunction equal successor) (chain successor successor)))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True, False, False,  True,  True, False, False,\n        False],\n       [False, False, False,  True, False, False,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False, False,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction zero successor) (disjunction equal (chain successor (chain successor (chain successor (disjunction successor equal))))))\n)",
            "task_solution": "(chain (disjunction zero successor) (disjunction equal (chain successor (chain successor (chain successor (disjunction successor equal))))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.28046070598065853,
            "num_unique_values": 106,
            "num_values_explored": 205,
            "solution": "(disjunction zero (recursive successor (recursive (chain (disjunction zero successor) successor) equal (chain successor successor)) equal))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction zero (recursive successor (recursive (chain (disjunction zero successor) successor) equal (chain successor successor)) equal))\n)",
            "task_solution": "(disjunction zero (recursive successor (recursive (chain (disjunction zero successor) successor) equal (chain successor successor)) equal))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.2927800180041231,
            "num_unique_values": 97,
            "num_values_explored": 211,
            "solution": "(chain (transpose (disjunction successor equal)) (recursive (chain zero successor) (transpose successor) (transpose (chain successor successor))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (transpose (disjunction zero successor)) (chain zero successor)) (transpose successor) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (chain (transpose (disjunction zero successor)) (chain zero successor)) (transpose successor) (transpose (chain successor successor)))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.4691287499736063,
            "num_unique_values": 176,
            "num_values_explored": 338,
            "solution": "(chain successor (chain (transpose (chain (recursive equal (chain successor (chain successor successor)) (disjunction equal successor)) successor)) successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False,  True, False,  True,  True, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive equal (chain successor (transpose (disjunction successor equal))) (chain successor (chain successor successor))) successor)\n)",
            "task_solution": "(chain (recursive equal (chain successor (transpose (disjunction successor equal))) (chain successor (chain successor successor))) successor)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.263682295975741,
            "num_unique_values": 86,
            "num_values_explored": 189,
            "solution": "(transpose (disjunction (recursive (chain successor successor) equal successor) (chain zero (recursive equal successor (transpose successor)))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [ True, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [ True, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(transpose (disjunction (recursive (chain successor successor) equal successor) (chain zero (recursive equal successor (transpose successor)))))\n)",
            "task_solution": "(transpose (disjunction (recursive (chain successor successor) equal successor) (chain zero (recursive equal successor (transpose successor)))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.29425043298397213,
            "num_unique_values": 113,
            "num_values_explored": 216,
            "solution": "(disjunction (recursive successor successor (recursive successor zero (transpose successor))) (recursive equal (recursive equal zero (transpose successor)) (chain successor successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True,  True, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True,  True, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True,  True, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(recursive (disjunction successor (recursive equal (recursive equal zero (transpose successor)) (chain successor successor))) successor zero)\n)",
            "task_solution": "(recursive (disjunction successor (recursive equal (recursive equal zero (transpose successor)) (chain successor successor))) successor zero)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.2279610800324008,
            "num_unique_values": 82,
            "num_values_explored": 163,
            "solution": "(recursive equal (recursive (disjunction successor equal) (transpose successor) zero) (transpose (disjunction zero (chain successor successor))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive equal (recursive (disjunction successor equal) (transpose successor) zero) (transpose (disjunction zero (chain successor successor))))\n)",
            "task_solution": "(recursive equal (recursive (disjunction successor equal) (transpose successor) zero) (transpose (disjunction zero (chain successor successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.27943801903165877,
            "num_unique_values": 96,
            "num_values_explored": 207,
            "solution": "(chain (disjunction successor (recursive equal (transpose successor) (chain (disjunction zero successor) successor))) (disjunction zero successor))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True,  True, False, False, False,\n        False],\n       [False, False,  True, False, False,  True,  True, False, False,\n        False],\n       [ True,  True, False,  True, False, False,  True,  True, False,\n        False],\n       [ True,  True, False, False,  True, False, False,  True,  True,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n         True],\n       [ True,  True, False,  True, False, False,  True, False, False,\n         True],\n       [ True,  True, False, False,  True, False, False,  True, False,\n        False]])],\n    solution=(chain (disjunction successor (recursive equal (transpose successor) (chain (disjunction zero successor) successor))) (disjunction zero successor))\n)",
            "task_solution": "(chain (disjunction successor (recursive equal (transpose successor) (chain (disjunction zero successor) successor))) (disjunction zero successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3676183680072427,
            "num_unique_values": 126,
            "num_values_explored": 255,
            "solution": "(transpose (chain (transpose (disjunction successor (disjunction (transpose successor) (chain successor successor)))) (disjunction zero (chain successor successor))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True, False,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True, False,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True, False,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n         True]])],\n    solution=(transpose (chain (disjunction successor (transpose (chain successor (disjunction successor equal)))) (disjunction zero (chain successor successor))))\n)",
            "task_solution": "(transpose (chain (disjunction successor (transpose (chain successor (disjunction successor equal)))) (disjunction zero (chain successor successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 2.2002866429975256,
            "num_unique_values": 506,
            "num_values_explored": 1853,
            "solution": "(recursive (recursive successor equal successor) (recursive equal (transpose (chain successor successor)) (transpose (chain successor (chain successor successor)))) successor)",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (recursive equal (transpose (chain successor successor)) (transpose (chain successor (chain successor successor)))) successor)\n)",
            "task_solution": "(recursive successor (recursive equal (transpose (chain successor successor)) (transpose (chain successor (chain successor successor)))) successor)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.38942710700212047,
            "num_unique_values": 159,
            "num_values_explored": 270,
            "solution": "(recursive equal successor (transpose (disjunction equal (recursive successor (transpose successor) (chain successor (chain successor successor))))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True, False,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (transpose (disjunction equal (recursive successor (transpose successor) (chain successor (chain successor successor))))))\n)",
            "task_solution": "(recursive equal successor (transpose (disjunction equal (recursive successor (transpose successor) (chain successor (chain successor successor))))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.23375953396316618,
            "num_unique_values": 76,
            "num_values_explored": 166,
            "solution": "(recursive (disjunction (transpose successor) (chain (recursive equal successor (chain successor successor)) successor)) zero (transpose successor))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (disjunction (transpose successor) (chain (recursive equal successor (chain successor successor)) successor)) zero (transpose successor))\n)",
            "task_solution": "(recursive (disjunction (transpose successor) (chain (recursive equal successor (chain successor successor)) successor)) zero (transpose successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.33728724502725527,
            "num_unique_values": 121,
            "num_values_explored": 247,
            "solution": "(recursive (recursive (recursive successor zero (transpose successor)) (transpose successor) successor) (recursive successor successor equal) successor)",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (recursive (recursive successor zero (transpose successor)) (transpose successor) successor) (recursive successor successor equal) successor)\n)",
            "task_solution": "(recursive (recursive (recursive successor zero (transpose successor)) (transpose successor) successor) (recursive successor successor equal) successor)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.27422663796460256,
            "num_unique_values": 96,
            "num_values_explored": 203,
            "solution": "(chain (disjunction (chain successor successor) (recursive zero zero (transpose successor))) (chain successor (chain successor successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction (chain successor successor) (recursive zero zero (transpose successor))) (chain successor (chain successor successor)))\n)",
            "task_solution": "(chain (disjunction (chain successor successor) (recursive zero zero (transpose successor))) (chain successor (chain successor successor)))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.32593493099557236,
            "num_unique_values": 116,
            "num_values_explored": 230,
            "solution": "(recursive (disjunction (chain (recursive successor equal successor) successor) (chain (transpose successor) zero)) (chain (transpose successor) zero) (recursive successor equal successor))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (recursive successor equal successor) successor) (transpose (chain zero successor)) (recursive successor equal successor))\n)",
            "task_solution": "(recursive (chain (recursive successor equal successor) successor) (transpose (chain zero successor)) (recursive successor equal successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.5510481339879334,
            "num_unique_values": 197,
            "num_values_explored": 392,
            "solution": "(recursive (transpose (disjunction successor (disjunction equal (chain (recursive successor (transpose successor) successor) (chain successor successor))))) equal successor)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (transpose (disjunction equal (recursive successor (recursive successor (transpose successor) successor) (transpose successor)))) equal successor)\n)",
            "task_solution": "(recursive (transpose (disjunction equal (recursive successor (recursive successor (transpose successor) successor) (transpose successor)))) equal successor)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.397021266981028,
            "num_unique_values": 136,
            "num_values_explored": 279,
            "solution": "(chain successor (chain (recursive successor (chain successor successor) successor) (disjunction successor (transpose (disjunction successor equal)))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain (recursive successor (chain successor successor) successor) (disjunction successor (transpose (disjunction successor equal)))))\n)",
            "task_solution": "(chain successor (chain (recursive successor (chain successor successor) successor) (disjunction successor (transpose (disjunction successor equal)))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.37993644597008824,
            "num_unique_values": 136,
            "num_values_explored": 283,
            "solution": "(chain (transpose successor) (chain (recursive successor successor (recursive successor zero (transpose successor))) (disjunction zero successor)))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False, False, False,  True, False, False, False,\n        False],\n       [ True,  True, False, False, False, False,  True, False, False,\n        False],\n       [ True,  True, False, False, False, False, False,  True, False,\n        False],\n       [ True,  True, False, False, False, False, False, False,  True,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (transpose successor) (chain (recursive successor successor (recursive successor zero (transpose successor))) (disjunction zero successor)))\n)",
            "task_solution": "(chain (transpose successor) (chain (recursive successor successor (recursive successor zero (transpose successor))) (disjunction zero successor)))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.37180094805080444,
            "num_unique_values": 147,
            "num_values_explored": 276,
            "solution": "(disjunction equal (chain (disjunction (transpose successor) (chain successor (chain successor (chain successor successor)))) (chain successor (transpose (disjunction equal successor)))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False,  True,  True, False, False, False,\n        False],\n       [ True,  True, False, False, False,  True,  True, False, False,\n        False],\n       [False,  True,  True, False, False, False,  True,  True, False,\n        False],\n       [False, False,  True,  True, False, False, False,  True,  True,\n        False],\n       [False, False, False,  True,  True, False, False, False,  True,\n         True],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(recursive (transpose (disjunction successor equal)) (chain successor (chain successor (chain successor (chain successor successor)))) equal)\n)",
            "task_solution": "(recursive (transpose (disjunction successor equal)) (chain successor (chain successor (chain successor (chain successor successor)))) equal)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.26673603599192575,
            "num_unique_values": 97,
            "num_values_explored": 196,
            "solution": "(chain (recursive (recursive (transpose successor) (transpose successor) successor) (chain successor successor) (disjunction successor equal)) successor)",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(chain (recursive (recursive (transpose successor) (transpose successor) successor) (chain successor successor) (disjunction successor equal)) successor)\n)",
            "task_solution": "(chain (recursive (recursive (transpose successor) (transpose successor) successor) (chain successor successor) (disjunction successor equal)) successor)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 59.15274784801295,
            "num_unique_values": 2823,
            "num_values_explored": 50092,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction equal (recursive successor successor (recursive successor (recursive (chain successor successor) equal successor) successor))))\n)",
            "task_solution": "(transpose (disjunction equal (recursive successor successor (recursive successor (recursive (chain successor successor) equal successor) successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.3623062410042621,
            "num_unique_values": 138,
            "num_values_explored": 259,
            "solution": "(chain (disjunction successor equal) (transpose (disjunction equal (recursive successor (chain successor (chain successor successor)) (chain successor (disjunction successor equal))))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(chain (disjunction successor equal) (transpose (disjunction equal (recursive successor (chain successor (chain successor successor)) successor))))\n)",
            "task_solution": "(chain (disjunction successor equal) (transpose (disjunction equal (recursive successor (chain successor (chain successor successor)) successor))))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.2329304869635962,
            "num_unique_values": 76,
            "num_values_explored": 167,
            "solution": "(recursive (chain (recursive (transpose successor) successor (recursive successor successor equal)) successor) (chain successor successor) successor)",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (chain (recursive (transpose successor) successor (recursive successor successor equal)) successor) (chain successor successor) successor)\n)",
            "task_solution": "(recursive (chain (recursive (transpose successor) successor (recursive successor successor equal)) successor) (chain successor successor) successor)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.27958594798110425,
            "num_unique_values": 106,
            "num_values_explored": 205,
            "solution": "(disjunction (chain successor (transpose successor)) (chain (recursive zero (transpose successor) (transpose (chain successor successor))) (recursive successor successor equal)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (transpose successor)) (recursive zero (transpose successor) (transpose (chain successor successor))) (transpose successor))\n)",
            "task_solution": "(recursive (chain successor (transpose successor)) (recursive zero (transpose successor) (transpose (chain successor successor))) (transpose successor))",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.2874086190131493,
            "num_unique_values": 107,
            "num_values_explored": 208,
            "solution": "(disjunction (recursive successor (recursive successor successor (transpose successor)) successor) (transpose (chain zero (chain successor successor))))",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (disjunction successor (transpose (chain zero (chain successor successor)))) (recursive successor successor (transpose successor)) successor)\n)",
            "task_solution": "(recursive (disjunction successor (transpose (chain zero (chain successor successor)))) (recursive successor successor (transpose successor)) successor)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.2399881620076485,
            "num_unique_values": 84,
            "num_values_explored": 169,
            "solution": "(recursive (disjunction successor (chain zero (recursive equal successor (transpose successor)))) (transpose (chain successor successor)) successor)",
            "solution_weight": 15,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True, False, False,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n        False],\n       [False,  True, False,  True,  True,  True, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [ True, False,  True,  True,  True, False,  True, False, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False]])],\n    solution=(recursive (disjunction successor (chain zero (recursive equal successor (transpose successor)))) (transpose (chain successor successor)) successor)\n)",
            "task_solution": "(recursive (disjunction successor (chain zero (recursive equal successor (transpose successor)))) (transpose (chain successor successor)) successor)",
            "task_solution_weight": 15
        },
        {
            "elapsed_time": 0.5849389599752612,
            "num_unique_values": 199,
            "num_values_explored": 428,
            "solution": "(recursive (recursive successor equal successor) (chain (recursive equal (transpose successor) (chain successor successor)) zero) (recursive successor equal successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive successor (recursive equal (chain (recursive equal (transpose successor) (chain successor successor)) zero) (transpose successor)) successor)\n)",
            "task_solution": "(recursive successor (recursive equal (chain (recursive equal (transpose successor) (chain successor successor)) zero) (transpose successor)) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 67.96592611196684,
            "num_unique_values": 4917,
            "num_values_explored": 50070,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True,  True, False,  True, False,\n        False],\n       [ True, False,  True,  True, False,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True]])],\n    solution=(recursive equal (transpose successor) (recursive (chain successor successor) equal (chain (disjunction zero (chain successor successor)) successor)))\n)",
            "task_solution": "(recursive equal (transpose successor) (recursive (chain successor successor) equal (chain (disjunction zero (chain successor successor)) successor)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.2925499019911513,
            "num_unique_values": 106,
            "num_values_explored": 205,
            "solution": "(disjunction (transpose (chain successor successor)) (recursive successor (recursive (chain successor successor) successor (chain successor successor)) successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False, False,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(disjunction (transpose (chain successor successor)) (recursive successor (recursive (chain successor successor) successor (chain successor successor)) successor))\n)",
            "task_solution": "(disjunction (transpose (chain successor successor)) (recursive successor (recursive (chain successor successor) successor (chain successor successor)) successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.38674369401996955,
            "num_unique_values": 137,
            "num_values_explored": 275,
            "solution": "(chain (disjunction (recursive successor (transpose successor) successor) (recursive equal zero (transpose (chain successor successor)))) (transpose successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True,  True,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n        False]])],\n    solution=(chain (disjunction (recursive successor (transpose successor) successor) (recursive equal zero (transpose (chain successor successor)))) (transpose successor))\n)",
            "task_solution": "(chain (disjunction (recursive successor (transpose successor) successor) (recursive equal zero (transpose (chain successor successor)))) (transpose successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.46295224700588733,
            "num_unique_values": 146,
            "num_values_explored": 329,
            "solution": "(disjunction successor (recursive (chain (transpose successor) (disjunction zero (chain successor successor))) (chain successor successor) (chain successor (chain successor (transpose successor)))))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (disjunction successor (transpose (chain zero successor))) (chain successor successor) (chain successor (chain successor (transpose successor))))\n)",
            "task_solution": "(recursive (disjunction successor (transpose (chain zero successor))) (chain successor successor) (chain successor (chain successor (transpose successor))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 1.3711731569492258,
            "num_unique_values": 381,
            "num_values_explored": 1218,
            "solution": "(chain (recursive successor successor (disjunction (transpose successor) (chain successor successor))) (transpose (chain successor (chain successor successor))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor successor (disjunction (transpose successor) (chain successor successor))) (transpose (chain successor (chain successor successor))))\n)",
            "task_solution": "(chain (recursive successor successor (disjunction (transpose successor) (chain successor successor))) (transpose (chain successor (chain successor successor))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 66.07276513701072,
            "num_unique_values": 3892,
            "num_values_explored": 50077,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (recursive successor (disjunction (transpose successor) (chain successor (chain successor (disjunction successor equal)))) successor))\n)",
            "task_solution": "(recursive successor successor (recursive successor (disjunction (transpose successor) (chain successor (chain successor (disjunction successor equal)))) successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.2856707510072738,
            "num_unique_values": 100,
            "num_values_explored": 197,
            "solution": "(chain (disjunction (recursive equal equal successor) (chain successor (chain successor successor))) (disjunction equal (disjunction (transpose successor) (chain successor successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (disjunction (recursive equal equal successor) (chain successor (chain successor successor))) (disjunction equal (chain successor successor)))\n)",
            "task_solution": "(chain (disjunction (recursive equal equal successor) (chain successor (chain successor successor))) (disjunction equal (chain successor successor)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.4144660200108774,
            "num_unique_values": 136,
            "num_values_explored": 286,
            "solution": "(chain successor (chain (disjunction equal (chain successor successor)) (disjunction equal (recursive successor equal (chain successor successor)))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True, False,  True,  True,  True,  True,  True, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain (disjunction equal (chain successor successor)) (disjunction equal (recursive successor equal (chain successor successor)))))\n)",
            "task_solution": "(chain successor (chain (disjunction equal (chain successor successor)) (disjunction equal (recursive successor equal (chain successor successor)))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.29499164898879826,
            "num_unique_values": 106,
            "num_values_explored": 220,
            "solution": "(disjunction (recursive (transpose successor) successor (transpose successor)) (chain (recursive (disjunction zero successor) (transpose successor) zero) (chain successor successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True, False, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False, False, False,  True, False,  True,\n        False],\n       [False, False,  True, False, False, False, False,  True, False,\n         True],\n       [False, False,  True, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (recursive (transpose successor) successor (transpose successor)) (recursive (chain zero (chain successor successor)) (transpose successor) equal))\n)",
            "task_solution": "(disjunction (recursive (transpose successor) successor (transpose successor)) (recursive (chain zero (chain successor successor)) (transpose successor) equal))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.329632191976998,
            "num_unique_values": 118,
            "num_values_explored": 252,
            "solution": "(recursive (recursive equal (transpose (chain successor successor)) (transpose successor)) (transpose (chain successor successor)) (chain zero successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (recursive equal (transpose (chain successor successor)) (transpose successor)) (transpose (chain successor successor)) (chain zero successor))\n)",
            "task_solution": "(recursive (recursive equal (transpose (chain successor successor)) (transpose successor)) (transpose (chain successor successor)) (chain zero successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.31198177399346605,
            "num_unique_values": 116,
            "num_values_explored": 233,
            "solution": "(recursive equal (recursive successor (chain successor (chain successor successor)) (disjunction successor (transpose (disjunction successor equal)))) successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive successor (chain successor (chain successor successor)) (disjunction successor (transpose (disjunction successor equal)))) successor)\n)",
            "task_solution": "(recursive equal (recursive successor (chain successor (chain successor successor)) (disjunction successor (transpose (disjunction successor equal)))) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3444331139908172,
            "num_unique_values": 139,
            "num_values_explored": 267,
            "solution": "(chain (recursive (chain successor successor) (transpose successor) (recursive zero (transpose successor) (transpose (chain successor successor)))) successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False,  True, False, False,  True,  True,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n         True],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False]])],\n    solution=(chain (recursive (chain successor successor) (transpose successor) (recursive zero (transpose successor) (transpose (chain successor successor)))) successor)\n)",
            "task_solution": "(chain (recursive (chain successor successor) (transpose successor) (recursive zero (transpose successor) (transpose (chain successor successor)))) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3256250669946894,
            "num_unique_values": 121,
            "num_values_explored": 244,
            "solution": "(recursive (recursive (disjunction zero successor) (transpose (chain successor successor)) equal) (recursive successor successor (transpose successor)) successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (recursive (disjunction zero successor) (transpose (chain successor successor)) equal) (recursive successor successor (transpose successor)) successor)\n)",
            "task_solution": "(recursive (recursive (disjunction zero successor) (transpose (chain successor successor)) equal) (recursive successor successor (transpose successor)) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.2944980169995688,
            "num_unique_values": 106,
            "num_values_explored": 212,
            "solution": "(disjunction (recursive (chain (transpose successor) successor) equal successor) (recursive (chain successor successor) successor (transpose (chain successor successor))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [ True,  True, False,  True, False, False,  True, False, False,\n         True],\n       [ True,  True,  True, False,  True, False, False,  True, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False,  True,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n         True],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(transpose (disjunction (recursive successor (transpose successor) (chain successor successor)) (recursive (chain (transpose successor) successor) successor equal)))\n)",
            "task_solution": "(transpose (disjunction (recursive successor (transpose successor) (chain successor successor)) (recursive (chain (transpose successor) successor) successor equal)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3559848539880477,
            "num_unique_values": 126,
            "num_values_explored": 259,
            "solution": "(transpose (disjunction (recursive successor (transpose successor) successor) (recursive (chain successor (chain successor successor)) zero (transpose successor))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True, False, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False, False, False,  True, False,  True, False,  True,\n        False],\n       [ True, False, False, False, False,  True, False,  True, False,\n         True],\n       [ True, False, False, False, False, False,  True, False,  True,\n        False]])],\n    solution=(transpose (disjunction (recursive successor (transpose successor) successor) (recursive (chain successor (chain successor successor)) zero (transpose successor))))\n)",
            "task_solution": "(transpose (disjunction (recursive successor (transpose successor) successor) (recursive (chain successor (chain successor successor)) zero (transpose successor))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.8019798399764113,
            "num_unique_values": 279,
            "num_values_explored": 585,
            "solution": "(recursive (transpose (disjunction successor (chain successor successor))) successor (recursive successor (recursive equal (chain successor successor) successor) (chain successor successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False]])],\n    solution=(transpose (chain successor (chain (disjunction successor equal) (recursive equal (recursive equal (chain successor successor) successor) successor))))\n)",
            "task_solution": "(transpose (chain successor (chain (disjunction successor equal) (recursive equal (recursive equal (chain successor successor) successor) successor))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.32441440399270505,
            "num_unique_values": 106,
            "num_values_explored": 211,
            "solution": "(disjunction zero (chain (recursive (recursive successor successor (transpose successor)) equal (chain successor (chain successor successor))) successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True,  True, False,  True,  True, False,\n         True],\n       [False,  True,  True, False,  True,  True, False,  True,  True,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction zero (chain (recursive (recursive successor successor (transpose successor)) equal (chain successor (chain successor successor))) successor))\n)",
            "task_solution": "(disjunction zero (chain (recursive (recursive successor successor (transpose successor)) equal (chain successor (chain successor successor))) successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.625780614966061,
            "num_unique_values": 227,
            "num_values_explored": 490,
            "solution": "(disjunction equal (recursive successor (transpose (chain successor (chain successor (chain successor successor)))) (transpose (disjunction successor equal))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True, False,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True, False,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True, False,  True,  True,\n        False],\n       [False,  True,  True,  True, False,  True,  True, False,  True,\n         True],\n       [False, False,  True,  True,  True, False,  True,  True, False,\n         True]])],\n    solution=(disjunction equal (recursive successor (transpose (chain successor (chain successor (chain successor successor)))) (transpose (disjunction successor equal))))\n)",
            "task_solution": "(disjunction equal (recursive successor (transpose (chain successor (chain successor (chain successor successor)))) (transpose (disjunction successor equal))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.35309877002146095,
            "num_unique_values": 137,
            "num_values_explored": 275,
            "solution": "(chain (recursive (transpose successor) (recursive successor successor equal) (recursive successor successor (transpose (chain successor successor)))) successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True, False,  True,  True, False,  True,  True,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (recursive (transpose successor) (recursive successor successor equal) (recursive successor successor (transpose (chain successor successor)))) successor)\n)",
            "task_solution": "(chain (recursive (transpose successor) (recursive successor successor equal) (recursive successor successor (transpose (chain successor successor)))) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3538791490136646,
            "num_unique_values": 137,
            "num_values_explored": 265,
            "solution": "(chain (transpose successor) (disjunction zero (chain (recursive successor successor (recursive equal (chain successor successor) successor)) successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (transpose successor) (disjunction zero (chain (recursive successor successor (recursive equal (chain successor successor) successor)) successor)))\n)",
            "task_solution": "(chain (transpose successor) (disjunction zero (chain (recursive successor successor (recursive equal (chain successor successor) successor)) successor)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.29366878600558266,
            "num_unique_values": 117,
            "num_values_explored": 221,
            "solution": "(recursive (recursive successor zero (transpose (chain successor successor))) (transpose successor) (recursive successor (chain successor successor) successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False]])],\n    solution=(recursive (recursive successor zero (transpose (chain successor successor))) (transpose successor) (recursive successor (chain successor successor) successor))\n)",
            "task_solution": "(recursive (recursive successor zero (transpose (chain successor successor))) (transpose successor) (recursive successor (chain successor successor) successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3374141050153412,
            "num_unique_values": 116,
            "num_values_explored": 244,
            "solution": "(recursive (recursive (chain (recursive successor equal (chain successor successor)) zero) (transpose successor) (transpose successor)) (transpose successor) (chain (transpose successor) successor))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (chain (recursive successor equal (chain successor successor)) zero) (recursive (transpose successor) equal successor) (transpose successor))\n)",
            "task_solution": "(recursive (chain (recursive successor equal (chain successor successor)) zero) (recursive (transpose successor) equal successor) (transpose successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.2777667700429447,
            "num_unique_values": 97,
            "num_values_explored": 217,
            "solution": "(chain (disjunction zero (chain (recursive (transpose successor) (disjunction (transpose successor) successor) zero) (chain successor successor))) successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False,  True, False, False, False,  True, False,\n        False],\n       [False, False, False,  True, False, False, False, False,  True,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n         True],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction zero (chain (recursive (transpose successor) (disjunction successor (transpose successor)) zero) (chain successor successor))) successor)\n)",
            "task_solution": "(chain (disjunction zero (chain (recursive (transpose successor) (disjunction successor (transpose successor)) zero) (chain successor successor))) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3931984140072018,
            "num_unique_values": 163,
            "num_values_explored": 285,
            "solution": "(recursive (recursive equal (recursive successor successor (recursive successor successor (transpose successor))) (transpose (chain successor successor))) (chain successor successor) equal)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (disjunction equal (recursive successor successor (recursive successor successor (transpose successor)))) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive equal (disjunction equal (recursive successor successor (recursive successor successor (transpose successor)))) (transpose (chain successor successor)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3482912000035867,
            "num_unique_values": 137,
            "num_values_explored": 261,
            "solution": "(chain successor (transpose (chain (recursive (recursive successor successor (transpose successor)) (transpose (chain successor successor)) successor) successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False,  True,  True, False,  True,\n         True],\n       [ True, False, False,  True,  True, False,  True,  True,  True,\n         True],\n       [False,  True,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (transpose (chain (recursive (recursive successor successor (transpose successor)) (transpose (chain successor successor)) successor) successor)))\n)",
            "task_solution": "(chain successor (transpose (chain (recursive (recursive successor successor (transpose successor)) (transpose (chain successor successor)) successor) successor)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.48550168599467725,
            "num_unique_values": 177,
            "num_values_explored": 376,
            "solution": "(chain (recursive (chain (transpose successor) zero) (disjunction successor (transpose successor)) (transpose (chain successor (chain successor successor)))) (chain successor successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (chain successor (recursive (transpose zero) (transpose (chain successor (chain successor successor))) (disjunction successor (transpose successor)))))\n)",
            "task_solution": "(transpose (chain successor (recursive (transpose zero) (transpose (chain successor (chain successor successor))) (disjunction successor (transpose successor)))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.37561446701874956,
            "num_unique_values": 147,
            "num_values_explored": 272,
            "solution": "(disjunction zero (chain (recursive (transpose (chain successor (disjunction (chain successor successor) equal))) (disjunction successor (transpose successor)) zero) successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False, False, False,  True, False,  True, False,\n        False],\n       [False,  True, False, False, False, False,  True, False,  True,\n        False],\n       [False,  True, False, False, False, False, False,  True, False,\n         True]])],\n    solution=(disjunction equal (chain (recursive (transpose (chain successor (chain successor successor))) (disjunction successor (transpose successor)) zero) successor))\n)",
            "task_solution": "(disjunction equal (chain (recursive (transpose (chain successor (chain successor successor))) (disjunction successor (transpose successor)) zero) successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.41250553901772946,
            "num_unique_values": 166,
            "num_values_explored": 301,
            "solution": "(transpose (chain (recursive (recursive successor successor (transpose successor)) (transpose (disjunction successor equal)) (chain successor successor)) successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False]])],\n    solution=(transpose (chain (recursive (recursive successor successor (transpose successor)) (transpose (disjunction successor equal)) (chain successor successor)) successor))\n)",
            "task_solution": "(transpose (chain (recursive (recursive successor successor (transpose successor)) (transpose (disjunction successor equal)) (chain successor successor)) successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.2592506279470399,
            "num_unique_values": 104,
            "num_values_explored": 192,
            "solution": "(chain (recursive (disjunction successor equal) (recursive successor zero (transpose successor)) (transpose (chain successor successor))) (chain (transpose successor) (chain successor successor)))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True, False,  True,  True, False,  True,\n         True],\n       [False, False, False,  True,  True, False,  True,  True, False,\n         True],\n       [False, False, False, False,  True,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True, False,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (transpose (disjunction successor equal)) (chain successor successor)) (disjunction zero successor) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (chain (transpose (disjunction successor equal)) (chain successor successor)) (disjunction zero successor) (transpose (chain successor successor)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.37539654003921896,
            "num_unique_values": 138,
            "num_values_explored": 259,
            "solution": "(chain (recursive (transpose (chain (recursive successor equal successor) (chain successor successor))) successor zero) (disjunction successor equal))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True]])],\n    solution=(chain (recursive (transpose (chain (recursive successor equal successor) (chain successor successor))) successor zero) (disjunction successor equal))\n)",
            "task_solution": "(chain (recursive (transpose (chain (recursive successor equal successor) (chain successor successor))) successor zero) (disjunction successor equal))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.33644009998533875,
            "num_unique_values": 116,
            "num_values_explored": 232,
            "solution": "(recursive (chain successor (chain (recursive equal (transpose successor) zero) successor)) (transpose successor) (transpose (chain successor successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(recursive (chain successor (chain (recursive equal (transpose successor) zero) successor)) (transpose successor) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (chain successor (chain (recursive equal (transpose successor) zero) successor)) (transpose successor) (transpose (chain successor successor)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3407905549975112,
            "num_unique_values": 124,
            "num_values_explored": 238,
            "solution": "(recursive (transpose (chain (disjunction zero successor) (disjunction successor (transpose successor)))) successor (transpose (chain (disjunction zero successor) successor)))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False,  True,  True, False,\n         True],\n       [ True,  True,  True, False,  True,  True, False,  True,  True,\n        False],\n       [ True, False,  True,  True, False,  True,  True, False,  True,\n         True],\n       [False,  True, False,  True,  True, False,  True,  True, False,\n         True],\n       [False, False,  True, False,  True,  True, False,  True,  True,\n        False],\n       [False, False, False,  True, False,  True,  True, False,  True,\n         True],\n       [False, False, False, False,  True, False,  True,  True, False,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain successor (disjunction successor (transpose successor)))) successor (recursive (transpose (chain successor successor)) successor zero))\n)",
            "task_solution": "(recursive (transpose (chain successor (disjunction successor (transpose successor)))) successor (recursive (transpose (chain successor successor)) successor zero))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.23660831101005897,
            "num_unique_values": 84,
            "num_values_explored": 167,
            "solution": "(recursive (disjunction (transpose successor) (chain zero (chain successor successor))) (recursive zero (transpose successor) (transpose successor)) successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (disjunction (transpose successor) (chain zero (chain successor successor))) (recursive zero (transpose successor) (transpose successor)) successor)\n)",
            "task_solution": "(recursive (disjunction (transpose successor) (chain zero (chain successor successor))) (recursive zero (transpose successor) (transpose successor)) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3687547140289098,
            "num_unique_values": 136,
            "num_values_explored": 267,
            "solution": "(chain successor (recursive (disjunction equal (disjunction (transpose successor) (chain successor (recursive successor equal successor)))) successor (recursive successor equal successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (disjunction equal (disjunction (transpose successor) (recursive (chain successor successor) equal (recursive successor equal successor)))))\n)",
            "task_solution": "(chain successor (disjunction equal (disjunction (transpose successor) (recursive (chain successor successor) equal (recursive successor equal successor)))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.2616433529765345,
            "num_unique_values": 100,
            "num_values_explored": 198,
            "solution": "(chain (recursive successor (disjunction zero (chain successor (chain successor successor))) (disjunction successor (transpose successor))) (transpose successor))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor (chain (disjunction zero successor) (chain successor successor)) (disjunction successor (transpose successor))) (transpose successor))\n)",
            "task_solution": "(chain (recursive successor (chain (disjunction zero successor) (chain successor successor)) (disjunction successor (transpose successor))) (transpose successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3075905579607934,
            "num_unique_values": 106,
            "num_values_explored": 224,
            "solution": "(disjunction (chain zero successor) (transpose (chain (disjunction zero successor) (recursive (chain successor successor) successor (transpose successor)))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False]])],\n    solution=(disjunction (chain zero successor) (transpose (chain (disjunction zero successor) (recursive (chain successor successor) successor (transpose successor)))))\n)",
            "task_solution": "(disjunction (chain zero successor) (transpose (chain (disjunction zero successor) (recursive (chain successor successor) successor (transpose successor)))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.27605373901315033,
            "num_unique_values": 113,
            "num_values_explored": 211,
            "solution": "(disjunction zero (chain (transpose (disjunction successor (recursive equal (transpose successor) (chain zero successor)))) (disjunction successor (transpose successor))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True]])],\n    solution=(disjunction equal (recursive (disjunction successor (transpose (chain successor (disjunction successor equal)))) (chain zero successor) (transpose successor)))\n)",
            "task_solution": "(disjunction equal (recursive (disjunction successor (transpose (chain successor (disjunction successor equal)))) (chain zero successor) (transpose successor)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.6947635950054973,
            "num_unique_values": 201,
            "num_values_explored": 484,
            "solution": "(recursive (recursive (disjunction (transpose successor) (chain successor (chain successor successor))) equal (chain zero successor)) (disjunction successor (transpose successor)) successor)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(chain (disjunction (chain successor successor) (transpose (chain successor successor))) (recursive successor (transpose (disjunction zero successor)) successor))\n)",
            "task_solution": "(chain (disjunction (chain successor successor) (transpose (chain successor successor))) (recursive successor (transpose (disjunction zero successor)) successor))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 6.3326810359722,
            "num_unique_values": 1056,
            "num_values_explored": 6062,
            "solution": "(disjunction zero (chain zero (chain successor (chain successor (chain (disjunction (chain successor successor) equal) (chain successor successor))))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain zero (recursive equal (disjunction (transpose successor) (chain zero successor)) (transpose (chain successor (chain successor successor)))))\n)",
            "task_solution": "(chain zero (recursive equal (disjunction (transpose successor) (chain zero successor)) (transpose (chain successor (chain successor successor)))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3802164570079185,
            "num_unique_values": 136,
            "num_values_explored": 283,
            "solution": "(chain (recursive (transpose successor) (transpose (recursive (recursive successor (transpose successor) successor) (disjunction zero successor) zero)) (chain successor successor)) successor)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True,  True,\n        False],\n       [False,  True,  True,  True, False,  True,  True, False, False,\n         True]])],\n    solution=(chain (recursive (transpose successor) (recursive (transpose successor) (disjunction zero successor) (transpose successor)) (chain successor successor)) successor)\n)",
            "task_solution": "(chain (recursive (transpose successor) (recursive (transpose successor) (disjunction zero successor) (transpose successor)) (chain successor successor)) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.32702877902192995,
            "num_unique_values": 126,
            "num_values_explored": 253,
            "solution": "(transpose (chain (disjunction successor equal) (recursive successor (transpose successor) (disjunction zero (chain successor (chain successor successor))))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False, False,  True,  True, False, False,  True,  True,\n        False],\n       [ True,  True, False, False,  True,  True, False, False,  True,\n         True],\n       [False,  True,  True, False, False,  True,  True, False, False,\n        False],\n       [False, False,  True,  True, False, False,  True,  True, False,\n        False],\n       [False, False, False,  True,  True, False, False,  True,  True,\n        False],\n       [False, False, False, False,  True,  True, False, False,  True,\n         True],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False]])],\n    solution=(transpose (chain (disjunction successor equal) (recursive successor (transpose successor) (disjunction zero (chain successor (chain successor successor))))))\n)",
            "task_solution": "(transpose (chain (disjunction successor equal) (recursive successor (transpose successor) (disjunction zero (chain successor (chain successor successor))))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.48439084796700627,
            "num_unique_values": 178,
            "num_values_explored": 381,
            "solution": "(chain successor (chain successor (recursive (disjunction zero successor) (transpose successor) (transpose (disjunction zero (chain successor successor))))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True,  True, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (recursive (disjunction zero successor) (transpose successor) (transpose (disjunction zero (chain successor successor))))))\n)",
            "task_solution": "(chain successor (chain successor (recursive (disjunction zero successor) (transpose successor) (transpose (disjunction zero (chain successor successor))))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.27648797596339136,
            "num_unique_values": 91,
            "num_values_explored": 184,
            "solution": "(transpose (recursive (chain (recursive successor (transpose successor) successor) (chain (disjunction zero successor) successor)) zero (transpose successor)))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True, False, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False, False, False,  True, False,  True, False,  True,\n        False],\n       [ True, False, False, False, False,  True, False,  True, False,\n         True],\n       [ True, False, False, False, False, False,  True, False,  True,\n        False]])],\n    solution=(recursive (transpose (chain (recursive successor (transpose successor) successor) (chain (disjunction zero successor) successor))) (transpose successor) zero)\n)",
            "task_solution": "(recursive (transpose (chain (recursive successor (transpose successor) successor) (chain (disjunction zero successor) successor))) (transpose successor) zero)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.29529784503392875,
            "num_unique_values": 96,
            "num_values_explored": 210,
            "solution": "(chain (disjunction (chain successor (chain successor successor)) (recursive equal (transpose successor) (recursive successor successor equal))) successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True, False, False,  True, False, False,\n        False],\n       [False,  True,  True, False,  True, False, False,  True, False,\n        False],\n       [False,  True,  True,  True, False,  True, False, False,  True,\n        False],\n       [False,  True,  True,  True,  True, False,  True, False, False,\n         True],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(chain (disjunction (chain successor (chain successor successor)) (recursive equal (transpose successor) (recursive successor successor equal))) successor)\n)",
            "task_solution": "(chain (disjunction (chain successor (chain successor successor)) (recursive equal (transpose successor) (recursive successor successor equal))) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.299615706957411,
            "num_unique_values": 106,
            "num_values_explored": 221,
            "solution": "(disjunction zero (disjunction (transpose successor) (chain (disjunction successor (transpose (recursive successor successor equal))) (chain successor successor))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(disjunction zero (disjunction (transpose successor) (chain (disjunction successor (recursive (transpose successor) equal successor)) (chain successor successor))))\n)",
            "task_solution": "(disjunction zero (disjunction (transpose successor) (chain (disjunction successor (recursive (transpose successor) equal successor)) (chain successor successor))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.36285282496828586,
            "num_unique_values": 136,
            "num_values_explored": 251,
            "solution": "(chain (transpose (chain successor (disjunction equal (chain successor (recursive (chain successor successor) (transpose successor) successor))))) successor)",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True,  True,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True,  True,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True]])],\n    solution=(chain (transpose (chain successor (disjunction equal (chain successor (recursive (chain successor successor) (transpose successor) successor))))) successor)\n)",
            "task_solution": "(chain (transpose (chain successor (disjunction equal (chain successor (recursive (chain successor successor) (transpose successor) successor))))) successor)",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3306843959726393,
            "num_unique_values": 119,
            "num_values_explored": 243,
            "solution": "(recursive (chain (recursive (chain successor successor) (transpose (disjunction zero successor)) successor) zero) successor (transpose (chain successor successor)))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False, False, False,  True,\n        False],\n       [ True, False,  True, False, False, False,  True, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False,  True,\n        False],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False,  True,\n        False],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (transpose (chain zero (disjunction successor (recursive equal successor (transpose successor))))) successor (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (transpose (chain zero (disjunction successor (recursive equal successor (transpose successor))))) successor (transpose (chain successor successor)))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.3715728829847649,
            "num_unique_values": 137,
            "num_values_explored": 271,
            "solution": "(chain (transpose (disjunction successor equal)) (disjunction equal (recursive (chain (disjunction successor (transpose successor)) (chain successor successor)) (transpose successor) successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(disjunction equal (disjunction (transpose successor) (recursive (chain successor (chain successor successor)) (transpose successor) (disjunction successor equal))))\n)",
            "task_solution": "(disjunction equal (disjunction (transpose successor) (recursive (chain successor (chain successor successor)) (transpose successor) (disjunction successor equal))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.31818003801163286,
            "num_unique_values": 116,
            "num_values_explored": 239,
            "solution": "(recursive (disjunction successor (transpose (chain successor successor))) (transpose successor) (chain zero (chain successor (disjunction successor equal))))",
            "solution_weight": 16,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False, False,  True, False, False, False,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(recursive (disjunction successor (transpose (chain successor successor))) (transpose successor) (chain zero (chain successor (disjunction successor equal))))\n)",
            "task_solution": "(recursive (disjunction successor (transpose (chain successor successor))) (transpose successor) (chain zero (chain successor (disjunction successor equal))))",
            "task_solution_weight": 16
        },
        {
            "elapsed_time": 0.2706466290401295,
            "num_unique_values": 114,
            "num_values_explored": 208,
            "solution": "(disjunction (chain (disjunction equal (chain successor successor)) successor) (chain (disjunction zero successor) (recursive successor successor (transpose (chain successor successor)))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True, False,  True,  True,\n        False],\n       [False, False,  True,  True,  True, False,  True, False, False,\n         True],\n       [False, False, False,  True,  True,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction equal (chain (disjunction zero successor) (disjunction successor (recursive equal successor (transpose (chain successor successor)))))) successor)\n)",
            "task_solution": "(chain (disjunction equal (chain (disjunction zero successor) (disjunction successor (recursive equal successor (transpose (chain successor successor)))))) successor)",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.2582216719747521,
            "num_unique_values": 102,
            "num_values_explored": 200,
            "solution": "(chain (transpose (chain (recursive successor successor (chain successor successor)) successor)) (recursive successor zero (transpose (chain successor successor))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n         True],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (transpose (chain (recursive successor successor (chain successor successor)) successor)) (recursive successor zero (transpose (chain successor successor))))\n)",
            "task_solution": "(chain (transpose (chain (recursive successor successor (chain successor successor)) successor)) (recursive successor zero (transpose (chain successor successor))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.31665772100677714,
            "num_unique_values": 118,
            "num_values_explored": 234,
            "solution": "(recursive (transpose (chain successor successor)) (recursive (transpose successor) (chain successor successor) successor) (chain (disjunction zero successor) successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False,  True, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain successor successor)) (recursive (transpose successor) (chain successor successor) successor) (chain (disjunction zero successor) successor))\n)",
            "task_solution": "(recursive (transpose (chain successor successor)) (recursive (transpose successor) (chain successor successor) successor) (chain (disjunction zero successor) successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.27665180299663916,
            "num_unique_values": 96,
            "num_values_explored": 209,
            "solution": "(chain (disjunction (chain successor (chain successor successor)) (recursive successor (transpose successor) (disjunction zero successor))) (disjunction zero successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(chain (recursive (chain successor (disjunction equal (chain successor successor))) (transpose successor) (disjunction zero successor)) (disjunction zero successor))\n)",
            "task_solution": "(chain (recursive (chain successor (disjunction equal (chain successor successor))) (transpose successor) (disjunction zero successor)) (disjunction zero successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.37739525496726856,
            "num_unique_values": 146,
            "num_values_explored": 288,
            "solution": "(disjunction zero (disjunction (transpose successor) (chain successor (recursive equal (transpose (chain successor successor)) (recursive equal equal successor)))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction zero (disjunction (transpose successor) (chain successor (recursive equal (transpose (chain successor successor)) (recursive equal equal successor)))))\n)",
            "task_solution": "(disjunction zero (disjunction (transpose successor) (chain successor (recursive equal (transpose (chain successor successor)) (recursive equal equal successor)))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.2643128240015358,
            "num_unique_values": 99,
            "num_values_explored": 197,
            "solution": "(chain (transpose (chain successor (disjunction equal (chain successor successor)))) (recursive successor (disjunction zero (chain successor successor)) successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True]])],\n    solution=(chain (transpose (chain successor (disjunction equal (chain successor successor)))) (recursive successor (disjunction zero (chain successor successor)) successor))\n)",
            "task_solution": "(chain (transpose (chain successor (disjunction equal (chain successor successor)))) (recursive successor (disjunction zero (chain successor successor)) successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.339147939987015,
            "num_unique_values": 118,
            "num_values_explored": 262,
            "solution": "(recursive (disjunction successor (transpose (chain (disjunction zero successor) (disjunction (transpose successor) successor)))) (chain zero successor) (transpose successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True, False,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True, False,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True, False,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(recursive (disjunction successor (transpose (chain (disjunction zero successor) (disjunction successor (transpose successor))))) (chain zero successor) (transpose successor))\n)",
            "task_solution": "(recursive (disjunction successor (transpose (chain (disjunction zero successor) (disjunction successor (transpose successor))))) (chain zero successor) (transpose successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.3722323859692551,
            "num_unique_values": 137,
            "num_values_explored": 266,
            "solution": "(chain (recursive (chain (transpose successor) (recursive successor successor (recursive equal successor (transpose successor)))) successor (transpose successor)) successor)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (transpose successor) (chain (recursive successor successor (recursive equal successor (transpose successor))) successor)) successor (transpose successor))\n)",
            "task_solution": "(recursive (chain (transpose successor) (chain (recursive successor successor (recursive equal successor (transpose successor))) successor)) successor (transpose successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.5133941780077294,
            "num_unique_values": 186,
            "num_values_explored": 352,
            "solution": "(disjunction (chain successor (chain successor successor)) (transpose (chain successor (chain successor (chain (recursive successor equal successor) successor)))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n         True],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False]])],\n    solution=(disjunction (chain successor (chain successor successor)) (transpose (chain successor (chain successor (chain (recursive successor equal successor) successor)))))\n)",
            "task_solution": "(disjunction (chain successor (chain successor successor)) (transpose (chain successor (chain successor (chain (recursive successor equal successor) successor)))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 71.94013422797434,
            "num_unique_values": 4377,
            "num_values_explored": 50036,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain successor (chain successor (recursive (transpose zero) (transpose successor) (recursive equal successor (chain successor successor))))))\n)",
            "task_solution": "(disjunction equal (chain successor (chain successor (recursive (transpose zero) (transpose successor) (recursive equal successor (chain successor successor))))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.3485204610042274,
            "num_unique_values": 127,
            "num_values_explored": 246,
            "solution": "(transpose (disjunction zero (chain (recursive successor successor (transpose successor)) (disjunction successor (recursive zero (transpose successor) (transpose successor))))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False]])],\n    solution=(transpose (disjunction zero (chain (recursive successor successor (transpose successor)) (disjunction successor (recursive zero (transpose successor) (transpose successor))))))\n)",
            "task_solution": "(transpose (disjunction zero (chain (recursive successor successor (transpose successor)) (disjunction successor (recursive zero (transpose successor) (transpose successor))))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.36534941801801324,
            "num_unique_values": 116,
            "num_values_explored": 260,
            "solution": "(recursive (transpose (disjunction zero (chain successor successor))) equal (transpose (chain zero (recursive (chain successor successor) successor equal))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(recursive (transpose (disjunction zero (chain successor successor))) equal (transpose (chain zero (recursive (chain successor successor) successor equal))))\n)",
            "task_solution": "(recursive (transpose (disjunction zero (chain successor successor))) equal (transpose (chain zero (recursive (chain successor successor) successor equal))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.5022097780019976,
            "num_unique_values": 177,
            "num_values_explored": 355,
            "solution": "(chain (transpose (disjunction successor (transpose (recursive successor (recursive zero zero (transpose (chain (disjunction zero successor) successor))) successor)))) successor)",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (recursive (disjunction successor (transpose successor)) (recursive zero zero (transpose (chain successor (disjunction successor equal)))) successor) successor)\n)",
            "task_solution": "(chain (recursive (disjunction successor (transpose successor)) (recursive zero zero (transpose (chain successor (disjunction successor equal)))) successor) successor)",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.33742924203397706,
            "num_unique_values": 126,
            "num_values_explored": 249,
            "solution": "(transpose (chain (recursive (recursive equal (transpose successor) successor) successor (disjunction successor equal)) (chain (disjunction zero (chain successor successor)) successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (recursive (transpose (chain (disjunction zero (chain successor successor)) successor)) equal (transpose (chain successor successor))) equal successor)\n)",
            "task_solution": "(recursive (recursive (transpose (chain (disjunction zero (chain successor successor)) successor)) equal (transpose (chain successor successor))) equal successor)",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.2866271379753016,
            "num_unique_values": 102,
            "num_values_explored": 200,
            "solution": "(chain (disjunction successor (transpose (chain (disjunction zero successor) successor))) (chain (recursive (chain successor successor) zero successor) successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction successor (transpose (chain (disjunction zero successor) successor))) (chain (recursive (chain successor successor) zero successor) successor))\n)",
            "task_solution": "(chain (disjunction successor (transpose (chain (disjunction zero successor) successor))) (chain (recursive (chain successor successor) zero successor) successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.3951071839546785,
            "num_unique_values": 146,
            "num_values_explored": 272,
            "solution": "(disjunction successor (transpose (chain (disjunction successor (transpose successor)) (recursive successor (recursive successor (chain successor successor) successor) successor))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True]])],\n    solution=(disjunction successor (transpose (chain (disjunction successor (transpose successor)) (recursive successor (recursive successor (chain successor successor) successor) successor))))\n)",
            "task_solution": "(disjunction successor (transpose (chain (disjunction successor (transpose successor)) (recursive successor (recursive successor (chain successor successor) successor) successor))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.2824241369962692,
            "num_unique_values": 108,
            "num_values_explored": 215,
            "solution": "(disjunction (recursive successor successor (transpose successor)) (recursive (recursive (transpose successor) (chain successor successor) equal) (transpose successor) (chain successor successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True, False,  True,  True, False,\n         True],\n       [ True,  True,  True, False,  True,  True, False, False,  True,\n        False]])],\n    solution=(recursive (recursive (transpose successor) successor (transpose successor)) (transpose successor) (chain successor (chain successor (chain successor (transpose successor)))))\n)",
            "task_solution": "(recursive (recursive (transpose successor) successor (transpose successor)) (transpose successor) (chain successor (chain successor (chain successor (transpose successor)))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.2805863510002382,
            "num_unique_values": 108,
            "num_values_explored": 209,
            "solution": "(disjunction successor (chain (disjunction successor equal) (recursive (transpose (recursive zero (transpose successor) (transpose successor))) (transpose successor) successor)))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True, False, False,  True, False, False,\n        False],\n       [False,  True,  True, False, False,  True,  True,  True, False,\n        False],\n       [ True,  True, False, False,  True,  True, False, False,  True,\n        False],\n       [ True, False, False,  True,  True, False, False,  True,  True,\n         True],\n       [False, False, False,  True, False, False, False,  True, False,\n        False]])],\n    solution=(disjunction successor (chain (disjunction successor equal) (recursive (transpose (recursive zero (transpose successor) (transpose successor))) (transpose successor) successor)))\n)",
            "task_solution": "(disjunction successor (chain (disjunction successor equal) (recursive (transpose (recursive zero (transpose successor) (transpose successor))) (transpose successor) successor)))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.3965017619775608,
            "num_unique_values": 136,
            "num_values_explored": 272,
            "solution": "(chain (disjunction successor (transpose (chain successor (recursive zero (transpose successor) (transpose successor))))) (chain successor (disjunction equal (chain successor successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction successor (transpose successor)) (chain successor (disjunction (chain successor successor) (recursive zero (transpose successor) (transpose successor)))))\n)",
            "task_solution": "(chain (disjunction successor (transpose successor)) (chain successor (disjunction (chain successor successor) (recursive zero (transpose successor) (transpose successor)))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 63.99053980602184,
            "num_unique_values": 3223,
            "num_values_explored": 50016,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (recursive (disjunction zero successor) equal (recursive (recursive equal successor (transpose successor)) (transpose successor) zero)) successor zero)\n)",
            "task_solution": "(recursive (recursive (disjunction zero successor) equal (recursive (recursive equal successor (transpose successor)) (transpose successor) zero)) successor zero)",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.41676604602253065,
            "num_unique_values": 163,
            "num_values_explored": 302,
            "solution": "(recursive successor (transpose (chain (recursive zero zero (transpose successor)) successor)) (recursive (chain successor successor) successor (chain successor successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction successor (transpose (chain (recursive successor successor (chain successor successor)) (chain (recursive zero zero (transpose successor)) successor))))\n)",
            "task_solution": "(disjunction successor (transpose (chain (recursive successor successor (chain successor successor)) (chain (recursive zero zero (transpose successor)) successor))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.41231562197208405,
            "num_unique_values": 146,
            "num_values_explored": 306,
            "solution": "(disjunction (recursive equal successor (chain successor successor)) (recursive (chain successor (chain successor (chain successor successor))) successor equal))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True, False, False, False,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True, False, False, False,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True, False, False, False,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True, False, False, False,  True,\n         True],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n         True],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction (recursive equal successor (chain successor successor)) (recursive (chain successor (chain successor (chain successor successor))) successor equal))\n)",
            "task_solution": "(disjunction (recursive equal successor (chain successor successor)) (recursive (chain successor (chain successor (chain successor successor))) successor equal))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 2.2054314599954523,
            "num_unique_values": 476,
            "num_values_explored": 1858,
            "solution": "(recursive (recursive (recursive (chain (transpose successor) (disjunction zero successor)) (transpose successor) zero) successor (chain successor successor)) successor (transpose successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True, False, False,  True,  True,  True,  True,\n         True],\n       [ True,  True, False, False, False, False, False,  True,  True,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (recursive (recursive (chain (transpose successor) successor) successor (chain successor successor)) (transpose successor) zero) successor (transpose successor))\n)",
            "task_solution": "(recursive (recursive (recursive (chain (transpose successor) successor) successor (chain successor successor)) (transpose successor) zero) successor (transpose successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.3706966109457426,
            "num_unique_values": 150,
            "num_values_explored": 279,
            "solution": "(disjunction successor (chain (recursive successor (recursive equal (transpose successor) successor) (transpose (chain successor (chain successor successor)))) successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False,  True,  True, False, False,  True, False, False,\n         True],\n       [False, False, False,  True,  True,  True, False,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True, False,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n         True]])],\n    solution=(chain (disjunction equal (recursive successor (recursive equal (transpose successor) successor) (transpose (chain successor (chain successor successor))))) successor)\n)",
            "task_solution": "(chain (disjunction equal (recursive successor (recursive equal (transpose successor) successor) (transpose (chain successor (chain successor successor))))) successor)",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.6090228779939935,
            "num_unique_values": 202,
            "num_values_explored": 503,
            "solution": "(recursive (chain successor (recursive successor (transpose successor) successor)) (chain (recursive successor (transpose successor) successor) zero) (transpose successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (recursive successor (transpose successor) successor)) (chain (recursive successor (transpose successor) successor) zero) (transpose successor))\n)",
            "task_solution": "(recursive (chain successor (recursive successor (transpose successor) successor)) (chain (recursive successor (transpose successor) successor) zero) (transpose successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.2626910720136948,
            "num_unique_values": 102,
            "num_values_explored": 204,
            "solution": "(chain (recursive (transpose (chain successor successor)) (recursive equal successor (chain successor successor)) (transpose (chain successor successor))) successor)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (chain (transpose (chain successor successor)) successor) (recursive equal successor (chain successor successor)) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (chain (transpose (chain successor successor)) successor) (recursive equal successor (chain successor successor)) (transpose (chain successor successor)))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.6126127709867433,
            "num_unique_values": 216,
            "num_values_explored": 472,
            "solution": "(chain successor (transpose (chain successor (chain successor (chain successor (chain successor (chain (recursive successor equal successor) successor)))))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (transpose (chain successor (chain successor (chain successor (chain successor (chain (recursive successor equal successor) successor)))))))\n)",
            "task_solution": "(chain successor (transpose (chain successor (chain successor (chain successor (chain successor (chain (recursive successor equal successor) successor)))))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.49345939402701333,
            "num_unique_values": 197,
            "num_values_explored": 368,
            "solution": "(recursive equal (transpose (chain successor (disjunction successor (transpose (chain (disjunction zero successor) (chain successor successor)))))) (recursive successor successor equal))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n         True]])],\n    solution=(recursive equal (transpose (chain successor (disjunction successor (transpose (chain successor (chain successor successor)))))) (recursive successor successor equal))\n)",
            "task_solution": "(recursive equal (transpose (chain successor (disjunction successor (transpose (chain successor (chain successor successor)))))) (recursive successor successor equal))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.28362582402769476,
            "num_unique_values": 112,
            "num_values_explored": 210,
            "solution": "(disjunction (chain successor (transpose (chain successor successor))) (chain successor (recursive equal (recursive successor successor (chain successor successor)) (transpose successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (transpose (disjunction (chain successor successor) (recursive equal (transpose successor) (recursive successor successor (chain successor successor))))))\n)",
            "task_solution": "(chain successor (transpose (disjunction (chain successor successor) (recursive equal (transpose successor) (recursive successor successor (chain successor successor))))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 65.76660942903254,
            "num_unique_values": 4346,
            "num_values_explored": 50064,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal equal (recursive (transpose (recursive zero (transpose successor) (transpose successor))) (chain successor (chain successor successor)) successor))\n)",
            "task_solution": "(recursive equal equal (recursive (transpose (recursive zero (transpose successor) (transpose successor))) (chain successor (chain successor successor)) successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 70.25305050099269,
            "num_unique_values": 4544,
            "num_values_explored": 50072,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive successor (chain (recursive zero zero (recursive successor (transpose successor) successor)) successor) (transpose successor)) successor)\n)",
            "task_solution": "(recursive equal (recursive successor (chain (recursive zero zero (recursive successor (transpose successor) successor)) successor) (transpose successor)) successor)",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 61.88403065298917,
            "num_unique_values": 2809,
            "num_values_explored": 50003,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (transpose (chain successor (chain successor (chain (disjunction equal (recursive successor successor (chain successor successor))) successor)))))\n)",
            "task_solution": "(chain successor (transpose (chain successor (chain successor (chain (disjunction equal (recursive successor successor (chain successor successor))) successor)))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 1.4663276920327917,
            "num_unique_values": 389,
            "num_values_explored": 1189,
            "solution": "(disjunction (recursive successor (chain successor successor) successor) (chain (disjunction successor equal) (disjunction equal (chain (recursive successor equal successor) successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (disjunction successor equal) (disjunction (recursive equal (chain successor successor) successor) (chain (recursive successor equal successor) successor)))\n)",
            "task_solution": "(chain (disjunction successor equal) (disjunction (recursive equal (chain successor successor) successor) (chain (recursive successor equal successor) successor)))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.36494673101697117,
            "num_unique_values": 137,
            "num_values_explored": 274,
            "solution": "(chain (transpose (chain successor successor)) (disjunction zero (recursive successor (disjunction successor (transpose (chain successor successor))) (transpose successor))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (transpose (chain successor successor)) (disjunction zero (recursive successor (disjunction successor (transpose (chain successor successor))) (transpose successor))))\n)",
            "task_solution": "(chain (transpose (chain successor successor)) (disjunction zero (recursive successor (disjunction successor (transpose (chain successor successor))) (transpose successor))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.23489985399646685,
            "num_unique_values": 76,
            "num_values_explored": 167,
            "solution": "(recursive (disjunction (transpose successor) (recursive (chain successor successor) (chain successor successor) successor)) (transpose (chain successor successor)) equal)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (disjunction (transpose successor) (recursive (chain successor successor) (chain successor successor) successor)) (transpose (chain successor successor)) equal)\n)",
            "task_solution": "(recursive (disjunction (transpose successor) (recursive (chain successor successor) (chain successor successor) successor)) (transpose (chain successor successor)) equal)",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.579281362995971,
            "num_unique_values": 237,
            "num_values_explored": 422,
            "solution": "(recursive equal (transpose (chain successor (chain (disjunction equal (recursive successor equal (chain successor (chain successor successor)))) successor))) successor)",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n         True]])],\n    solution=(transpose (disjunction equal (chain successor (chain (recursive successor successor (recursive equal successor (transpose (chain successor successor)))) successor))))\n)",
            "task_solution": "(transpose (disjunction equal (chain successor (chain (recursive successor successor (recursive equal successor (transpose (chain successor successor)))) successor))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.4156767079839483,
            "num_unique_values": 157,
            "num_values_explored": 304,
            "solution": "(recursive (transpose (chain (disjunction zero (chain successor (chain successor successor))) successor)) (recursive successor successor equal) (transpose successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False]])],\n    solution=(recursive (transpose (chain (disjunction zero (chain successor (chain successor successor))) successor)) (recursive successor successor equal) (transpose successor))\n)",
            "task_solution": "(recursive (transpose (chain (disjunction zero (chain successor (chain successor successor))) successor)) (recursive successor successor equal) (transpose successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.4650666890083812,
            "num_unique_values": 188,
            "num_values_explored": 338,
            "solution": "(disjunction (chain successor successor) (transpose (chain (recursive successor successor (recursive equal successor (transpose (chain successor successor)))) successor)))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False]])],\n    solution=(disjunction (chain successor successor) (transpose (chain (recursive successor successor (recursive equal successor (transpose (chain successor successor)))) successor)))\n)",
            "task_solution": "(disjunction (chain successor successor) (transpose (chain (recursive successor successor (recursive equal successor (transpose (chain successor successor)))) successor)))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.2811414510360919,
            "num_unique_values": 108,
            "num_values_explored": 206,
            "solution": "(disjunction equal (chain (recursive (chain successor successor) (transpose successor) (disjunction successor (recursive equal (transpose successor) successor))) successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(disjunction equal (chain (recursive (chain successor successor) (transpose successor) (disjunction successor (recursive equal (transpose successor) successor))) successor))\n)",
            "task_solution": "(disjunction equal (chain (recursive (chain successor successor) (transpose successor) (disjunction successor (recursive equal (transpose successor) successor))) successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.9039141359971836,
            "num_unique_values": 317,
            "num_values_explored": 708,
            "solution": "(recursive successor successor (recursive (transpose successor) (disjunction successor (recursive equal (transpose successor) (transpose (chain successor successor)))) successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (recursive (transpose successor) (disjunction successor (recursive equal (transpose successor) (transpose (chain successor successor)))) successor))\n)",
            "task_solution": "(recursive successor successor (recursive (transpose successor) (disjunction successor (recursive equal (transpose successor) (transpose (chain successor successor)))) successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.3366545879980549,
            "num_unique_values": 128,
            "num_values_explored": 248,
            "solution": "(transpose (disjunction zero (chain successor (recursive successor (transpose (disjunction zero successor)) (transpose (disjunction equal (chain successor successor)))))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(transpose (disjunction zero (chain successor (recursive successor (transpose (disjunction zero successor)) (transpose (disjunction equal (chain successor successor)))))))\n)",
            "task_solution": "(transpose (disjunction zero (chain successor (recursive successor (transpose (disjunction zero successor)) (transpose (disjunction equal (chain successor successor)))))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.32801594102056697,
            "num_unique_values": 121,
            "num_values_explored": 241,
            "solution": "(recursive (recursive (transpose successor) (transpose successor) (chain successor (chain successor successor))) successor (disjunction zero (chain successor successor)))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True, False,  True,  True,  True, False, False,\n        False],\n       [ True, False,  True,  True, False, False,  True,  True, False,\n        False],\n       [ True, False, False, False,  True, False, False, False,  True,\n        False]])],\n    solution=(recursive (recursive (transpose successor) (transpose successor) (chain successor (chain successor successor))) successor (disjunction zero (chain successor successor)))\n)",
            "task_solution": "(recursive (recursive (transpose successor) (transpose successor) (chain successor (chain successor successor))) successor (disjunction zero (chain successor successor)))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.27362143399659544,
            "num_unique_values": 106,
            "num_values_explored": 212,
            "solution": "(disjunction equal (chain (recursive equal (recursive equal (chain successor successor) (disjunction successor equal)) (chain successor successor)) successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n         True]])],\n    solution=(disjunction equal (chain (recursive equal (recursive equal (chain successor successor) (disjunction successor equal)) (chain successor successor)) successor))\n)",
            "task_solution": "(disjunction equal (chain (recursive equal (recursive equal (chain successor successor) (disjunction successor equal)) (chain successor successor)) successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.2345159479882568,
            "num_unique_values": 79,
            "num_values_explored": 175,
            "solution": "(recursive (chain (transpose successor) (disjunction equal (chain successor successor))) successor (chain (recursive successor (disjunction zero successor) (transpose successor)) successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (chain (transpose successor) (disjunction equal (chain successor successor))) successor (recursive (chain successor successor) successor (transpose successor)))\n)",
            "task_solution": "(recursive (chain (transpose successor) (disjunction equal (chain successor successor))) successor (recursive (chain successor successor) successor (transpose successor)))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 69.07922160398448,
            "num_unique_values": 4843,
            "num_values_explored": 50097,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False,  True, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False,  True, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False,  True, False,\n        False],\n       [ True, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (recursive (disjunction successor (transpose (chain zero successor))) (disjunction zero successor) (transpose (chain successor successor))))\n)",
            "task_solution": "(recursive equal successor (recursive (disjunction successor (transpose (chain zero successor))) (disjunction zero successor) (transpose (chain successor successor))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.34950604900950566,
            "num_unique_values": 137,
            "num_values_explored": 253,
            "solution": "(chain (disjunction (recursive successor successor (transpose (chain successor successor))) (recursive equal (chain successor successor) successor)) (transpose successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (disjunction (recursive equal (chain successor successor) successor) (recursive successor successor (transpose (chain successor successor)))) (transpose successor))\n)",
            "task_solution": "(chain (disjunction (recursive equal (chain successor successor) successor) (recursive successor successor (transpose (chain successor successor)))) (transpose successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.3253293680027127,
            "num_unique_values": 118,
            "num_values_explored": 229,
            "solution": "(recursive (disjunction (transpose successor) (chain (recursive (chain zero successor) (recursive successor equal successor) successor) successor)) successor successor)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False, False, False,  True, False, False, False,\n        False],\n       [ True,  True, False, False, False, False,  True, False, False,\n        False],\n       [False,  True, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (disjunction (transpose successor) (chain (recursive (chain zero successor) (recursive successor equal successor) successor) successor)) successor successor)\n)",
            "task_solution": "(recursive (disjunction (transpose successor) (chain (recursive (chain zero successor) (recursive successor equal successor) successor) successor)) successor successor)",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.39033438998740166,
            "num_unique_values": 149,
            "num_values_explored": 278,
            "solution": "(disjunction equal (chain successor (disjunction equal (chain (recursive successor (transpose successor) successor) (chain successor (chain successor successor))))))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False,  True,  True, False,  True, False,  True, False, False,\n        False],\n       [False, False,  True,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False,  True,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True,  True,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True,  True,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True,  True,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction successor (disjunction equal (chain successor (chain (recursive successor (transpose successor) successor) (chain successor (chain successor successor))))))\n)",
            "task_solution": "(disjunction successor (disjunction equal (chain successor (chain (recursive successor (transpose successor) successor) (chain successor (chain successor successor))))))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.31831202300963923,
            "num_unique_values": 97,
            "num_values_explored": 216,
            "solution": "(chain (transpose (chain (disjunction (chain successor successor) equal) (recursive (chain successor successor) zero successor))) (disjunction zero successor))",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False]])],\n    solution=(chain (transpose (chain (disjunction equal (chain successor successor)) (recursive (chain successor successor) zero successor))) (disjunction zero successor))\n)",
            "task_solution": "(chain (transpose (chain (disjunction equal (chain successor successor)) (recursive (chain successor successor) zero successor))) (disjunction zero successor))",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.2524050520150922,
            "num_unique_values": 97,
            "num_values_explored": 197,
            "solution": "(chain (recursive (chain successor successor) (transpose (chain successor successor)) (chain successor (recursive equal (transpose successor) zero))) successor)",
            "solution_weight": 17,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (recursive (chain successor successor) (transpose (chain successor successor)) (recursive (disjunction zero successor) (transpose successor) zero)) successor)\n)",
            "task_solution": "(chain (recursive (chain successor successor) (transpose (chain successor successor)) (recursive (disjunction zero successor) (transpose successor) zero)) successor)",
            "task_solution_weight": 17
        },
        {
            "elapsed_time": 0.3639308460406028,
            "num_unique_values": 137,
            "num_values_explored": 275,
            "solution": "(chain (recursive equal zero (transpose successor)) (recursive equal successor (chain successor (recursive successor (recursive zero (transpose successor) (transpose successor)) successor))))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (recursive equal zero (transpose successor)) successor (chain successor (recursive successor (recursive zero (transpose successor) (transpose successor)) successor)))\n)",
            "task_solution": "(recursive (recursive equal zero (transpose successor)) successor (chain successor (recursive successor (recursive zero (transpose successor) (transpose successor)) successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 62.39906402700581,
            "num_unique_values": 3101,
            "num_values_explored": 50062,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True,  True, False, False, False,\n        False],\n       [False,  True,  True, False, False,  True,  True, False, False,\n        False],\n       [False, False,  True,  True, False, False,  True,  True, False,\n        False],\n       [False, False, False,  True, False, False, False,  True,  True,\n        False],\n       [ True, False, False, False,  True, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction equal (recursive successor (chain successor (chain successor (chain successor successor))) (recursive equal (chain successor successor) successor))))\n)",
            "task_solution": "(transpose (disjunction equal (recursive successor (chain successor (chain successor (chain successor successor))) (recursive equal (chain successor successor) successor))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.53892086900305,
            "num_unique_values": 196,
            "num_values_explored": 401,
            "solution": "(recursive (disjunction zero (chain (transpose successor) (chain zero (chain successor (chain successor (chain successor successor)))))) (transpose successor) successor)",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (disjunction zero (chain (transpose successor) (chain zero (chain successor (chain successor (chain successor successor)))))) (transpose successor) successor)\n)",
            "task_solution": "(recursive (disjunction zero (chain (transpose successor) (chain zero (chain successor (chain successor (chain successor successor)))))) (transpose successor) successor)",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.4136492790421471,
            "num_unique_values": 146,
            "num_values_explored": 311,
            "solution": "(disjunction (transpose successor) (chain (disjunction zero (chain successor successor)) (chain (recursive equal (transpose (chain successor successor)) zero) (disjunction zero successor))))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False, False, False,  True, False, False, False,\n        False],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False,  True, False,\n        False],\n       [False, False, False, False,  True, False, False, False,  True,\n        False],\n       [ True,  True, False, False, False,  True, False, False, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (chain successor (chain successor (chain (recursive equal (transpose (chain successor successor)) zero) (disjunction zero successor)))))\n)",
            "task_solution": "(disjunction (transpose successor) (chain successor (chain successor (chain (recursive equal (transpose (chain successor successor)) zero) (disjunction zero successor)))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 69.42810202098917,
            "num_unique_values": 4100,
            "num_values_explored": 50074,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive successor (transpose (chain successor successor)) (transpose (disjunction successor (recursive (chain successor successor) (transpose (chain successor successor)) successor))))\n)",
            "task_solution": "(recursive successor (transpose (chain successor successor)) (transpose (disjunction successor (recursive (chain successor successor) (transpose (chain successor successor)) successor))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.7999320550006814,
            "num_unique_values": 263,
            "num_values_explored": 584,
            "solution": "(chain successor (chain successor (disjunction (chain successor successor) (chain successor (disjunction (transpose successor) (chain (recursive successor (transpose successor) successor) successor))))))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (chain successor (disjunction successor (disjunction (transpose successor) (chain (recursive successor (transpose successor) successor) successor))))))\n)",
            "task_solution": "(chain successor (chain successor (chain successor (disjunction successor (disjunction (transpose successor) (chain (recursive successor (transpose successor) successor) successor))))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.3490903329802677,
            "num_unique_values": 136,
            "num_values_explored": 260,
            "solution": "(chain (recursive successor (recursive successor (chain (recursive successor successor (chain successor successor)) zero) equal) (transpose successor)) (transpose successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor (recursive successor (chain (recursive successor successor (chain successor successor)) zero) equal) (transpose successor)) (transpose successor))\n)",
            "task_solution": "(chain (recursive successor (recursive successor (chain (recursive successor successor (chain successor successor)) zero) equal) (transpose successor)) (transpose successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.3053897760109976,
            "num_unique_values": 106,
            "num_values_explored": 220,
            "solution": "(disjunction (chain (recursive successor (transpose successor) successor) zero) (recursive successor (transpose (disjunction zero (chain successor successor))) (transpose successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [ True, False, False, False, False, False,  True,  True,  True,\n         True]])],\n    solution=(disjunction (chain (recursive successor (transpose successor) successor) zero) (recursive successor (transpose (disjunction zero (chain successor successor))) (transpose successor)))\n)",
            "task_solution": "(disjunction (chain (recursive successor (transpose successor) successor) zero) (recursive successor (transpose (disjunction zero (chain successor successor))) (transpose successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.4762179760145955,
            "num_unique_values": 186,
            "num_values_explored": 371,
            "solution": "(disjunction successor (recursive equal equal (chain (disjunction zero (recursive successor (recursive successor successor (chain successor successor)) equal)) (chain successor successor))))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n         True]])],\n    solution=(disjunction equal (recursive successor (transpose successor) (chain successor (chain successor (chain successor (recursive (transpose successor) (transpose successor) zero))))))\n)",
            "task_solution": "(disjunction equal (recursive successor (transpose successor) (chain successor (chain successor (chain successor (recursive (transpose successor) (transpose successor) zero))))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.37894716998562217,
            "num_unique_values": 139,
            "num_values_explored": 273,
            "solution": "(chain (disjunction zero (recursive (chain zero successor) (recursive equal (transpose successor) successor) (transpose successor))) (chain (disjunction zero successor) successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain zero (recursive successor successor equal)) (recursive equal (transpose successor) successor) (transpose (chain successor (chain successor successor))))\n)",
            "task_solution": "(recursive (chain zero (recursive successor successor equal)) (recursive equal (transpose successor) successor) (transpose (chain successor (chain successor successor))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 13.348516175989062,
            "num_unique_values": 1585,
            "num_values_explored": 12392,
            "solution": "(chain successor (recursive equal (recursive (transpose (chain successor successor)) (recursive successor successor (recursive successor equal successor)) successor) successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False,  True, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False,  True,\n        False],\n       [ True,  True,  True,  True, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive equal (recursive (transpose (chain successor successor)) (recursive successor successor (recursive successor equal successor)) successor) successor))\n)",
            "task_solution": "(chain successor (recursive equal (recursive (transpose (chain successor successor)) (recursive successor successor (recursive successor equal successor)) successor) successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.30909356696065515,
            "num_unique_values": 116,
            "num_values_explored": 234,
            "solution": "(recursive equal (recursive zero (transpose (disjunction zero (chain successor successor))) (transpose successor)) (chain (recursive successor successor equal) successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True]])],\n    solution=(recursive equal (recursive zero (transpose (disjunction zero (chain successor successor))) (transpose successor)) (recursive (chain successor successor) successor equal))\n)",
            "task_solution": "(recursive equal (recursive zero (transpose (disjunction zero (chain successor successor))) (transpose successor)) (recursive (chain successor successor) successor equal))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.2826077120262198,
            "num_unique_values": 106,
            "num_values_explored": 213,
            "solution": "(disjunction equal (chain (transpose successor) (transpose (recursive (disjunction equal (chain (recursive zero zero (transpose successor)) successor)) (transpose successor) successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False,  True,\n        False],\n       [ True,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True,  True,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True,  True,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction equal (chain (recursive (disjunction equal (chain (recursive zero zero (transpose successor)) successor)) (transpose successor) successor) successor)))\n)",
            "task_solution": "(transpose (disjunction equal (chain (recursive (disjunction equal (chain (recursive zero zero (transpose successor)) successor)) (transpose successor) successor) successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.8256116749835201,
            "num_unique_values": 284,
            "num_values_explored": 689,
            "solution": "(recursive equal (recursive successor (chain successor successor) (disjunction successor (transpose successor))) (disjunction successor (transpose (chain (recursive successor equal successor) zero))))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [ True, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [ True, False, False, False, False,  True,  True, False,  True,\n        False],\n       [ True, False, False, False, False, False,  True,  True, False,\n        False],\n       [ True, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (recursive successor (chain successor successor) (disjunction successor (transpose successor))) (recursive successor zero (recursive successor equal successor)))\n)",
            "task_solution": "(recursive equal (recursive successor (chain successor successor) (disjunction successor (transpose successor))) (recursive successor zero (recursive successor equal successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.325264954008162,
            "num_unique_values": 117,
            "num_values_explored": 231,
            "solution": "(recursive (chain successor (disjunction successor (recursive zero (transpose successor) (transpose successor)))) zero (transpose (chain successor (chain successor successor))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (disjunction successor (recursive zero (transpose successor) (transpose successor)))) zero (transpose (chain successor (chain successor successor))))\n)",
            "task_solution": "(recursive (chain successor (disjunction successor (recursive zero (transpose successor) (transpose successor)))) zero (transpose (chain successor (chain successor successor))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.3556892199558206,
            "num_unique_values": 153,
            "num_values_explored": 276,
            "solution": "(disjunction (transpose successor) (chain (disjunction successor equal) (recursive (disjunction zero successor) (recursive successor (transpose successor) (chain successor successor)) (transpose successor))))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (disjunction zero (disjunction successor (transpose successor))) (recursive equal (recursive equal (transpose successor) (chain successor successor)) (transpose successor)))\n)",
            "task_solution": "(chain (disjunction zero (disjunction successor (transpose successor))) (recursive equal (recursive equal (transpose successor) (chain successor successor)) (transpose successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.4225468820077367,
            "num_unique_values": 162,
            "num_values_explored": 306,
            "solution": "(recursive (transpose (chain (recursive (chain successor (chain successor successor)) (transpose successor) (disjunction zero successor)) successor)) successor (transpose successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain (recursive (chain successor (chain successor successor)) (transpose successor) (disjunction zero successor)) successor)) successor (transpose successor))\n)",
            "task_solution": "(recursive (transpose (chain (recursive (chain successor (chain successor successor)) (transpose successor) (disjunction zero successor)) successor)) successor (transpose successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.3588463790365495,
            "num_unique_values": 132,
            "num_values_explored": 264,
            "solution": "(transpose (recursive (chain (disjunction (chain successor successor) (chain (transpose successor) zero)) (chain successor (chain successor successor))) zero successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False]])],\n    solution=(recursive (transpose (chain (disjunction (chain successor successor) (transpose (chain zero successor))) (chain successor (chain successor successor)))) successor zero)\n)",
            "task_solution": "(recursive (transpose (chain (disjunction (chain successor successor) (transpose (chain zero successor))) (chain successor (chain successor successor)))) successor zero)",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.3446506329928525,
            "num_unique_values": 107,
            "num_values_explored": 229,
            "solution": "(disjunction (chain (transpose successor) (disjunction zero successor)) (chain successor (chain (recursive (disjunction zero successor) (transpose successor) zero) successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True, False, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True, False, False,  True, False, False,\n        False],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False,  True, False, False, False,  True, False, False,  True,\n        False],\n       [False,  True, False, False, False, False,  True, False, False,\n         True],\n       [False,  True, False, False, False, False, False,  True, False,\n        False],\n       [False,  True, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction (chain (transpose successor) (disjunction zero successor)) (chain successor (chain (recursive (disjunction zero successor) (transpose successor) zero) successor)))\n)",
            "task_solution": "(disjunction (chain (transpose successor) (disjunction zero successor)) (chain successor (chain (recursive (disjunction zero successor) (transpose successor) zero) successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 73.80812332301866,
            "num_unique_values": 4384,
            "num_values_explored": 50079,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (recursive (chain successor successor) (transpose successor) successor) equal (recursive (transpose (chain successor (chain successor successor))) equal successor))\n)",
            "task_solution": "(recursive (recursive (chain successor successor) (transpose successor) successor) equal (recursive (transpose (chain successor (chain successor successor))) equal successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.32085086102597415,
            "num_unique_values": 127,
            "num_values_explored": 241,
            "solution": "(transpose (disjunction zero (chain (recursive successor (transpose (chain successor successor)) (chain (recursive equal (transpose successor) zero) successor)) successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(transpose (disjunction zero (chain (recursive successor (transpose (chain successor successor)) (disjunction zero successor)) (recursive successor zero (transpose successor)))))\n)",
            "task_solution": "(transpose (disjunction zero (chain (recursive successor (transpose (chain successor successor)) (disjunction zero successor)) (recursive successor zero (transpose successor)))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.36866016703424975,
            "num_unique_values": 138,
            "num_values_explored": 268,
            "solution": "(chain (disjunction equal (chain successor (chain successor (recursive equal (transpose successor) zero)))) (recursive successor (chain successor successor) successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True, False,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction equal (chain successor (chain successor (recursive equal (transpose successor) zero)))) (recursive successor (chain successor successor) successor))\n)",
            "task_solution": "(chain (disjunction equal (chain successor (chain successor (recursive equal (transpose successor) zero)))) (recursive successor (chain successor successor) successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 39.31455791799817,
            "num_unique_values": 2234,
            "num_values_explored": 35614,
            "solution": "(transpose (disjunction successor (recursive equal (chain successor (chain successor successor)) (recursive successor (recursive successor successor (transpose successor)) successor))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction successor (recursive equal (chain successor (chain successor successor)) (recursive successor (recursive successor successor (transpose successor)) successor))))\n)",
            "task_solution": "(transpose (disjunction successor (recursive equal (chain successor (chain successor successor)) (recursive successor (recursive successor successor (transpose successor)) successor))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.26631164900027215,
            "num_unique_values": 96,
            "num_values_explored": 207,
            "solution": "(chain (recursive (chain successor successor) (transpose successor) (recursive successor (chain successor successor) successor)) (disjunction zero (chain successor successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (recursive (chain successor successor) (transpose successor) (recursive successor (chain successor successor) successor)) (disjunction zero (chain successor successor)))\n)",
            "task_solution": "(chain (recursive (chain successor successor) (transpose successor) (recursive successor (chain successor successor) successor)) (disjunction zero (chain successor successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.5060867210268043,
            "num_unique_values": 176,
            "num_values_explored": 367,
            "solution": "(chain (recursive (disjunction equal (chain zero successor)) equal (recursive (chain successor (chain successor (chain successor successor))) successor equal)) successor)",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n        False],\n       [False,  True,  True, False, False, False,  True, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False,  True, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False]])],\n    solution=(chain (recursive (disjunction equal (chain zero successor)) (transpose successor) (recursive (chain successor (chain successor successor)) successor equal)) successor)\n)",
            "task_solution": "(chain (recursive (disjunction equal (chain zero successor)) (transpose successor) (recursive (chain successor (chain successor successor)) successor equal)) successor)",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.9642206960124895,
            "num_unique_values": 277,
            "num_values_explored": 771,
            "solution": "(recursive (recursive successor (transpose (chain (disjunction zero successor) (chain successor successor))) (recursive equal equal successor)) successor (chain zero successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (recursive successor (transpose successor) (chain (disjunction zero successor) successor)) (transpose successor) (recursive (transpose successor) (transpose successor) zero))\n)",
            "task_solution": "(recursive (recursive successor (transpose successor) (chain (disjunction zero successor) successor)) (transpose successor) (recursive (transpose successor) (transpose successor) zero))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.3158382240217179,
            "num_unique_values": 117,
            "num_values_explored": 230,
            "solution": "(recursive (disjunction equal (recursive (chain zero successor) (transpose successor) (transpose (disjunction equal (chain successor successor))))) zero (transpose successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False,  True, False,  True,  True,  True, False,  True, False,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True, False,  True, False,  True,  True,  True, False,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(recursive (disjunction equal (recursive (chain zero successor) (transpose successor) (transpose (disjunction equal (chain successor successor))))) zero (transpose successor))\n)",
            "task_solution": "(recursive (disjunction equal (recursive (chain zero successor) (transpose successor) (transpose (disjunction equal (chain successor successor))))) zero (transpose successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.6377041460364126,
            "num_unique_values": 226,
            "num_values_explored": 506,
            "solution": "(disjunction (transpose successor) (chain successor (chain (recursive equal (transpose successor) zero) (recursive successor successor (transpose (chain successor successor))))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False,  True,  True, False,  True,  True,\n        False],\n       [ True,  True, False,  True,  True, False,  True,  True, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False,  True,  True, False,  True,  True, False,  True,  True,\n        False],\n       [False,  True, False,  True,  True, False,  True,  True, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False,  True, False, False,  True,  True, False,  True,  True,\n        False],\n       [False,  True, False, False,  True, False,  True,  True, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (chain successor (chain (recursive equal (transpose successor) zero) (recursive successor successor (transpose (chain successor successor))))))\n)",
            "task_solution": "(disjunction (transpose successor) (chain successor (chain (recursive equal (transpose successor) zero) (recursive successor successor (transpose (chain successor successor))))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 58.09291707497323,
            "num_unique_values": 3036,
            "num_values_explored": 50022,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) equal (recursive equal (disjunction successor (transpose successor)) (transpose (chain (disjunction zero successor) (chain successor successor)))))\n)",
            "task_solution": "(recursive (transpose successor) equal (recursive equal (disjunction successor (transpose successor)) (transpose (chain (disjunction zero successor) (chain successor successor)))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.4805085810367018,
            "num_unique_values": 176,
            "num_values_explored": 379,
            "solution": "(chain successor (recursive successor (recursive successor (chain successor (chain successor successor)) (recursive successor (chain successor successor) successor)) successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive successor (recursive successor (chain successor (chain successor successor)) (recursive successor (chain successor successor) successor)) successor))\n)",
            "task_solution": "(chain successor (recursive successor (recursive successor (chain successor (chain successor successor)) (recursive successor (chain successor successor) successor)) successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.4610441830009222,
            "num_unique_values": 186,
            "num_values_explored": 320,
            "solution": "(disjunction equal (chain successor (chain (recursive equal successor (recursive (disjunction equal (recursive successor (transpose successor) successor)) zero (transpose successor))) successor)))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n         True],\n       [False,  True, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain (recursive successor successor (recursive (disjunction equal (recursive successor (transpose successor) successor)) zero (transpose successor))) successor))\n)",
            "task_solution": "(disjunction equal (chain (recursive successor successor (recursive (disjunction equal (recursive successor (transpose successor) successor)) zero (transpose successor))) successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.3606508459779434,
            "num_unique_values": 139,
            "num_values_explored": 255,
            "solution": "(chain (recursive (recursive zero (transpose successor) (transpose successor)) zero (transpose successor)) (chain (recursive equal (transpose successor) zero) successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive (recursive zero (transpose successor) (transpose successor)) zero (transpose successor)) (chain (recursive equal (transpose successor) zero) successor))\n)",
            "task_solution": "(chain (recursive (recursive zero (transpose successor) (transpose successor)) zero (transpose successor)) (chain (recursive equal (transpose successor) zero) successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 70.65217404003488,
            "num_unique_values": 4566,
            "num_values_explored": 50014,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n         True],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False]])],\n    solution=(recursive (recursive successor (chain zero successor) (transpose successor)) (transpose successor) (recursive (chain successor successor) successor (chain successor successor)))\n)",
            "task_solution": "(recursive (recursive successor (chain zero successor) (transpose successor)) (transpose successor) (recursive (chain successor successor) successor (chain successor successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 72.93036279000808,
            "num_unique_values": 5347,
            "num_values_explored": 50019,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True,  True, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False]])],\n    solution=(transpose (chain (disjunction zero (chain successor successor)) (chain successor (recursive successor (recursive zero (transpose successor) (transpose successor)) successor))))\n)",
            "task_solution": "(transpose (chain (disjunction zero (chain successor successor)) (chain successor (recursive successor (recursive zero (transpose successor) (transpose successor)) successor))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.5523808989673853,
            "num_unique_values": 187,
            "num_values_explored": 355,
            "solution": "(disjunction successor (transpose (disjunction equal (recursive (recursive successor successor (transpose (chain successor successor))) successor (recursive successor successor equal)))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True, False,  True,  True, False,  True,  True,  True,\n        False],\n       [False,  True, False, False,  True, False, False,  True,  True,\n         True],\n       [False, False,  True, False, False,  True, False, False,  True,\n         True]])],\n    solution=(disjunction successor (transpose (disjunction equal (recursive (recursive successor successor (transpose (chain successor successor))) successor (recursive successor successor equal)))))\n)",
            "task_solution": "(disjunction successor (transpose (disjunction equal (recursive (recursive successor successor (transpose (chain successor successor))) successor (recursive successor successor equal)))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.3803455170127563,
            "num_unique_values": 161,
            "num_values_explored": 275,
            "solution": "(recursive (transpose successor) (recursive (chain successor successor) successor (recursive successor (chain successor successor) successor)) (transpose (chain successor successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True, False, False,  True,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (recursive (chain successor successor) successor (recursive successor (chain successor successor) successor)) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (transpose successor) (recursive (chain successor successor) successor (recursive successor (chain successor successor) successor)) (transpose (chain successor successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.3402135880314745,
            "num_unique_values": 126,
            "num_values_explored": 251,
            "solution": "(transpose (recursive (chain (disjunction zero successor) (chain (disjunction equal successor) (recursive successor (transpose successor) (chain successor successor)))) successor zero))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True, False,  True,  True, False,  True,  True,\n        False],\n       [ True, False,  True,  True, False,  True,  True, False, False,\n        False],\n       [ True,  True, False,  True,  True, False,  True,  True, False,\n        False],\n       [False,  True,  True, False,  True,  True, False,  True,  True,\n        False],\n       [False, False,  True,  True, False,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True, False,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True, False,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False]])],\n    solution=(transpose (chain (disjunction zero successor) (chain (disjunction successor equal) (recursive successor (transpose successor) (chain (disjunction zero successor) successor)))))\n)",
            "task_solution": "(transpose (chain (disjunction zero successor) (chain (disjunction successor equal) (recursive successor (transpose successor) (chain (disjunction zero successor) successor)))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.35010645299917087,
            "num_unique_values": 138,
            "num_values_explored": 263,
            "solution": "(chain (disjunction zero successor) (recursive equal (recursive (recursive successor (transpose successor) (chain successor successor)) zero (transpose successor)) successor))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction zero successor) (recursive equal (recursive (recursive successor (transpose successor) (chain successor successor)) zero (transpose successor)) successor))\n)",
            "task_solution": "(chain (disjunction zero successor) (recursive equal (recursive (recursive successor (transpose successor) (chain successor successor)) zero (transpose successor)) successor))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.34346001100493595,
            "num_unique_values": 126,
            "num_values_explored": 261,
            "solution": "(transpose (chain (recursive successor (chain (transpose successor) successor) successor) (recursive zero zero (recursive successor successor (chain successor successor)))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (chain (recursive successor (chain (transpose successor) successor) successor) (recursive zero zero (recursive successor successor (chain successor successor)))))\n)",
            "task_solution": "(transpose (chain (recursive successor (chain (transpose successor) successor) successor) (recursive zero zero (recursive successor successor (chain successor successor)))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.3960513749625534,
            "num_unique_values": 147,
            "num_values_explored": 282,
            "solution": "(disjunction zero (chain successor (chain (disjunction equal (recursive successor successor (chain successor successor))) (recursive successor zero (transpose successor)))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction zero (chain successor (chain (disjunction equal (recursive successor successor (chain successor successor))) (recursive successor zero (transpose successor)))))\n)",
            "task_solution": "(disjunction zero (chain successor (chain (disjunction equal (recursive successor successor (chain successor successor))) (recursive successor zero (transpose successor)))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.5938689640024677,
            "num_unique_values": 207,
            "num_values_explored": 453,
            "solution": "(transpose (chain successor (recursive (recursive (chain successor successor) zero successor) (transpose (chain successor (chain successor successor))) (transpose successor))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False, False,  True,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False]])],\n    solution=(transpose (chain successor (recursive (recursive (chain successor successor) zero successor) (transpose (chain successor (chain successor successor))) (transpose successor))))\n)",
            "task_solution": "(transpose (chain successor (recursive (recursive (chain successor successor) zero successor) (transpose (chain successor (chain successor successor))) (transpose successor))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.31277154601411894,
            "num_unique_values": 121,
            "num_values_explored": 233,
            "solution": "(recursive (chain successor (recursive (disjunction successor (transpose successor)) (recursive successor equal successor) zero)) successor (transpose (chain successor successor)))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True,  True, False,  True,\n         True],\n       [ True,  True,  True,  True,  True, False,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True,  True,  True,  True,  True, False,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True,  True, False,\n         True],\n       [ True, False,  True, False,  True,  True, False,  True,  True,\n        False],\n       [ True, False,  True, False, False, False,  True, False,  True,\n         True],\n       [ True, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (disjunction successor (transpose successor))) successor (recursive (transpose (disjunction zero (chain successor successor))) zero (transpose successor)))\n)",
            "task_solution": "(recursive (chain successor (disjunction successor (transpose successor))) successor (recursive (transpose (disjunction zero (chain successor successor))) zero (transpose successor)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.3740721369977109,
            "num_unique_values": 147,
            "num_values_explored": 264,
            "solution": "(disjunction (transpose successor) (recursive successor successor (recursive successor (transpose (chain successor successor)) (chain successor (recursive successor equal successor)))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (recursive successor successor (recursive successor (transpose (chain successor successor)) (recursive (chain successor successor) equal successor))))\n)",
            "task_solution": "(disjunction (transpose successor) (recursive successor successor (recursive successor (transpose (chain successor successor)) (recursive (chain successor successor) equal successor))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.2853063109796494,
            "num_unique_values": 96,
            "num_values_explored": 216,
            "solution": "(chain (transpose (recursive successor zero (disjunction successor (transpose successor)))) (recursive successor (transpose successor) (recursive (chain zero successor) (transpose successor) successor)))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n        False],\n       [ True,  True, False, False, False, False,  True, False, False,\n        False],\n       [False,  True, False, False, False, False, False,  True, False,\n        False],\n       [ True,  True, False, False, False, False, False, False,  True,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (recursive (transpose successor) (disjunction successor (transpose successor)) zero) (chain successor (recursive equal (transpose (chain successor successor)) zero)))\n)",
            "task_solution": "(chain (recursive (transpose successor) (disjunction successor (transpose successor)) zero) (chain successor (recursive equal (transpose (chain successor successor)) zero)))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 5.292807433987036,
            "num_unique_values": 811,
            "num_values_explored": 4728,
            "solution": "(recursive (disjunction successor (recursive (disjunction equal (chain (disjunction zero (chain successor successor)) (chain successor successor))) (transpose successor) equal)) zero successor)",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (recursive (chain (disjunction equal (chain successor (chain successor successor))) (disjunction zero successor)) (transpose successor) equal) zero successor)\n)",
            "task_solution": "(recursive (recursive (chain (disjunction equal (chain successor (chain successor successor))) (disjunction zero successor)) (transpose successor) equal) zero successor)",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.8429685379960574,
            "num_unique_values": 285,
            "num_values_explored": 678,
            "solution": "(recursive successor (chain (transpose (chain successor (chain successor (chain successor successor)))) (recursive (chain successor successor) zero successor)) equal)",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive successor (chain (transpose (chain successor (chain successor (chain successor successor)))) (recursive (chain successor successor) zero successor)) equal)\n)",
            "task_solution": "(recursive successor (chain (transpose (chain successor (chain successor (chain successor successor)))) (recursive (chain successor successor) zero successor)) equal)",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.4121193670434877,
            "num_unique_values": 161,
            "num_values_explored": 294,
            "solution": "(recursive (disjunction successor (chain (recursive (disjunction equal successor) zero (recursive successor equal successor)) (transpose successor))) (transpose (chain successor successor)) successor)",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (disjunction successor (transpose successor)) (transpose (disjunction equal (chain successor (chain successor (recursive equal (transpose successor) zero))))) successor)\n)",
            "task_solution": "(recursive (disjunction successor (transpose successor)) (transpose (disjunction equal (chain successor (chain successor (recursive equal (transpose successor) zero))))) successor)",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.33248461701441556,
            "num_unique_values": 117,
            "num_values_explored": 240,
            "solution": "(recursive (transpose (chain (disjunction zero (chain successor successor)) (recursive (chain successor successor) zero successor))) successor (chain (transpose successor) zero))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False]])],\n    solution=(recursive (transpose (chain (disjunction zero (chain successor (chain successor successor))) successor)) successor (disjunction successor (transpose (chain zero successor))))\n)",
            "task_solution": "(recursive (transpose (chain (disjunction zero (chain successor (chain successor successor))) successor)) successor (disjunction successor (transpose (chain zero successor))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.30069700797321275,
            "num_unique_values": 114,
            "num_values_explored": 216,
            "solution": "(disjunction (transpose successor) (chain successor (disjunction (chain successor (chain successor successor)) (recursive (transpose successor) successor (chain successor successor)))))",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False, False, False,  True, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False,  True,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n         True],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (chain successor (disjunction (chain successor (chain successor successor)) (recursive (transpose successor) successor (chain successor successor)))))\n)",
            "task_solution": "(disjunction (transpose successor) (chain successor (disjunction (chain successor (chain successor successor)) (recursive (transpose successor) successor (chain successor successor)))))",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 0.3799355680239387,
            "num_unique_values": 141,
            "num_values_explored": 268,
            "solution": "(chain (disjunction successor (disjunction equal (chain (recursive successor (disjunction zero (chain successor successor)) successor) (chain successor successor)))) successor)",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True, False,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True, False,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True, False,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction successor (disjunction equal (chain (recursive successor (disjunction zero (chain successor successor)) successor) (chain successor successor)))) successor)\n)",
            "task_solution": "(chain (disjunction successor (disjunction equal (chain (recursive successor (disjunction zero (chain successor successor)) successor) (chain successor successor)))) successor)",
            "task_solution_weight": 18
        },
        {
            "elapsed_time": 67.03240385494428,
            "num_unique_values": 3377,
            "num_values_explored": 50020,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor successor (transpose successor)) (transpose (chain (disjunction successor equal) (recursive equal (transpose successor) (transpose (chain successor successor))))))\n)",
            "task_solution": "(chain (recursive successor successor (transpose successor)) (transpose (chain (disjunction successor equal) (recursive equal (transpose successor) (transpose (chain successor successor))))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.37047412496758625,
            "num_unique_values": 116,
            "num_values_explored": 227,
            "solution": "(recursive (transpose (chain zero successor)) (chain successor (transpose (chain successor successor))) (recursive (transpose (chain successor successor)) successor (transpose successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (transpose (chain zero successor)) (chain successor (transpose (chain successor successor))) (recursive (transpose (chain successor successor)) successor (transpose successor)))\n)",
            "task_solution": "(recursive (transpose (chain zero successor)) (chain successor (transpose (chain successor successor))) (recursive (transpose (chain successor successor)) successor (transpose successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 62.622644367977045,
            "num_unique_values": 3122,
            "num_values_explored": 50065,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False]])],\n    solution=(recursive (disjunction successor (recursive (transpose (chain successor successor)) (recursive successor (chain successor successor) successor) successor)) equal (chain successor successor))\n)",
            "task_solution": "(recursive (disjunction successor (recursive (transpose (chain successor successor)) (recursive successor (chain successor successor) successor) successor)) equal (chain successor successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.4979543689987622,
            "num_unique_values": 176,
            "num_values_explored": 393,
            "solution": "(chain successor (chain (recursive (chain successor successor) (chain (transpose (chain successor (chain successor successor))) (disjunction zero successor)) successor) successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False,  True,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False,  True,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain (recursive (chain successor successor) (chain (transpose (chain successor (chain successor successor))) (disjunction zero successor)) successor) successor))\n)",
            "task_solution": "(chain successor (chain (recursive (chain successor successor) (chain (transpose (chain successor (chain successor successor))) (disjunction zero successor)) successor) successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.34298751497408375,
            "num_unique_values": 126,
            "num_values_explored": 261,
            "solution": "(transpose (disjunction (recursive successor (transpose successor) (transpose (chain successor successor))) (recursive (chain successor successor) (transpose successor) (chain successor successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [ True, False,  True, False, False,  True, False, False,  True,\n        False],\n       [ True,  True, False,  True, False, False,  True, False, False,\n         True],\n       [False,  True,  True, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True,  True, False,  True, False, False,  True,\n        False],\n       [False, False,  True,  True,  True, False,  True, False, False,\n         True],\n       [False, False, False,  True,  True,  True, False,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(transpose (disjunction (recursive successor (transpose successor) (transpose (chain successor successor))) (recursive (chain successor successor) (transpose successor) (chain successor successor))))\n)",
            "task_solution": "(transpose (disjunction (recursive successor (transpose successor) (transpose (chain successor successor))) (recursive (chain successor successor) (transpose successor) (chain successor successor))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.4254569789627567,
            "num_unique_values": 148,
            "num_values_explored": 319,
            "solution": "(disjunction (chain successor (chain successor successor)) (recursive (transpose successor) equal (chain (transpose successor) (recursive (disjunction zero successor) successor (transpose successor)))))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n        False],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False, False, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False, False, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (chain (disjunction (chain successor successor) (recursive (transpose (chain (disjunction zero successor) successor)) (transpose successor) successor)) successor))\n)",
            "task_solution": "(disjunction (transpose successor) (chain (disjunction (chain successor successor) (recursive (transpose (chain (disjunction zero successor) successor)) (transpose successor) successor)) successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.506039584055543,
            "num_unique_values": 187,
            "num_values_explored": 393,
            "solution": "(disjunction (transpose successor) (recursive successor (transpose (chain successor successor)) (disjunction zero (chain (transpose (disjunction zero successor)) (chain successor successor)))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True, False,  True, False, False, False,\n        False],\n       [ True, False, False,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True, False, False,  True,  True, False,  True, False,\n        False],\n       [ True, False,  True, False, False,  True,  True, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True,  True, False,\n         True],\n       [ True,  True, False, False,  True, False, False,  True,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (recursive successor (transpose (chain successor successor)) (disjunction zero (chain (transpose (disjunction zero successor)) (chain successor successor)))))\n)",
            "task_solution": "(disjunction (transpose successor) (recursive successor (transpose (chain successor successor)) (disjunction zero (chain (transpose (disjunction zero successor)) (chain successor successor)))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.2881133060436696,
            "num_unique_values": 108,
            "num_values_explored": 221,
            "solution": "(disjunction (chain successor (transpose successor)) (chain (chain (disjunction zero (chain successor successor)) (disjunction equal (chain successor successor))) (chain successor successor)))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False, False, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False, False, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False, False, False,  True, False,\n         True],\n       [False, False, False, False,  True, False, False, False,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (disjunction (transpose successor) (chain (disjunction successor (transpose successor)) (chain (disjunction zero (chain successor successor)) (chain successor successor)))))\n)",
            "task_solution": "(chain successor (disjunction (transpose successor) (chain (disjunction successor (transpose successor)) (chain (disjunction zero (chain successor successor)) (chain successor successor)))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 54.46648801601259,
            "num_unique_values": 2330,
            "num_values_explored": 50090,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True, False,  True,  True,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True,  True,  True, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True,  True,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (transpose (disjunction successor (chain (transpose (disjunction zero successor)) (recursive successor (recursive successor zero (transpose successor)) (transpose successor))))))\n)",
            "task_solution": "(chain successor (transpose (disjunction successor (chain (transpose (disjunction zero successor)) (recursive successor (recursive successor zero (transpose successor)) (transpose successor))))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.5795661649899557,
            "num_unique_values": 206,
            "num_values_explored": 429,
            "solution": "(transpose (chain (recursive (chain successor (disjunction successor (transpose successor))) (transpose (chain successor (chain successor successor))) zero) (disjunction successor equal)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False,  True, False, False,\n         True],\n       [ True,  True, False,  True, False, False,  True, False, False,\n         True],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False]])],\n    solution=(transpose (chain (recursive (chain successor (disjunction successor (transpose successor))) (transpose (chain successor (chain successor successor))) zero) (disjunction successor equal)))\n)",
            "task_solution": "(transpose (chain (recursive (chain successor (disjunction successor (transpose successor))) (transpose (chain successor (chain successor successor))) zero) (disjunction successor equal)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 67.07804717402905,
            "num_unique_values": 3522,
            "num_values_explored": 50001,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(recursive (chain (transpose successor) (recursive (recursive successor (transpose (chain successor successor)) equal) zero (transpose successor))) successor (chain successor successor))\n)",
            "task_solution": "(recursive (chain (transpose successor) (recursive (recursive successor (transpose (chain successor successor)) equal) zero (transpose successor))) successor (chain successor successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 63.01545642100973,
            "num_unique_values": 3521,
            "num_values_explored": 50092,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n         True],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain (recursive equal (transpose (chain successor (chain successor (chain successor (recursive successor (transpose successor) successor))))) successor) successor))\n)",
            "task_solution": "(chain successor (chain (recursive equal (transpose (chain successor (chain successor (chain successor (recursive successor (transpose successor) successor))))) successor) successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 67.32415981596569,
            "num_unique_values": 3973,
            "num_values_explored": 50065,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive successor (recursive (transpose zero) (transpose (chain (recursive successor (transpose successor) successor) (chain successor successor))) (transpose successor)) (transpose successor))\n)",
            "task_solution": "(recursive successor (recursive (transpose zero) (transpose (chain (recursive successor (transpose successor) successor) (chain successor successor))) (transpose successor)) (transpose successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 1.6688723239931278,
            "num_unique_values": 422,
            "num_values_explored": 1259,
            "solution": "(chain (recursive (disjunction zero (chain successor (transpose (chain (transpose successor) (chain successor (chain successor (chain successor successor))))))) successor equal) successor)",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (disjunction zero (chain successor (chain (transpose (chain successor (chain successor (chain successor successor)))) successor))) successor) successor equal)\n)",
            "task_solution": "(recursive (chain (disjunction zero (chain successor (chain (transpose (chain successor (chain successor (chain successor successor)))) successor))) successor) successor equal)",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.2921068749856204,
            "num_unique_values": 111,
            "num_values_explored": 223,
            "solution": "(disjunction (transpose (chain (recursive zero zero (transpose successor)) successor)) (chain (recursive equal (chain successor successor) successor) (chain successor successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction (transpose (chain (recursive zero zero (transpose successor)) successor)) (chain (recursive equal (chain successor successor) successor) (chain successor successor)))\n)",
            "task_solution": "(disjunction (transpose (chain (recursive zero zero (transpose successor)) successor)) (chain (recursive equal (chain successor successor) successor) (chain successor successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 61.630661887000315,
            "num_unique_values": 3620,
            "num_values_explored": 50034,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True, False,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True]])],\n    solution=(recursive (disjunction zero successor) (recursive equal (transpose successor) successor) (recursive (transpose (chain successor (chain successor successor))) (transpose successor) zero))\n)",
            "task_solution": "(recursive (disjunction zero successor) (recursive equal (transpose successor) successor) (recursive (transpose (chain successor (chain successor successor))) (transpose successor) zero))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.7953308550058864,
            "num_unique_values": 245,
            "num_values_explored": 592,
            "solution": "(recursive (transpose zero) (transpose (recursive (chain successor successor) successor equal)) (recursive (transpose (chain successor successor)) equal (chain zero successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (transpose zero) (recursive (transpose (chain successor successor)) equal successor) (recursive (transpose (chain successor successor)) equal (chain zero successor)))\n)",
            "task_solution": "(recursive (transpose zero) (recursive (transpose (chain successor successor)) equal successor) (recursive (transpose (chain successor successor)) equal (chain zero successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 62.068691577995196,
            "num_unique_values": 3240,
            "num_values_explored": 50093,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (recursive (chain successor (chain successor successor)) (recursive zero zero (transpose successor)) successor) (transpose successor) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (recursive (chain successor (chain successor successor)) (recursive zero zero (transpose successor)) successor) (transpose successor) (transpose (chain successor successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.3802921199821867,
            "num_unique_values": 140,
            "num_values_explored": 307,
            "solution": "(chain (transpose successor) (transpose (recursive (chain zero (recursive successor successor (transpose successor))) (transpose successor) (recursive successor (chain successor successor) successor))))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (chain (recursive (chain zero (recursive successor successor (transpose successor))) (transpose successor) (recursive successor (chain successor successor) successor)) successor))\n)",
            "task_solution": "(transpose (chain (recursive (chain zero (recursive successor successor (transpose successor))) (transpose successor) (recursive successor (chain successor successor) successor)) successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 66.7396679269732,
            "num_unique_values": 3394,
            "num_values_explored": 50049,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain zero (recursive successor (chain successor successor) successor)) (recursive (transpose successor) (transpose (chain successor successor)) (transpose successor)) successor)\n)",
            "task_solution": "(recursive (chain zero (recursive successor (chain successor successor) successor)) (recursive (transpose successor) (transpose (chain successor successor)) (transpose successor)) successor)",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.31605613697320223,
            "num_unique_values": 117,
            "num_values_explored": 234,
            "solution": "(recursive (chain (transpose (chain successor successor)) successor) (transpose successor) (recursive (disjunction zero successor) successor (chain successor (chain successor successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (chain (transpose (chain successor successor)) successor) (transpose successor) (recursive (disjunction zero successor) successor (chain successor (chain successor successor))))\n)",
            "task_solution": "(recursive (chain (transpose (chain successor successor)) successor) (transpose successor) (recursive (disjunction zero successor) successor (chain successor (chain successor successor))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.32203642203239724,
            "num_unique_values": 122,
            "num_values_explored": 223,
            "solution": "(recursive (recursive (chain (transpose successor) successor) successor (chain successor successor)) successor (transpose (chain (recursive successor (transpose successor) successor) successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (recursive (chain (transpose successor) successor) successor (chain successor successor)) successor (transpose (chain (recursive successor (transpose successor) successor) successor)))\n)",
            "task_solution": "(recursive (recursive (chain (transpose successor) successor) successor (chain successor successor)) successor (transpose (chain (recursive successor (transpose successor) successor) successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.38651524402666837,
            "num_unique_values": 141,
            "num_values_explored": 290,
            "solution": "(chain (disjunction successor (transpose successor)) (disjunction (transpose successor) (chain (recursive (disjunction successor equal) (transpose successor) zero) (chain successor successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True, False,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True,  True,  True,\n         True],\n       [False, False,  True, False, False,  True, False,  True,  True,\n         True],\n       [False, False,  True, False, False, False,  True, False,  True,\n         True],\n       [False, False,  True, False, False, False, False,  True, False,\n        False]])],\n    solution=(chain (disjunction successor (transpose successor)) (disjunction (transpose successor) (chain (recursive (disjunction successor equal) (transpose successor) zero) (chain successor successor))))\n)",
            "task_solution": "(chain (disjunction successor (transpose successor)) (disjunction (transpose successor) (chain (recursive (disjunction successor equal) (transpose successor) zero) (chain successor successor))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.27297703502699733,
            "num_unique_values": 106,
            "num_values_explored": 209,
            "solution": "(disjunction equal (chain (recursive (chain (recursive successor equal successor) (chain successor successor)) successor successor) (chain (disjunction zero successor) successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain (recursive (chain (recursive successor equal successor) (chain successor successor)) successor successor) (chain (disjunction zero successor) successor)))\n)",
            "task_solution": "(disjunction equal (chain (recursive (chain (recursive successor equal successor) (chain successor successor)) successor successor) (chain (disjunction zero successor) successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 60.6887435259996,
            "num_unique_values": 3067,
            "num_values_explored": 50064,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n         True]])],\n    solution=(transpose (disjunction equal (chain (disjunction zero (chain (disjunction equal (recursive successor successor (chain successor (chain successor successor)))) successor)) successor)))\n)",
            "task_solution": "(transpose (disjunction equal (chain (disjunction zero (chain (disjunction equal (recursive successor successor (chain successor (chain successor successor)))) successor)) successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.5310350499930792,
            "num_unique_values": 188,
            "num_values_explored": 384,
            "solution": "(disjunction (transpose (chain (recursive successor (transpose successor) successor) successor)) (recursive successor (recursive successor (transpose successor) successor) (chain successor successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [ True,  True,  True,  True,  True, False,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n         True]])],\n    solution=(disjunction (transpose (chain (recursive successor (transpose successor) successor) successor)) (recursive successor (recursive successor (transpose successor) successor) (chain successor successor)))\n)",
            "task_solution": "(disjunction (transpose (chain (recursive successor (transpose successor) successor) successor)) (recursive successor (recursive successor (transpose successor) successor) (chain successor successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.34545965900179,
            "num_unique_values": 126,
            "num_values_explored": 256,
            "solution": "(transpose (disjunction equal (chain (disjunction successor (transpose (chain successor successor))) (recursive (chain successor (chain successor successor)) successor (transpose successor)))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False, False,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True, False,  True,  True, False, False, False,\n        False],\n       [ True, False,  True,  True, False,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True, False,  True,  True, False,\n        False],\n       [ True, False,  True,  True,  True,  True, False,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n         True]])],\n    solution=(transpose (disjunction equal (chain (disjunction successor (transpose (chain successor successor))) (recursive (chain successor (chain successor successor)) successor (transpose successor)))))\n)",
            "task_solution": "(transpose (disjunction equal (chain (disjunction successor (transpose (chain successor successor))) (recursive (chain successor (chain successor successor)) successor (transpose successor)))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.4641085710027255,
            "num_unique_values": 185,
            "num_values_explored": 359,
            "solution": "(chain (recursive (recursive equal (recursive successor (chain successor successor) (disjunction successor equal)) (recursive successor successor (transpose successor))) successor zero) successor)",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain (recursive (recursive (transpose successor) (transpose successor) (disjunction zero successor)) (chain successor successor) (disjunction successor equal)) successor))\n)",
            "task_solution": "(chain successor (chain (recursive (recursive (transpose successor) (transpose successor) (disjunction zero successor)) (chain successor successor) (disjunction successor equal)) successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.38783637701999396,
            "num_unique_values": 145,
            "num_values_explored": 269,
            "solution": "(chain (disjunction equal (chain (transpose successor) (chain successor successor))) (recursive (disjunction equal (chain successor (chain successor successor))) equal successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (chain (disjunction equal (chain (transpose successor) (chain successor successor))) (disjunction equal (chain successor (chain successor successor)))) equal successor)\n)",
            "task_solution": "(recursive (chain (disjunction equal (chain (transpose successor) (chain successor successor))) (disjunction equal (chain successor (chain successor successor)))) equal successor)",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 54.87400917202467,
            "num_unique_values": 3058,
            "num_values_explored": 50051,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (transpose (disjunction zero successor)) (recursive (transpose successor) (recursive zero zero (recursive successor equal (chain successor successor))) successor) successor)\n)",
            "task_solution": "(recursive (transpose (disjunction zero successor)) (recursive (transpose successor) (recursive zero zero (recursive successor equal (chain successor successor))) successor) successor)",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 73.1420666219783,
            "num_unique_values": 4450,
            "num_values_explored": 50046,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n         True]])],\n    solution=(disjunction (recursive equal (recursive successor successor (chain successor successor)) successor) (chain (recursive successor (transpose successor) successor) (chain successor successor)))\n)",
            "task_solution": "(disjunction (recursive equal (recursive successor successor (chain successor successor)) successor) (chain (recursive successor (transpose successor) successor) (chain successor successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 68.23613410297548,
            "num_unique_values": 3752,
            "num_values_explored": 50048,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False, False, False,\n        False],\n       [False,  True,  True, False, False,  True, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False,  True, False, False,\n        False],\n       [ True,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False,  True,  True, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n         True],\n       [ True,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False,  True,  True, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n        False]])],\n    solution=(recursive (chain successor (chain successor successor)) (recursive successor (recursive (transpose (chain successor successor)) equal (chain zero successor)) successor) successor)\n)",
            "task_solution": "(recursive (chain successor (chain successor successor)) (recursive successor (recursive (transpose (chain successor successor)) equal (chain zero successor)) successor) successor)",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.2925334150204435,
            "num_unique_values": 106,
            "num_values_explored": 205,
            "solution": "(disjunction (transpose successor) (chain (disjunction zero (chain (disjunction (transpose successor) successor) (recursive (chain successor successor) zero (transpose successor)))) successor))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False,  True, False, False, False, False,\n        False],\n       [ True, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False, False,  True, False,  True, False, False,\n        False],\n       [False, False,  True, False, False,  True, False,  True, False,\n        False],\n       [False, False, False,  True, False, False,  True, False,  True,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n         True],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (chain (disjunction zero (chain (disjunction successor (transpose successor)) (recursive (chain successor successor) zero (transpose successor)))) successor))\n)",
            "task_solution": "(disjunction (transpose successor) (chain (disjunction zero (chain (disjunction successor (transpose successor)) (recursive (chain successor successor) zero (transpose successor)))) successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 56.44440509099513,
            "num_unique_values": 3610,
            "num_values_explored": 50052,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain zero (chain successor (chain successor successor))) (transpose (chain successor (chain successor successor))) (recursive equal successor (transpose successor)))\n)",
            "task_solution": "(recursive (chain zero (chain successor (chain successor successor))) (transpose (chain successor (chain successor successor))) (recursive equal successor (transpose successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.4480189809692092,
            "num_unique_values": 167,
            "num_values_explored": 303,
            "solution": "(transpose (disjunction equal (chain successor (chain (disjunction equal (chain successor (recursive (recursive successor equal successor) (transpose successor) zero))) successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n         True]])],\n    solution=(transpose (disjunction equal (chain successor (chain successor (disjunction equal (chain (recursive successor (recursive equal (transpose successor) zero) successor) successor))))))\n)",
            "task_solution": "(transpose (disjunction equal (chain successor (chain successor (disjunction equal (chain (recursive successor (recursive equal (transpose successor) zero) successor) successor))))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.26498800702393055,
            "num_unique_values": 96,
            "num_values_explored": 194,
            "solution": "(chain (recursive (chain successor successor) (transpose (disjunction zero (chain successor successor))) successor) (disjunction zero (chain successor (chain successor successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [ True, False, False,  True,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n         True],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n         True],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False]])],\n    solution=(chain (recursive (chain successor successor) (transpose (disjunction zero (chain successor successor))) successor) (disjunction zero (chain successor (chain successor successor))))\n)",
            "task_solution": "(chain (recursive (chain successor successor) (transpose (disjunction zero (chain successor successor))) successor) (disjunction zero (chain successor (chain successor successor))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.3876692909980193,
            "num_unique_values": 155,
            "num_values_explored": 280,
            "solution": "(disjunction zero (chain successor (disjunction successor (recursive equal (chain (transpose (chain successor successor)) (recursive successor zero (transpose successor))) successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True,  True, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False,  True,  True,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n         True],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction zero successor) (disjunction successor (recursive equal (chain (transpose (chain successor successor)) (recursive successor zero (transpose successor))) successor)))\n)",
            "task_solution": "(chain (disjunction zero successor) (disjunction successor (recursive equal (chain (transpose (chain successor successor)) (recursive successor zero (transpose successor))) successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 58.820397199946456,
            "num_unique_values": 2222,
            "num_values_explored": 50057,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True]])],\n    solution=(transpose (disjunction successor (disjunction equal (recursive (disjunction (chain successor successor) (transpose (chain successor successor))) (recursive equal successor equal) successor))))\n)",
            "task_solution": "(transpose (disjunction successor (disjunction equal (recursive (disjunction (chain successor successor) (transpose (chain successor successor))) (recursive equal successor equal) successor))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.20090860599884763,
            "num_unique_values": 69,
            "num_values_explored": 158,
            "solution": "(disjunction (transpose (chain (transpose (recursive successor equal successor)) successor)) (chain (recursive zero (transpose successor) (transpose successor)) (recursive successor successor equal)))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(disjunction (recursive (chain (transpose successor) successor) equal successor) (recursive (chain zero successor) (recursive equal (transpose successor) successor) (transpose successor)))\n)",
            "task_solution": "(disjunction (recursive (chain (transpose successor) successor) equal successor) (recursive (chain zero successor) (recursive equal (transpose successor) successor) (transpose successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.4441450670128688,
            "num_unique_values": 158,
            "num_values_explored": 355,
            "solution": "(recursive (recursive successor (transpose successor) (recursive successor (transpose (chain zero successor)) equal)) zero (recursive equal successor (chain successor successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True,  True,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (recursive successor (transpose successor) (recursive successor (transpose (chain zero successor)) equal)) zero (recursive equal successor (chain successor successor)))\n)",
            "task_solution": "(recursive (recursive successor (transpose successor) (recursive successor (transpose (chain zero successor)) equal)) zero (recursive equal successor (chain successor successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 68.86656207003398,
            "num_unique_values": 4285,
            "num_values_explored": 50087,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True, False, False, False, False,  True,  True,  True, False,\n        False],\n       [ True,  True,  True, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (recursive successor (chain (recursive successor equal (chain successor successor)) zero) (transpose (chain successor successor))) (chain successor successor))\n)",
            "task_solution": "(recursive successor (recursive successor (chain (recursive successor equal (chain successor successor)) zero) (transpose (chain successor successor))) (chain successor successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 10.0017083719722,
            "num_unique_values": 1352,
            "num_values_explored": 9651,
            "solution": "(chain successor (chain (recursive successor (recursive (recursive successor successor (transpose (recursive successor equal (chain successor successor)))) successor zero) successor) successor))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [False,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain (recursive successor (chain successor successor) (recursive equal successor (recursive (transpose successor) (chain successor successor) successor))) successor))\n)",
            "task_solution": "(chain successor (chain (recursive successor (chain successor successor) (recursive equal successor (recursive (transpose successor) (chain successor successor) successor))) successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 60.486031600041315,
            "num_unique_values": 2801,
            "num_values_explored": 50051,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True, False,  True,  True, False,  True, False,\n        False]])],\n    solution=(chain (disjunction successor equal) (recursive (chain successor (transpose (chain successor (disjunction successor (transpose successor))))) (transpose (chain successor successor)) successor))\n)",
            "task_solution": "(chain (disjunction successor equal) (recursive (chain successor (transpose (chain successor (disjunction successor (transpose successor))))) (transpose (chain successor successor)) successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.6268579939496703,
            "num_unique_values": 222,
            "num_values_explored": 496,
            "solution": "(chain (recursive equal successor (recursive successor successor (transpose successor))) (chain (disjunction successor (transpose (chain successor successor))) (disjunction zero successor)))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (recursive equal successor (recursive successor successor (transpose successor))) (chain (disjunction successor (transpose (chain successor successor))) (disjunction zero successor)))\n)",
            "task_solution": "(chain (recursive equal successor (recursive successor successor (transpose successor))) (chain (disjunction successor (transpose (chain successor successor))) (disjunction zero successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.2657775239786133,
            "num_unique_values": 97,
            "num_values_explored": 194,
            "solution": "(chain successor (recursive (disjunction equal (recursive successor successor (chain successor successor))) (transpose successor) (recursive zero (transpose successor) (transpose successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (recursive (disjunction equal (recursive successor successor (chain successor successor))) (transpose successor) (recursive zero (transpose successor) (transpose successor))))\n)",
            "task_solution": "(chain successor (recursive (disjunction equal (recursive successor successor (chain successor successor))) (transpose successor) (recursive zero (transpose successor) (transpose successor))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.49405688798287883,
            "num_unique_values": 197,
            "num_values_explored": 373,
            "solution": "(recursive equal (disjunction successor (recursive zero zero (transpose (chain successor successor)))) (recursive (transpose successor) (transpose successor) (recursive successor successor equal)))",
            "solution_weight": 20,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (disjunction successor (recursive zero zero (transpose (chain successor successor)))) (recursive (transpose successor) (transpose successor) (chain successor successor)))\n)",
            "task_solution": "(recursive equal (disjunction successor (recursive zero zero (transpose (chain successor successor)))) (recursive (transpose successor) (transpose successor) (chain successor successor)))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.4161099279881455,
            "num_unique_values": 166,
            "num_values_explored": 314,
            "solution": "(transpose (chain (disjunction zero successor) (disjunction (transpose successor) (recursive (chain successor successor) (transpose successor) (chain successor (chain successor successor))))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False,  True, False, False, False,\n        False],\n       [False,  True,  True, False, False, False,  True, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False,  True, False,\n        False],\n       [ True, False, False,  True,  True, False, False, False,  True,\n        False],\n       [False,  True, False, False,  True,  True, False, False, False,\n        False],\n       [False, False,  True, False, False,  True,  True, False, False,\n        False],\n       [False, False, False,  True, False, False,  True,  True, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False]])],\n    solution=(transpose (chain (disjunction zero successor) (disjunction (transpose successor) (recursive (chain successor successor) (transpose successor) (chain successor (chain successor successor))))))\n)",
            "task_solution": "(transpose (chain (disjunction zero successor) (disjunction (transpose successor) (recursive (chain successor successor) (transpose successor) (chain successor (chain successor successor))))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 69.55568889196729,
            "num_unique_values": 4169,
            "num_values_explored": 50043,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False]])],\n    solution=(transpose (chain (recursive (chain (disjunction (chain successor successor) (transpose (chain zero successor))) (disjunction zero successor)) (transpose successor) successor) successor))\n)",
            "task_solution": "(transpose (chain (recursive (chain (disjunction (chain successor successor) (transpose (chain zero successor))) (disjunction zero successor)) (transpose successor) successor) successor))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 66.670684429002,
            "num_unique_values": 4283,
            "num_values_explored": 50074,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False,  True,  True, False, False,\n         True],\n       [ True,  True, False,  True,  True, False, False,  True, False,\n        False],\n       [False,  True,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False,  True,  True, False, False,  True, False, False,\n         True],\n       [False, False, False,  True,  True, False, False,  True, False,\n        False],\n       [False, False, False, False,  True,  True, False, False,  True,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n         True],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction successor (chain (transpose successor) (recursive successor (chain (transpose (chain (disjunction zero successor) (chain successor successor))) successor) successor))))\n)",
            "task_solution": "(transpose (disjunction successor (chain (transpose successor) (recursive successor (chain (transpose (chain (disjunction zero successor) (chain successor successor))) successor) successor))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.2628288170089945,
            "num_unique_values": 101,
            "num_values_explored": 202,
            "solution": "(chain (disjunction equal (chain successor successor)) (disjunction equal (chain successor (recursive successor (disjunction (transpose successor) (chain successor successor)) successor))))",
            "solution_weight": 19,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (disjunction equal (chain successor successor)) (disjunction equal (chain successor (recursive successor (disjunction (transpose successor) (chain successor successor)) successor))))\n)",
            "task_solution": "(chain (disjunction equal (chain successor successor)) (disjunction equal (chain successor (recursive successor (disjunction (transpose successor) (chain successor successor)) successor))))",
            "task_solution_weight": 19
        },
        {
            "elapsed_time": 0.07569229102227837,
            "num_unique_values": 11,
            "num_values_explored": 73,
            "solution": "(transpose (recursive successor equal successor))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) successor equal)\n)",
            "task_solution": "(recursive (transpose successor) successor equal)",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.09498375200200826,
            "num_unique_values": 20,
            "num_values_explored": 87,
            "solution": "(chain (recursive successor zero successor) successor)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction zero successor) successor)\n)",
            "task_solution": "(chain (disjunction zero successor) successor)",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.1682869810028933,
            "num_unique_values": 56,
            "num_values_explored": 137,
            "solution": "(chain successor (chain successor successor))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor successor))\n)",
            "task_solution": "(chain successor (chain successor successor))",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.0847187060280703,
            "num_unique_values": 12,
            "num_values_explored": 73,
            "solution": "(transpose (recursive successor successor equal))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (transpose successor) equal successor)\n)",
            "task_solution": "(recursive (transpose successor) equal successor)",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.13603516202419996,
            "num_unique_values": 39,
            "num_values_explored": 109,
            "solution": "(recursive successor zero (transpose successor))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor zero (transpose successor))\n)",
            "task_solution": "(recursive successor zero (transpose successor))",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.13349556998582557,
            "num_unique_values": 36,
            "num_values_explored": 107,
            "solution": "(recursive successor successor (transpose successor))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (transpose successor))\n)",
            "task_solution": "(recursive successor successor (transpose successor))",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.1362294489517808,
            "num_unique_values": 36,
            "num_values_explored": 108,
            "solution": "(recursive equal (transpose successor) successor)",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(recursive equal (transpose successor) successor)\n)",
            "task_solution": "(recursive equal (transpose successor) successor)",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.13863187201786786,
            "num_unique_values": 41,
            "num_values_explored": 105,
            "solution": "(recursive equal successor (transpose successor))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (transpose successor))\n)",
            "task_solution": "(recursive equal successor (transpose successor))",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.13579544599633664,
            "num_unique_values": 37,
            "num_values_explored": 111,
            "solution": "(recursive equal zero (transpose successor))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal zero (transpose successor))\n)",
            "task_solution": "(recursive equal zero (transpose successor))",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.11382024199701846,
            "num_unique_values": 26,
            "num_values_explored": 98,
            "solution": "(disjunction equal (chain successor successor))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain successor successor))\n)",
            "task_solution": "(disjunction equal (chain successor successor))",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.136001828010194,
            "num_unique_values": 37,
            "num_values_explored": 107,
            "solution": "(recursive successor (transpose successor) successor)",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive successor (transpose successor) successor)\n)",
            "task_solution": "(recursive successor (transpose successor) successor)",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.1391787760076113,
            "num_unique_values": 36,
            "num_values_explored": 110,
            "solution": "(recursive equal (transpose successor) zero)",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [ True, False, False, False, False,  True, False, False, False,\n        False],\n       [ True, False, False, False, False, False,  True, False, False,\n        False],\n       [ True, False, False, False, False, False, False,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (transpose successor) zero)\n)",
            "task_solution": "(recursive equal (transpose successor) zero)",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.16497762798098847,
            "num_unique_values": 57,
            "num_values_explored": 136,
            "solution": "(chain zero (chain successor successor))",
            "solution_weight": 5,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain zero (chain successor successor))\n)",
            "task_solution": "(chain zero (chain successor successor))",
            "task_solution_weight": 5
        },
        {
            "elapsed_time": 0.1718902820139192,
            "num_unique_values": 57,
            "num_values_explored": 137,
            "solution": "(chain (transpose successor) (chain zero successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (transpose successor) (chain zero successor))\n)",
            "task_solution": "(chain (transpose successor) (chain zero successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.14938093902310356,
            "num_unique_values": 46,
            "num_values_explored": 122,
            "solution": "(transpose (chain (disjunction zero successor) successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(transpose (chain (disjunction zero successor) successor))\n)",
            "task_solution": "(transpose (chain (disjunction zero successor) successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.13952897500712425,
            "num_unique_values": 36,
            "num_values_explored": 114,
            "solution": "(recursive successor (chain zero successor) equal)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (chain zero successor) equal)\n)",
            "task_solution": "(recursive successor (chain zero successor) equal)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.157288154005073,
            "num_unique_values": 47,
            "num_values_explored": 127,
            "solution": "(transpose (disjunction (chain successor (transpose successor)) successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (disjunction successor equal) (transpose successor))\n)",
            "task_solution": "(chain (disjunction successor equal) (transpose successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.15784659999189898,
            "num_unique_values": 47,
            "num_values_explored": 124,
            "solution": "(transpose (disjunction equal (chain successor successor)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True]])],\n    solution=(transpose (disjunction equal (chain successor successor)))\n)",
            "task_solution": "(transpose (disjunction equal (chain successor successor)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.11441496398765594,
            "num_unique_values": 34,
            "num_values_explored": 98,
            "solution": "(disjunction successor (recursive equal equal successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (disjunction successor equal) equal successor)\n)",
            "task_solution": "(recursive (disjunction successor equal) equal successor)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.14105270704021677,
            "num_unique_values": 36,
            "num_values_explored": 110,
            "solution": "(recursive (chain successor successor) zero successor)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor successor) zero successor)\n)",
            "task_solution": "(recursive (chain successor successor) zero successor)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.13753990799887106,
            "num_unique_values": 37,
            "num_values_explored": 109,
            "solution": "(recursive (transpose successor) successor (transpose successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) successor (transpose successor))\n)",
            "task_solution": "(recursive (transpose successor) successor (transpose successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.11842193297343329,
            "num_unique_values": 35,
            "num_values_explored": 98,
            "solution": "(disjunction (chain successor successor) (chain successor (transpose successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (disjunction successor (transpose successor)))\n)",
            "task_solution": "(chain successor (disjunction successor (transpose successor)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.09333046997198835,
            "num_unique_values": 16,
            "num_values_explored": 83,
            "solution": "(chain (recursive successor equal successor) zero)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor equal successor) zero)\n)",
            "task_solution": "(chain (recursive successor equal successor) zero)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.09260976099176332,
            "num_unique_values": 24,
            "num_values_explored": 86,
            "solution": "(chain (recursive equal equal successor) zero)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (transpose zero) (transpose successor) zero)\n)",
            "task_solution": "(recursive (transpose zero) (transpose successor) zero)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.09725570899900049,
            "num_unique_values": 24,
            "num_values_explored": 86,
            "solution": "(chain (transpose successor) (recursive successor zero successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (transpose successor) (disjunction zero successor))\n)",
            "task_solution": "(chain (transpose successor) (disjunction zero successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.13756171998102218,
            "num_unique_values": 38,
            "num_values_explored": 108,
            "solution": "(recursive equal (chain successor successor) successor)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (chain successor successor) successor)\n)",
            "task_solution": "(recursive equal (chain successor successor) successor)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.1390564080211334,
            "num_unique_values": 41,
            "num_values_explored": 107,
            "solution": "(recursive (transpose successor) equal (transpose successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(recursive (transpose successor) equal (transpose successor))\n)",
            "task_solution": "(recursive (transpose successor) equal (transpose successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.09496993600623682,
            "num_unique_values": 20,
            "num_values_explored": 84,
            "solution": "(chain (recursive successor successor equal) successor)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor successor) successor equal)\n)",
            "task_solution": "(recursive (chain successor successor) successor equal)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.11322381702484563,
            "num_unique_values": 26,
            "num_values_explored": 98,
            "solution": "(disjunction (transpose successor) (chain successor successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (chain successor successor))\n)",
            "task_solution": "(disjunction (transpose successor) (chain successor successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.1696959800319746,
            "num_unique_values": 56,
            "num_values_explored": 135,
            "solution": "(chain (transpose (chain successor successor)) successor)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (transpose (chain successor successor)) successor)\n)",
            "task_solution": "(chain (transpose (chain successor successor)) successor)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.09399459697306156,
            "num_unique_values": 16,
            "num_values_explored": 85,
            "solution": "(chain (recursive successor equal successor) successor)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor equal successor) successor)\n)",
            "task_solution": "(chain (recursive successor equal successor) successor)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.11272998998174444,
            "num_unique_values": 34,
            "num_values_explored": 101,
            "solution": "(disjunction successor (chain (transpose successor) zero))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction successor (transpose (chain zero successor)))\n)",
            "task_solution": "(disjunction successor (transpose (chain zero successor)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.09273398399818689,
            "num_unique_values": 20,
            "num_values_explored": 85,
            "solution": "(chain (transpose (recursive successor zero successor)) successor)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (transpose (disjunction zero successor)) successor)\n)",
            "task_solution": "(chain (transpose (disjunction zero successor)) successor)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.1382657969952561,
            "num_unique_values": 36,
            "num_values_explored": 110,
            "solution": "(recursive (transpose successor) (transpose successor) zero)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [ True, False, False, False, False,  True, False, False, False,\n        False],\n       [ True, False, False, False, False, False,  True, False, False,\n        False],\n       [ True, False, False, False, False, False, False,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (transpose successor) zero)\n)",
            "task_solution": "(recursive (transpose successor) (transpose successor) zero)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.14872740005375817,
            "num_unique_values": 47,
            "num_values_explored": 123,
            "solution": "(transpose (disjunction successor (chain successor successor)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False]])],\n    solution=(transpose (chain successor (disjunction successor equal)))\n)",
            "task_solution": "(transpose (chain successor (disjunction successor equal)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.1342561460332945,
            "num_unique_values": 37,
            "num_values_explored": 108,
            "solution": "(recursive equal successor (chain successor successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (chain successor successor))\n)",
            "task_solution": "(recursive equal successor (chain successor successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.13958587299566716,
            "num_unique_values": 36,
            "num_values_explored": 109,
            "solution": "(recursive successor successor (chain successor successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (chain successor successor))\n)",
            "task_solution": "(recursive successor successor (chain successor successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.14283670799341053,
            "num_unique_values": 40,
            "num_values_explored": 114,
            "solution": "(recursive (disjunction zero successor) successor equal)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (disjunction zero successor) successor equal)\n)",
            "task_solution": "(recursive (disjunction zero successor) successor equal)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.1091007639770396,
            "num_unique_values": 34,
            "num_values_explored": 98,
            "solution": "(disjunction successor (chain successor (transpose (disjunction zero successor))))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (transpose (disjunction successor equal)))\n)",
            "task_solution": "(chain successor (transpose (disjunction successor equal)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.1512154410011135,
            "num_unique_values": 46,
            "num_values_explored": 127,
            "solution": "(transpose (disjunction zero (chain successor successor)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(transpose (disjunction zero (chain successor successor)))\n)",
            "task_solution": "(transpose (disjunction zero (chain successor successor)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.17237480398034677,
            "num_unique_values": 56,
            "num_values_explored": 138,
            "solution": "(chain (transpose successor) (chain successor successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (transpose successor) (chain successor successor))\n)",
            "task_solution": "(chain (transpose successor) (chain successor successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.17177758598700166,
            "num_unique_values": 57,
            "num_values_explored": 138,
            "solution": "(chain successor (transpose (chain successor successor)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (transpose (chain successor successor)))\n)",
            "task_solution": "(chain successor (transpose (chain successor successor)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.17065873299725354,
            "num_unique_values": 58,
            "num_values_explored": 136,
            "solution": "(chain (disjunction successor (transpose successor)) successor)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (disjunction successor (transpose successor)) successor)\n)",
            "task_solution": "(chain (disjunction successor (transpose successor)) successor)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.24548769695684314,
            "num_unique_values": 86,
            "num_values_explored": 191,
            "solution": "(transpose (chain zero (chain successor successor)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (chain zero (chain successor successor)))\n)",
            "task_solution": "(transpose (chain zero (chain successor successor)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.09137258603004739,
            "num_unique_values": 17,
            "num_values_explored": 83,
            "solution": "(chain zero (recursive successor successor equal))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain zero (recursive successor successor equal))\n)",
            "task_solution": "(chain zero (recursive successor successor equal))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.23113258997909725,
            "num_unique_values": 86,
            "num_values_explored": 180,
            "solution": "(transpose (chain successor (chain successor successor)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False]])],\n    solution=(transpose (chain successor (chain successor successor)))\n)",
            "task_solution": "(transpose (chain successor (chain successor successor)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.11183543101651594,
            "num_unique_values": 27,
            "num_values_explored": 99,
            "solution": "(disjunction (transpose successor) (chain zero successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (chain zero successor))\n)",
            "task_solution": "(disjunction (transpose successor) (chain zero successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.15376191202085465,
            "num_unique_values": 47,
            "num_values_explored": 122,
            "solution": "(transpose (disjunction successor (chain (transpose successor) successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(chain (transpose successor) (disjunction successor equal))\n)",
            "task_solution": "(chain (transpose successor) (disjunction successor equal))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.1385369670460932,
            "num_unique_values": 40,
            "num_values_explored": 112,
            "solution": "(recursive (disjunction successor (transpose successor)) successor zero)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction zero (disjunction successor (transpose successor)))\n)",
            "task_solution": "(disjunction zero (disjunction successor (transpose successor)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.1367404769989662,
            "num_unique_values": 40,
            "num_values_explored": 108,
            "solution": "(recursive zero (transpose successor) (transpose successor))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([ True, False,  True, False,  True, False,  True, False,  True,\n       False])],\n    solution=(recursive zero (transpose successor) (transpose successor))\n)",
            "task_solution": "(recursive zero (transpose successor) (transpose successor))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.16727239999454468,
            "num_unique_values": 59,
            "num_values_explored": 137,
            "solution": "(chain (transpose (disjunction equal successor)) (disjunction successor equal))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(disjunction successor (transpose (disjunction successor equal)))\n)",
            "task_solution": "(disjunction successor (transpose (disjunction successor equal)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.13252907199785113,
            "num_unique_values": 37,
            "num_values_explored": 107,
            "solution": "(recursive successor (chain successor successor) successor)",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (chain successor successor) successor)\n)",
            "task_solution": "(recursive successor (chain successor successor) successor)",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.15338193502975628,
            "num_unique_values": 46,
            "num_values_explored": 131,
            "solution": "(transpose (recursive zero zero (transpose successor)))",
            "solution_weight": 6,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (recursive zero zero (transpose successor)))\n)",
            "task_solution": "(transpose (recursive zero zero (transpose successor)))",
            "task_solution_weight": 6
        },
        {
            "elapsed_time": 0.20046146598178893,
            "num_unique_values": 66,
            "num_values_explored": 159,
            "solution": "(disjunction successor (recursive zero zero (transpose successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(disjunction successor (recursive zero zero (transpose successor)))\n)",
            "task_solution": "(disjunction successor (recursive zero zero (transpose successor)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.236600989010185,
            "num_unique_values": 77,
            "num_values_explored": 170,
            "solution": "(recursive (transpose (disjunction successor equal)) equal (transpose successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(recursive (transpose (disjunction successor equal)) successor equal)\n)",
            "task_solution": "(recursive (transpose (disjunction successor equal)) successor equal)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.18262327398406342,
            "num_unique_values": 56,
            "num_values_explored": 139,
            "solution": "(chain zero (recursive equal successor (transpose successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain zero (recursive equal successor (transpose successor)))\n)",
            "task_solution": "(chain zero (recursive equal successor (transpose successor)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.18560432799858972,
            "num_unique_values": 66,
            "num_values_explored": 148,
            "solution": "(disjunction equal (chain successor (chain successor successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain successor (chain successor successor)))\n)",
            "task_solution": "(disjunction equal (chain successor (chain successor successor)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.13443470100173727,
            "num_unique_values": 43,
            "num_values_explored": 109,
            "solution": "(recursive successor (chain (transpose successor) zero) equal)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (transpose (chain zero successor)) equal)\n)",
            "task_solution": "(recursive successor (transpose (chain zero successor)) equal)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.178073922987096,
            "num_unique_values": 57,
            "num_values_explored": 138,
            "solution": "(chain (recursive equal (transpose successor) successor) zero)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive equal (transpose successor) successor) zero)\n)",
            "task_solution": "(chain (recursive equal (transpose successor) successor) zero)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.2636036620242521,
            "num_unique_values": 100,
            "num_values_explored": 198,
            "solution": "(chain zero (chain successor (chain successor successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain zero (chain successor (chain successor successor)))\n)",
            "task_solution": "(chain zero (chain successor (chain successor successor)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.09211991797201335,
            "num_unique_values": 24,
            "num_values_explored": 83,
            "solution": "(chain (transpose (recursive successor successor equal)) successor)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (recursive (transpose successor) equal successor) successor)\n)",
            "task_solution": "(chain (recursive (transpose successor) equal successor) successor)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.13872225297382101,
            "num_unique_values": 41,
            "num_values_explored": 111,
            "solution": "(recursive (disjunction zero successor) (transpose successor) zero)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [ True, False, False, False, False,  True, False, False, False,\n        False],\n       [ True, False, False, False, False, False,  True, False, False,\n        False],\n       [ True, False, False, False, False, False, False,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n         True],\n       [ True, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (disjunction zero successor) (transpose successor) zero)\n)",
            "task_solution": "(recursive (disjunction zero successor) (transpose successor) zero)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.1399285700172186,
            "num_unique_values": 36,
            "num_values_explored": 109,
            "solution": "(recursive (chain successor successor) zero (transpose successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor successor) zero (transpose successor))\n)",
            "task_solution": "(recursive (chain successor successor) zero (transpose successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.11183846101630479,
            "num_unique_values": 28,
            "num_values_explored": 98,
            "solution": "(disjunction equal (chain (disjunction zero successor) successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain (disjunction zero successor) successor))\n)",
            "task_solution": "(disjunction equal (chain (disjunction zero successor) successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.14797779504442587,
            "num_unique_values": 47,
            "num_values_explored": 122,
            "solution": "(transpose (recursive zero (transpose successor) (transpose successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (recursive zero (transpose successor) (transpose successor)))\n)",
            "task_solution": "(transpose (recursive zero (transpose successor) (transpose successor)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.17040528199868277,
            "num_unique_values": 60,
            "num_values_explored": 139,
            "solution": "(chain successor (disjunction successor (chain successor successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (disjunction successor equal)))\n)",
            "task_solution": "(chain successor (chain successor (disjunction successor equal)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.14986053499160334,
            "num_unique_values": 51,
            "num_values_explored": 123,
            "solution": "(transpose (chain successor (recursive successor equal successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain successor successor)) successor equal)\n)",
            "task_solution": "(recursive (transpose (chain successor successor)) successor equal)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.13256470899796113,
            "num_unique_values": 36,
            "num_values_explored": 106,
            "solution": "(recursive zero (recursive successor equal successor) successor)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([ True,  True,  True,  True,  True,  True,  True,  True, False,\n       False])],\n    solution=(recursive zero (recursive successor equal successor) successor)\n)",
            "task_solution": "(recursive zero (recursive successor equal successor) successor)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.14336463599465787,
            "num_unique_values": 42,
            "num_values_explored": 112,
            "solution": "(recursive successor (transpose (disjunction zero successor)) successor)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive successor (transpose (disjunction zero successor)) successor)\n)",
            "task_solution": "(recursive successor (transpose (disjunction zero successor)) successor)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.1718703510123305,
            "num_unique_values": 56,
            "num_values_explored": 139,
            "solution": "(chain zero (disjunction zero (chain successor successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain zero (disjunction zero (chain successor successor)))\n)",
            "task_solution": "(chain zero (disjunction zero (chain successor successor)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.14568206603871658,
            "num_unique_values": 47,
            "num_values_explored": 124,
            "solution": "(transpose (chain (recursive successor equal successor) zero))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (chain (recursive successor equal successor) zero))\n)",
            "task_solution": "(transpose (chain (recursive successor equal successor) zero))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 74.98461021197727,
            "num_unique_values": 5365,
            "num_values_explored": 50023,
            "solution": null,
            "solution_weight": null,
            "success": false,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([ True,  True,  True,  True,  True,  True,  True,  True,  True,\n       False])],\n    solution=(recursive zero zero (recursive successor equal successor))\n)",
            "task_solution": "(recursive zero zero (recursive successor equal successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.17862023902125657,
            "num_unique_values": 56,
            "num_values_explored": 136,
            "solution": "(chain (recursive zero zero (transpose successor)) successor)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive zero zero (transpose successor)) successor)\n)",
            "task_solution": "(chain (recursive zero zero (transpose successor)) successor)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.13943020097212866,
            "num_unique_values": 37,
            "num_values_explored": 108,
            "solution": "(recursive (chain zero successor) (transpose successor) equal)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain zero successor) (transpose successor) equal)\n)",
            "task_solution": "(recursive (chain zero successor) (transpose successor) equal)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.11189192498568445,
            "num_unique_values": 35,
            "num_values_explored": 96,
            "solution": "(disjunction successor (transpose (recursive successor successor equal)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(disjunction successor (recursive (transpose successor) equal successor))\n)",
            "task_solution": "(disjunction successor (recursive (transpose successor) equal successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.09592002001591027,
            "num_unique_values": 22,
            "num_values_explored": 84,
            "solution": "(chain (recursive successor successor equal) (transpose successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (transpose successor)) successor equal)\n)",
            "task_solution": "(recursive (chain successor (transpose successor)) successor equal)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.13949138001771644,
            "num_unique_values": 36,
            "num_values_explored": 110,
            "solution": "(recursive (disjunction equal successor) (transpose successor) zero)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False, False,  True,  True, False, False, False, False,\n        False],\n       [ True, False, False, False,  True,  True, False, False, False,\n        False],\n       [ True, False, False, False, False,  True,  True, False, False,\n        False],\n       [ True, False, False, False, False, False,  True,  True, False,\n        False],\n       [ True, False, False, False, False, False, False,  True,  True,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n         True],\n       [ True, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (disjunction successor equal) (transpose successor) zero)\n)",
            "task_solution": "(recursive (disjunction successor equal) (transpose successor) zero)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.1376661870162934,
            "num_unique_values": 36,
            "num_values_explored": 111,
            "solution": "(recursive successor zero (recursive successor equal successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor zero (recursive successor equal successor))\n)",
            "task_solution": "(recursive successor zero (recursive successor equal successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.13923444296233356,
            "num_unique_values": 41,
            "num_values_explored": 110,
            "solution": "(recursive (chain (transpose successor) zero) successor (transpose successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain zero successor) (transpose successor) successor)\n)",
            "task_solution": "(recursive (chain zero successor) (transpose successor) successor)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.13332334102597088,
            "num_unique_values": 36,
            "num_values_explored": 107,
            "solution": "(recursive successor equal (recursive successor equal successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor equal (recursive successor equal successor))\n)",
            "task_solution": "(recursive successor equal (recursive successor equal successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.13990882004145533,
            "num_unique_values": 37,
            "num_values_explored": 109,
            "solution": "(recursive successor successor (recursive successor equal successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (recursive successor equal successor))\n)",
            "task_solution": "(recursive successor successor (recursive successor equal successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.18199998897034675,
            "num_unique_values": 67,
            "num_values_explored": 152,
            "solution": "(disjunction successor (chain zero (recursive successor successor (transpose successor))))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor zero (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive successor zero (transpose (chain successor successor)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.13984596502268687,
            "num_unique_values": 36,
            "num_values_explored": 110,
            "solution": "(recursive (disjunction equal successor) zero (transpose successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (disjunction successor equal) zero (transpose successor))\n)",
            "task_solution": "(recursive (disjunction successor equal) zero (transpose successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.1568578890291974,
            "num_unique_values": 46,
            "num_values_explored": 126,
            "solution": "(transpose (disjunction (chain (transpose successor) successor) (chain successor successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True]])],\n    solution=(transpose (chain (disjunction successor (transpose successor)) successor))\n)",
            "task_solution": "(transpose (chain (disjunction successor (transpose successor)) successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.2208860739483498,
            "num_unique_values": 80,
            "num_values_explored": 168,
            "solution": "(recursive (disjunction equal (chain successor (chain successor (transpose successor)))) successor (chain successor (transpose successor)))",
            "solution_weight": 14,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (recursive successor equal successor))\n)",
            "task_solution": "(recursive equal successor (recursive successor equal successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.15618104999884963,
            "num_unique_values": 49,
            "num_values_explored": 127,
            "solution": "(transpose (chain successor (recursive successor successor equal)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain successor successor)) equal successor)\n)",
            "task_solution": "(recursive (transpose (chain successor successor)) equal successor)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.13368569395970553,
            "num_unique_values": 43,
            "num_values_explored": 109,
            "solution": "(recursive (chain (transpose successor) successor) equal successor)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (chain (transpose successor) successor) equal successor)\n)",
            "task_solution": "(recursive (chain (transpose successor) successor) equal successor)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.21339347399771214,
            "num_unique_values": 82,
            "num_values_explored": 161,
            "solution": "(recursive zero zero (transpose (chain successor successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([ True, False,  True, False, False, False, False, False, False,\n       False])],\n    solution=(recursive zero zero (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive zero zero (transpose (chain successor successor)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.1087940099532716,
            "num_unique_values": 28,
            "num_values_explored": 94,
            "solution": "(disjunction successor (transpose (recursive successor equal successor)))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction successor (recursive (transpose successor) successor equal))\n)",
            "task_solution": "(disjunction successor (recursive (transpose successor) successor equal))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.13854185002855957,
            "num_unique_values": 37,
            "num_values_explored": 108,
            "solution": "(recursive successor (transpose successor) (disjunction successor equal))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive successor (transpose successor) (disjunction successor equal))\n)",
            "task_solution": "(recursive successor (transpose successor) (disjunction successor equal))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.17408173601143062,
            "num_unique_values": 56,
            "num_values_explored": 139,
            "solution": "(chain (disjunction successor equal) (disjunction equal successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (disjunction successor equal) (disjunction successor equal))\n)",
            "task_solution": "(chain (disjunction successor equal) (disjunction successor equal))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.11022225802298635,
            "num_unique_values": 28,
            "num_values_explored": 95,
            "solution": "(disjunction (transpose successor) (recursive successor successor equal))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (recursive successor successor equal))\n)",
            "task_solution": "(disjunction (transpose successor) (recursive successor successor equal))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.13366127997869626,
            "num_unique_values": 39,
            "num_values_explored": 106,
            "solution": "(recursive (transpose successor) successor (chain successor successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) successor (chain successor successor))\n)",
            "task_solution": "(recursive (transpose successor) successor (chain successor successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.14219163899542764,
            "num_unique_values": 36,
            "num_values_explored": 107,
            "solution": "(recursive successor (transpose successor) (disjunction zero successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive successor (transpose successor) (disjunction zero successor))\n)",
            "task_solution": "(recursive successor (transpose successor) (disjunction zero successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.15136715199332684,
            "num_unique_values": 37,
            "num_values_explored": 111,
            "solution": "(recursive equal (transpose successor) (chain zero successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (transpose successor) (chain zero successor))\n)",
            "task_solution": "(recursive equal (transpose successor) (chain zero successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.15068427694495767,
            "num_unique_values": 47,
            "num_values_explored": 121,
            "solution": "(transpose (chain (recursive successor equal successor) successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False]])],\n    solution=(transpose (chain (recursive successor equal successor) successor))\n)",
            "task_solution": "(transpose (chain (recursive successor equal successor) successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.13587089598877355,
            "num_unique_values": 41,
            "num_values_explored": 107,
            "solution": "(recursive (chain successor successor) successor (transpose successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor successor) successor (transpose successor))\n)",
            "task_solution": "(recursive (chain successor successor) successor (transpose successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.1382830329821445,
            "num_unique_values": 38,
            "num_values_explored": 108,
            "solution": "(recursive (transpose successor) (chain successor successor) successor)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (chain successor successor) successor)\n)",
            "task_solution": "(recursive (transpose successor) (chain successor successor) successor)",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.19202165195019916,
            "num_unique_values": 66,
            "num_values_explored": 156,
            "solution": "(disjunction successor (recursive equal (chain successor successor) equal))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True,  True,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True,  True,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True,  True,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction successor (recursive equal successor (transpose successor)))\n)",
            "task_solution": "(disjunction successor (recursive equal successor (transpose successor)))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.13086839299649,
            "num_unique_values": 37,
            "num_values_explored": 105,
            "solution": "(recursive equal (disjunction zero successor) (transpose successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (disjunction zero successor) (transpose successor))\n)",
            "task_solution": "(recursive equal (disjunction zero successor) (transpose successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.12915094604250044,
            "num_unique_values": 39,
            "num_values_explored": 106,
            "solution": "(recursive equal (recursive equal successor equal) successor)",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive equal equal (recursive successor equal successor))\n)",
            "task_solution": "(recursive equal equal (recursive successor equal successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.09572477597976103,
            "num_unique_values": 19,
            "num_values_explored": 88,
            "solution": "(chain (transpose successor) (recursive successor successor equal))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (transpose successor) (recursive successor successor equal))\n)",
            "task_solution": "(chain (transpose successor) (recursive successor successor equal))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.13540363096399233,
            "num_unique_values": 41,
            "num_values_explored": 110,
            "solution": "(recursive equal (chain zero successor) (transpose successor))",
            "solution_weight": 7,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (chain zero successor) (transpose successor))\n)",
            "task_solution": "(recursive equal (chain zero successor) (transpose successor))",
            "task_solution_weight": 7
        },
        {
            "elapsed_time": 0.19622614298714325,
            "num_unique_values": 66,
            "num_values_explored": 161,
            "solution": "(disjunction zero (disjunction (transpose successor) (chain successor successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction zero (disjunction (transpose successor) (chain successor successor)))\n)",
            "task_solution": "(disjunction zero (disjunction (transpose successor) (chain successor successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.14935411902843043,
            "num_unique_values": 55,
            "num_values_explored": 121,
            "solution": "(transpose (disjunction equal (chain (recursive successor successor equal) successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True]])],\n    solution=(recursive equal (transpose successor) (recursive successor successor equal))\n)",
            "task_solution": "(recursive equal (transpose successor) (recursive successor successor equal))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.2465516950469464,
            "num_unique_values": 86,
            "num_values_explored": 195,
            "solution": "(transpose (chain successor (recursive successor (transpose successor) successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(transpose (chain successor (recursive successor (transpose successor) successor)))\n)",
            "task_solution": "(transpose (chain successor (recursive successor (transpose successor) successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1919339729938656,
            "num_unique_values": 67,
            "num_values_explored": 153,
            "solution": "(disjunction successor (transpose (chain (disjunction zero successor) successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(disjunction successor (transpose (chain (disjunction zero successor) successor)))\n)",
            "task_solution": "(disjunction successor (transpose (chain (disjunction zero successor) successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.18715322902426124,
            "num_unique_values": 72,
            "num_values_explored": 151,
            "solution": "(disjunction equal (chain (transpose (recursive successor successor equal)) successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive equal (transpose successor) (chain (transpose successor) successor))\n)",
            "task_solution": "(recursive equal (transpose successor) (chain (transpose successor) successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.16108788904966787,
            "num_unique_values": 57,
            "num_values_explored": 131,
            "solution": "(chain zero (recursive successor (chain successor successor) successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain zero (recursive successor (chain successor successor) successor))\n)",
            "task_solution": "(chain zero (recursive successor (chain successor successor) successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1673029080266133,
            "num_unique_values": 56,
            "num_values_explored": 136,
            "solution": "(chain (recursive successor successor (chain successor successor)) zero)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor successor (chain successor successor)) zero)\n)",
            "task_solution": "(chain (recursive successor successor (chain successor successor)) zero)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1494519020197913,
            "num_unique_values": 52,
            "num_values_explored": 127,
            "solution": "(transpose (recursive successor (transpose successor) (chain successor successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [ True, False, False,  True, False, False,  True, False, False,\n         True],\n       [False,  True, False, False,  True, False, False,  True, False,\n        False],\n       [False, False,  True, False, False,  True, False, False,  True,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n         True],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) successor (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive (transpose successor) successor (transpose (chain successor successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.3825093890191056,
            "num_unique_values": 127,
            "num_values_explored": 270,
            "solution": "(transpose (chain zero (chain successor (disjunction successor equal))))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (chain zero (chain successor (disjunction successor equal))))\n)",
            "task_solution": "(transpose (chain zero (chain successor (disjunction successor equal))))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.22762383002554998,
            "num_unique_values": 79,
            "num_values_explored": 164,
            "solution": "(recursive (recursive successor successor (transpose successor)) (recursive equal zero (transpose successor)) successor)",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (recursive successor successor (transpose successor)) equal successor)\n)",
            "task_solution": "(recursive (recursive successor successor (transpose successor)) equal successor)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.15429706603754312,
            "num_unique_values": 48,
            "num_values_explored": 124,
            "solution": "(transpose (disjunction zero (recursive successor (transpose successor) equal)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction zero (recursive successor (transpose successor) equal)))\n)",
            "task_solution": "(transpose (disjunction zero (recursive successor (transpose successor) equal)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.2046873500221409,
            "num_unique_values": 58,
            "num_values_explored": 136,
            "solution": "(chain (transpose successor) (disjunction equal (chain successor successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (transpose successor) (disjunction equal (chain successor successor)))\n)",
            "task_solution": "(chain (transpose successor) (disjunction equal (chain successor successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.15829773200675845,
            "num_unique_values": 44,
            "num_values_explored": 110,
            "solution": "(recursive (transpose successor) equal (recursive successor equal successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (transpose successor) equal (recursive successor equal successor))\n)",
            "task_solution": "(recursive (transpose successor) equal (recursive successor equal successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.13654923101421446,
            "num_unique_values": 39,
            "num_values_explored": 106,
            "solution": "(recursive (chain (transpose successor) successor) successor (transpose successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (chain (transpose successor) successor) successor (transpose successor))\n)",
            "task_solution": "(recursive (chain (transpose successor) successor) successor (transpose successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.16265582700725645,
            "num_unique_values": 58,
            "num_values_explored": 133,
            "solution": "(chain (transpose (chain successor successor)) (chain successor successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (transpose (chain successor successor)) (chain successor successor))\n)",
            "task_solution": "(chain (transpose (chain successor successor)) (chain successor successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.2202315519680269,
            "num_unique_values": 78,
            "num_values_explored": 164,
            "solution": "(recursive equal (recursive equal successor (transpose successor)) successor)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive equal (recursive equal successor (transpose successor)) successor)\n)",
            "task_solution": "(recursive equal (recursive equal successor (transpose successor)) successor)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.2682773689739406,
            "num_unique_values": 96,
            "num_values_explored": 207,
            "solution": "(chain (disjunction (transpose successor) (chain zero successor)) successor)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (disjunction (transpose successor) (chain zero successor)) successor)\n)",
            "task_solution": "(chain (disjunction (transpose successor) (chain zero successor)) successor)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.177959224965889,
            "num_unique_values": 56,
            "num_values_explored": 140,
            "solution": "(chain (transpose (chain (disjunction zero successor) successor)) successor)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (transpose (chain (disjunction zero successor) successor)) successor)\n)",
            "task_solution": "(chain (transpose (chain (disjunction zero successor) successor)) successor)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.2437346339575015,
            "num_unique_values": 76,
            "num_values_explored": 172,
            "solution": "(recursive (chain successor (chain successor successor)) zero successor)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (chain successor successor)) zero successor)\n)",
            "task_solution": "(recursive (chain successor (chain successor successor)) zero successor)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.17159975500544533,
            "num_unique_values": 56,
            "num_values_explored": 136,
            "solution": "(chain (disjunction successor equal) (disjunction successor (transpose successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(chain (disjunction successor equal) (disjunction successor (transpose successor)))\n)",
            "task_solution": "(chain (disjunction successor equal) (disjunction successor (transpose successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.21661276399390772,
            "num_unique_values": 77,
            "num_values_explored": 167,
            "solution": "(recursive (chain successor (chain successor successor)) equal (transpose successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (chain successor successor)) successor equal)\n)",
            "task_solution": "(recursive (chain successor (chain successor successor)) successor equal)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.20993171795271337,
            "num_unique_values": 80,
            "num_values_explored": 157,
            "solution": "(recursive (disjunction successor equal) successor (recursive equal successor (transpose successor)))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (recursive equal successor (transpose successor)))\n)",
            "task_solution": "(recursive equal successor (recursive equal successor (transpose successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.14583430398488417,
            "num_unique_values": 48,
            "num_values_explored": 121,
            "solution": "(transpose (recursive successor (transpose successor) (disjunction successor equal)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(recursive (transpose successor) (disjunction successor equal) (transpose successor))\n)",
            "task_solution": "(recursive (transpose successor) (disjunction successor equal) (transpose successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.14057974301977083,
            "num_unique_values": 37,
            "num_values_explored": 105,
            "solution": "(recursive (chain successor successor) equal (chain successor successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor successor) equal (chain successor successor))\n)",
            "task_solution": "(recursive (chain successor successor) equal (chain successor successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.2362561349873431,
            "num_unique_values": 84,
            "num_values_explored": 166,
            "solution": "(recursive (chain (disjunction successor equal) (transpose successor)) equal (recursive successor equal successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False]])],\n    solution=(recursive (transpose successor) (disjunction successor (transpose successor)) equal)\n)",
            "task_solution": "(recursive (transpose successor) (disjunction successor (transpose successor)) equal)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.17391314398264512,
            "num_unique_values": 57,
            "num_values_explored": 146,
            "solution": "(chain successor (disjunction (chain successor successor) (transpose successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (disjunction (transpose successor) (chain successor successor)))\n)",
            "task_solution": "(chain successor (disjunction (transpose successor) (chain successor successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.19187761400826275,
            "num_unique_values": 66,
            "num_values_explored": 157,
            "solution": "(disjunction zero (disjunction successor (transpose (chain successor successor))))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(disjunction zero (disjunction successor (transpose (chain successor successor))))\n)",
            "task_solution": "(disjunction zero (disjunction successor (transpose (chain successor successor))))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.13814355502836406,
            "num_unique_values": 42,
            "num_values_explored": 111,
            "solution": "(recursive (recursive successor equal successor) (transpose successor) zero)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (recursive equal (transpose successor) zero) successor)\n)",
            "task_solution": "(recursive successor (recursive equal (transpose successor) zero) successor)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.2587748640216887,
            "num_unique_values": 96,
            "num_values_explored": 206,
            "solution": "(chain (disjunction successor (transpose (disjunction equal successor))) successor)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (disjunction successor (transpose (disjunction successor equal))) successor)\n)",
            "task_solution": "(chain (disjunction successor (transpose (disjunction successor equal))) successor)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.20371787395561114,
            "num_unique_values": 66,
            "num_values_explored": 151,
            "solution": "(disjunction (transpose successor) (chain successor (chain successor successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [False,  True, False, False, False,  True, False, False, False,\n        False],\n       [False, False,  True, False, False, False,  True, False, False,\n        False],\n       [False, False, False,  True, False, False, False,  True, False,\n        False],\n       [False, False, False, False,  True, False, False, False,  True,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n         True],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (transpose successor) (chain successor (chain successor successor)))\n)",
            "task_solution": "(disjunction (transpose successor) (chain successor (chain successor successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1969324909732677,
            "num_unique_values": 66,
            "num_values_explored": 157,
            "solution": "(disjunction successor (chain (disjunction equal successor) (transpose successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction successor (chain (disjunction successor equal) (transpose successor)))\n)",
            "task_solution": "(disjunction successor (chain (disjunction successor equal) (transpose successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.13778634398477152,
            "num_unique_values": 36,
            "num_values_explored": 109,
            "solution": "(recursive (chain successor successor) (chain successor successor) successor)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor successor) (chain successor successor) successor)\n)",
            "task_solution": "(recursive (chain successor successor) (chain successor successor) successor)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.21333612297894433,
            "num_unique_values": 76,
            "num_values_explored": 161,
            "solution": "(recursive equal (transpose (chain successor successor)) (transpose successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive equal (transpose (chain successor successor)) (transpose successor))\n)",
            "task_solution": "(recursive equal (transpose (chain successor successor)) (transpose successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.13558841601479799,
            "num_unique_values": 40,
            "num_values_explored": 109,
            "solution": "(recursive successor successor (transpose (recursive successor successor equal)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (recursive (transpose successor) equal successor))\n)",
            "task_solution": "(recursive successor successor (recursive (transpose successor) equal successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.1338625390199013,
            "num_unique_values": 43,
            "num_values_explored": 107,
            "solution": "(recursive (disjunction equal (transpose successor)) zero (transpose successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(recursive (transpose (disjunction successor equal)) zero (transpose successor))\n)",
            "task_solution": "(recursive (transpose (disjunction successor equal)) zero (transpose successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.23385175003204495,
            "num_unique_values": 86,
            "num_values_explored": 190,
            "solution": "(transpose (chain (disjunction successor equal) (disjunction equal successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n         True]])],\n    solution=(transpose (chain (disjunction successor equal) (disjunction successor equal)))\n)",
            "task_solution": "(transpose (chain (disjunction successor equal) (disjunction successor equal)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.17040492501109838,
            "num_unique_values": 56,
            "num_values_explored": 136,
            "solution": "(chain (recursive successor successor (chain successor successor)) successor)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor successor (chain successor successor)) successor)\n)",
            "task_solution": "(chain (recursive successor successor (chain successor successor)) successor)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.23550642502959818,
            "num_unique_values": 86,
            "num_values_explored": 184,
            "solution": "(transpose (chain (disjunction successor equal) (chain successor successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False]])],\n    solution=(transpose (chain successor (chain successor (disjunction successor equal))))\n)",
            "task_solution": "(transpose (chain successor (chain successor (disjunction successor equal))))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.18633984797634184,
            "num_unique_values": 67,
            "num_values_explored": 150,
            "solution": "(disjunction equal (chain (transpose (chain successor successor)) successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(disjunction equal (chain (transpose (chain successor successor)) successor))\n)",
            "task_solution": "(disjunction equal (chain (transpose (chain successor successor)) successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.2753036340000108,
            "num_unique_values": 106,
            "num_values_explored": 210,
            "solution": "(disjunction equal (recursive (recursive (chain successor successor) successor (transpose successor)) successor equal))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True, False,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal successor (recursive (transpose successor) equal successor))\n)",
            "task_solution": "(recursive equal successor (recursive (transpose successor) equal successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.18077115097548813,
            "num_unique_values": 62,
            "num_values_explored": 144,
            "solution": "(chain (transpose (chain successor successor)) (chain zero successor))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (transpose (chain successor successor)) (chain zero successor))\n)",
            "task_solution": "(chain (transpose (chain successor successor)) (chain zero successor))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.24010216700844467,
            "num_unique_values": 86,
            "num_values_explored": 196,
            "solution": "(transpose (recursive zero zero (transpose (chain successor successor))))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (recursive zero zero (transpose (chain successor successor))))\n)",
            "task_solution": "(transpose (recursive zero zero (transpose (chain successor successor))))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.2160531550180167,
            "num_unique_values": 81,
            "num_values_explored": 166,
            "solution": "(recursive successor successor (chain successor (chain successor successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (chain successor (chain successor successor)))\n)",
            "task_solution": "(recursive successor successor (chain successor (chain successor successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.14049849298316985,
            "num_unique_values": 38,
            "num_values_explored": 110,
            "solution": "(recursive (disjunction equal successor) (chain zero successor) equal)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (disjunction successor equal) (chain zero successor) equal)\n)",
            "task_solution": "(recursive (disjunction successor equal) (chain zero successor) equal)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.18672709999373183,
            "num_unique_values": 56,
            "num_values_explored": 147,
            "solution": "(chain successor (disjunction successor (chain successor (transpose successor))))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (transpose (disjunction successor equal))))\n)",
            "task_solution": "(chain successor (chain successor (transpose (disjunction successor equal))))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.17404249898390844,
            "num_unique_values": 58,
            "num_values_explored": 136,
            "solution": "(chain (transpose successor) (disjunction successor (chain successor (disjunction zero successor))))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False,  True,  True, False, False, False, False, False,\n        False],\n       [False, False, False,  True,  True, False, False, False, False,\n        False],\n       [False, False, False, False,  True,  True, False, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (transpose successor) (chain successor (disjunction successor equal)))\n)",
            "task_solution": "(chain (transpose successor) (chain successor (disjunction successor equal)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.3154336020234041,
            "num_unique_values": 126,
            "num_values_explored": 244,
            "solution": "(transpose (chain zero (chain successor (chain successor successor))))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(transpose (chain zero (chain successor (chain successor successor))))\n)",
            "task_solution": "(transpose (chain zero (chain successor (chain successor successor))))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.22459821496158838,
            "num_unique_values": 87,
            "num_values_explored": 176,
            "solution": "(transpose (disjunction equal (chain successor (chain successor successor))))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True]])],\n    solution=(transpose (disjunction equal (chain successor (chain successor successor))))\n)",
            "task_solution": "(transpose (disjunction equal (chain successor (chain successor successor))))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.21372637600870803,
            "num_unique_values": 79,
            "num_values_explored": 170,
            "solution": "(recursive (transpose successor) (transpose (chain successor successor)) zero)",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [ True, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [ True, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [ True, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (transpose (chain successor successor)) zero)\n)",
            "task_solution": "(recursive (transpose successor) (transpose (chain successor successor)) zero)",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.2302857160102576,
            "num_unique_values": 89,
            "num_values_explored": 182,
            "solution": "(transpose (disjunction successor (recursive equal (transpose successor) successor)))",
            "solution_weight": 8,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False,  True,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False,  True,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False,  True,  True, False,  True, False,\n         True],\n       [False, False, False, False, False,  True,  True, False,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction successor (recursive equal (transpose successor) successor)))\n)",
            "task_solution": "(transpose (disjunction successor (recursive equal (transpose successor) successor)))",
            "task_solution_weight": 8
        },
        {
            "elapsed_time": 0.21834517299430445,
            "num_unique_values": 76,
            "num_values_explored": 167,
            "solution": "(recursive equal (transpose successor) (recursive successor zero (transpose successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(recursive equal (transpose successor) (recursive successor zero (transpose successor)))\n)",
            "task_solution": "(recursive equal (transpose successor) (recursive successor zero (transpose successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.18622412101831287,
            "num_unique_values": 66,
            "num_values_explored": 150,
            "solution": "(disjunction equal (recursive successor successor (recursive successor equal successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (disjunction successor equal) successor (recursive successor equal successor))\n)",
            "task_solution": "(recursive (disjunction successor equal) successor (recursive successor equal successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1370566409896128,
            "num_unique_values": 36,
            "num_values_explored": 107,
            "solution": "(recursive (transpose successor) (chain successor (transpose successor)) (transpose successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (chain successor (transpose successor)) (transpose successor))\n)",
            "task_solution": "(recursive (transpose successor) (chain successor (transpose successor)) (transpose successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.2362729989690706,
            "num_unique_values": 86,
            "num_values_explored": 179,
            "solution": "(transpose (disjunction equal (recursive successor successor (chain successor successor))))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction equal (recursive successor successor (chain successor successor))))\n)",
            "task_solution": "(transpose (disjunction equal (recursive successor successor (chain successor successor))))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1802764050080441,
            "num_unique_values": 56,
            "num_values_explored": 136,
            "solution": "(chain (disjunction zero (chain successor successor)) (chain successor successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction zero (chain successor successor)) (chain successor successor))\n)",
            "task_solution": "(chain (disjunction zero (chain successor successor)) (chain successor successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.19881079596234486,
            "num_unique_values": 68,
            "num_values_explored": 156,
            "solution": "(disjunction (chain successor successor) (transpose (recursive successor equal successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (chain successor successor) (recursive (transpose successor) successor equal))\n)",
            "task_solution": "(disjunction (chain successor successor) (recursive (transpose successor) successor equal))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.24540066497866064,
            "num_unique_values": 86,
            "num_values_explored": 195,
            "solution": "(transpose (chain (disjunction successor (transpose successor)) (disjunction successor equal)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True]])],\n    solution=(transpose (chain (disjunction successor (transpose successor)) (disjunction successor equal)))\n)",
            "task_solution": "(transpose (chain (disjunction successor (transpose successor)) (disjunction successor equal)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.21653054404305294,
            "num_unique_values": 80,
            "num_values_explored": 160,
            "solution": "(recursive (disjunction equal (recursive (chain successor (transpose successor)) (disjunction equal (chain successor successor)) successor)) (chain successor successor) successor)",
            "solution_weight": 18,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (chain successor (disjunction successor (transpose successor))) successor)\n)",
            "task_solution": "(recursive equal (chain successor (disjunction successor (transpose successor))) successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.13133759499760345,
            "num_unique_values": 36,
            "num_values_explored": 106,
            "solution": "(recursive successor (chain successor successor) (disjunction successor (transpose successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (chain successor successor) (disjunction successor (transpose successor)))\n)",
            "task_solution": "(recursive successor (chain successor successor) (disjunction successor (transpose successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.17786756297573447,
            "num_unique_values": 59,
            "num_values_explored": 138,
            "solution": "(chain successor (transpose (chain (recursive successor successor equal) successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (transpose (chain successor successor))) equal successor)\n)",
            "task_solution": "(recursive (chain successor (transpose (chain successor successor))) equal successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1741599739762023,
            "num_unique_values": 56,
            "num_values_explored": 138,
            "solution": "(chain zero (recursive (disjunction equal (chain zero successor)) successor (transpose successor)))",
            "solution_weight": 11,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain zero (disjunction successor (recursive equal successor (transpose successor))))\n)",
            "task_solution": "(chain zero (disjunction successor (recursive equal successor (transpose successor))))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.17616402899147943,
            "num_unique_values": 57,
            "num_values_explored": 141,
            "solution": "(chain (transpose successor) (recursive (chain successor successor) zero successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (transpose successor) (recursive (chain successor successor) zero successor))\n)",
            "task_solution": "(chain (transpose successor) (recursive (chain successor successor) zero successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.15058934001717716,
            "num_unique_values": 47,
            "num_values_explored": 121,
            "solution": "(transpose (disjunction equal (chain successor (recursive successor equal successor))))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True]])],\n    solution=(transpose (disjunction equal (recursive (chain successor successor) equal successor)))\n)",
            "task_solution": "(transpose (disjunction equal (recursive (chain successor successor) equal successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.20910751103656366,
            "num_unique_values": 78,
            "num_values_explored": 161,
            "solution": "(recursive successor (chain (transpose (chain successor successor)) successor) successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive successor (chain (transpose (chain successor successor)) successor) successor)\n)",
            "task_solution": "(recursive successor (chain (transpose (chain successor successor)) successor) successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.17418495402671397,
            "num_unique_values": 63,
            "num_values_explored": 132,
            "solution": "(chain (recursive successor (transpose successor) (disjunction successor equal)) successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (recursive successor (transpose successor) (disjunction successor equal)) successor)\n)",
            "task_solution": "(chain (recursive successor (transpose successor) (disjunction successor equal)) successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.2407625580090098,
            "num_unique_values": 77,
            "num_values_explored": 176,
            "solution": "(recursive (transpose (recursive zero zero (transpose successor))) successor equal)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (transpose (recursive zero zero (transpose successor))) successor equal)\n)",
            "task_solution": "(recursive (transpose (recursive zero zero (transpose successor))) successor equal)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.13779031299054623,
            "num_unique_values": 40,
            "num_values_explored": 109,
            "solution": "(recursive (transpose successor) successor (disjunction equal (chain successor successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) successor (disjunction equal (chain successor successor)))\n)",
            "task_solution": "(recursive (transpose successor) successor (disjunction equal (chain successor successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.23633694200543687,
            "num_unique_values": 86,
            "num_values_explored": 177,
            "solution": "(transpose (chain (recursive successor (chain successor successor) successor) successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False]])],\n    solution=(transpose (chain (recursive successor (chain successor successor) successor) successor))\n)",
            "task_solution": "(transpose (chain (recursive successor (chain successor successor) successor) successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.3592656680266373,
            "num_unique_values": 137,
            "num_values_explored": 278,
            "solution": "(chain successor (chain successor (chain successor (chain successor successor))))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (chain successor (chain successor successor))))\n)",
            "task_solution": "(chain successor (chain successor (chain successor (chain successor successor))))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.17721704801078886,
            "num_unique_values": 57,
            "num_values_explored": 138,
            "solution": "(chain (disjunction successor equal) (disjunction equal (chain successor successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (disjunction successor equal) (disjunction equal (chain successor successor)))\n)",
            "task_solution": "(chain (disjunction successor equal) (disjunction equal (chain successor successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.22010303003480658,
            "num_unique_values": 78,
            "num_values_explored": 162,
            "solution": "(recursive (disjunction zero successor) (transpose (chain successor successor)) equal)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (disjunction zero successor) (transpose (chain successor successor)) equal)\n)",
            "task_solution": "(recursive (disjunction zero successor) (transpose (chain successor successor)) equal)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.13786365604028106,
            "num_unique_values": 38,
            "num_values_explored": 108,
            "solution": "(recursive (disjunction zero (chain successor successor)) successor (transpose successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (disjunction zero (chain successor successor)) successor (transpose successor))\n)",
            "task_solution": "(recursive (disjunction zero (chain successor successor)) successor (transpose successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.21261255099670961,
            "num_unique_values": 77,
            "num_values_explored": 161,
            "solution": "(recursive successor successor (recursive equal (chain successor successor) successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (recursive equal (chain successor successor) successor))\n)",
            "task_solution": "(recursive successor successor (recursive equal (chain successor successor) successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1913979480159469,
            "num_unique_values": 66,
            "num_values_explored": 154,
            "solution": "(disjunction equal (recursive (chain successor successor) zero (transpose successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (recursive (chain successor successor) zero (transpose successor)))\n)",
            "task_solution": "(disjunction equal (recursive (chain successor successor) zero (transpose successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.14338319096714258,
            "num_unique_values": 41,
            "num_values_explored": 105,
            "solution": "(recursive (chain successor successor) (disjunction zero successor) (transpose successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor successor) (disjunction zero successor) (transpose successor))\n)",
            "task_solution": "(recursive (chain successor successor) (disjunction zero successor) (transpose successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.17050458397716284,
            "num_unique_values": 56,
            "num_values_explored": 131,
            "solution": "(chain (disjunction successor equal) (recursive successor (transpose successor) successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(chain (disjunction successor equal) (recursive successor (transpose successor) successor))\n)",
            "task_solution": "(chain (disjunction successor equal) (recursive successor (transpose successor) successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.23522540205158293,
            "num_unique_values": 86,
            "num_values_explored": 187,
            "solution": "(transpose (chain (transpose (disjunction (chain successor successor) (transpose successor))) successor))",
            "solution_weight": 10,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(transpose (chain (disjunction successor (transpose (chain successor successor))) successor))\n)",
            "task_solution": "(transpose (chain (disjunction successor (transpose (chain successor successor))) successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1510421370039694,
            "num_unique_values": 52,
            "num_values_explored": 125,
            "solution": "(transpose (recursive successor successor (transpose (recursive successor equal successor))))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (recursive (transpose successor) successor equal) successor)\n)",
            "task_solution": "(recursive (transpose successor) (recursive (transpose successor) successor equal) successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.23212147498270497,
            "num_unique_values": 83,
            "num_values_explored": 173,
            "solution": "(recursive (chain (disjunction zero successor) successor) successor (transpose successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (disjunction zero successor) successor) successor (transpose successor))\n)",
            "task_solution": "(recursive (chain (disjunction zero successor) successor) successor (transpose successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.21853357000509277,
            "num_unique_values": 81,
            "num_values_explored": 160,
            "solution": "(recursive equal (chain zero successor) (transpose (chain successor successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (chain zero successor) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive equal (chain zero successor) (transpose (chain successor successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.23538068699417636,
            "num_unique_values": 78,
            "num_values_explored": 171,
            "solution": "(recursive (disjunction successor equal) equal (recursive successor equal successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (disjunction successor equal) equal (recursive successor equal successor))\n)",
            "task_solution": "(recursive (disjunction successor equal) equal (recursive successor equal successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.17215310398023576,
            "num_unique_values": 56,
            "num_values_explored": 139,
            "solution": "(chain (disjunction zero (chain successor successor)) (disjunction zero successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction zero (chain successor successor)) (disjunction zero successor))\n)",
            "task_solution": "(chain (disjunction zero (chain successor successor)) (disjunction zero successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.17632642103126273,
            "num_unique_values": 56,
            "num_values_explored": 142,
            "solution": "(chain successor (disjunction successor (transpose (recursive successor successor equal))))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (disjunction successor (recursive (transpose successor) equal successor)))\n)",
            "task_solution": "(chain successor (disjunction successor (recursive (transpose successor) equal successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.23117253300733864,
            "num_unique_values": 80,
            "num_values_explored": 166,
            "solution": "(recursive successor (recursive successor successor (chain successor successor)) equal)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (recursive successor successor (chain successor successor)) equal)\n)",
            "task_solution": "(recursive successor (recursive successor successor (chain successor successor)) equal)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.14940672705415636,
            "num_unique_values": 39,
            "num_values_explored": 112,
            "solution": "(recursive (transpose (disjunction zero successor)) equal (chain zero successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose (disjunction zero successor)) equal (chain zero successor))\n)",
            "task_solution": "(recursive (transpose (disjunction zero successor)) equal (chain zero successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1819906359887682,
            "num_unique_values": 56,
            "num_values_explored": 139,
            "solution": "(chain (recursive successor (chain (transpose successor) successor) successor) successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor (chain (transpose successor) successor) successor) successor)\n)",
            "task_solution": "(chain (recursive successor (chain (transpose successor) successor) successor) successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.2605150119634345,
            "num_unique_values": 77,
            "num_values_explored": 169,
            "solution": "(recursive (chain successor (chain successor successor)) (transpose successor) successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False]])],\n    solution=(recursive (chain successor (chain successor successor)) (transpose successor) successor)\n)",
            "task_solution": "(recursive (chain successor (chain successor successor)) (transpose successor) successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.1705843439558521,
            "num_unique_values": 56,
            "num_values_explored": 136,
            "solution": "(chain (recursive successor (transpose successor) (disjunction successor (transpose successor))) (disjunction zero successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(chain (recursive successor (transpose successor) successor) (disjunction zero successor))\n)",
            "task_solution": "(chain (recursive successor (transpose successor) successor) (disjunction zero successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.18969501601532102,
            "num_unique_values": 66,
            "num_values_explored": 153,
            "solution": "(disjunction equal (chain successor (recursive successor (transpose successor) successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain successor (recursive successor (transpose successor) successor)))\n)",
            "task_solution": "(disjunction equal (chain successor (recursive successor (transpose successor) successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.13461417600046843,
            "num_unique_values": 41,
            "num_values_explored": 105,
            "solution": "(recursive (transpose successor) (chain (disjunction zero successor) successor) equal)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (chain (disjunction zero successor) successor) equal)\n)",
            "task_solution": "(recursive (transpose successor) (chain (disjunction zero successor) successor) equal)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.18602088798070326,
            "num_unique_values": 59,
            "num_values_explored": 135,
            "solution": "(chain (recursive (transpose successor) (recursive equal successor equal) successor) (chain successor successor))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (chain successor successor) (disjunction successor (transpose successor)) equal)\n)",
            "task_solution": "(recursive (chain successor successor) (disjunction successor (transpose successor)) equal)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.20138549798866734,
            "num_unique_values": 67,
            "num_values_explored": 160,
            "solution": "(disjunction equal (recursive successor (transpose successor) (disjunction zero successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True,  True,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n         True]])],\n    solution=(disjunction equal (recursive successor (transpose successor) (disjunction zero successor)))\n)",
            "task_solution": "(disjunction equal (recursive successor (transpose successor) (disjunction zero successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.13732799800345674,
            "num_unique_values": 36,
            "num_values_explored": 108,
            "solution": "(recursive (disjunction (chain successor successor) (transpose successor)) zero successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (disjunction (transpose successor) (chain successor successor)) zero successor)\n)",
            "task_solution": "(recursive (disjunction (transpose successor) (chain successor successor)) zero successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.14840430696494877,
            "num_unique_values": 47,
            "num_values_explored": 120,
            "solution": "(transpose (recursive (chain successor successor) equal (chain successor successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain successor successor)) (chain successor successor) equal)\n)",
            "task_solution": "(recursive (transpose (chain successor successor)) (chain successor successor) equal)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.13164779101498425,
            "num_unique_values": 40,
            "num_values_explored": 106,
            "solution": "(recursive equal (disjunction successor (transpose successor)) (chain successor successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True,  True,\n        False],\n       [ True,  True,  True,  True, False,  True,  True, False, False,\n         True]])],\n    solution=(recursive equal (disjunction successor (transpose successor)) (chain successor successor))\n)",
            "task_solution": "(recursive equal (disjunction successor (transpose successor)) (chain successor successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.13598939700750634,
            "num_unique_values": 37,
            "num_values_explored": 109,
            "solution": "(recursive successor (recursive equal successor equal) (chain successor successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (recursive equal successor equal) (chain successor successor))\n)",
            "task_solution": "(recursive successor (recursive equal successor equal) (chain successor successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.23907402000622824,
            "num_unique_values": 86,
            "num_values_explored": 192,
            "solution": "(transpose (chain (disjunction (chain successor successor) (transpose successor)) successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True]])],\n    solution=(transpose (chain (disjunction (transpose successor) (chain successor successor)) successor))\n)",
            "task_solution": "(transpose (chain (disjunction (transpose successor) (chain successor successor)) successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.2204122449620627,
            "num_unique_values": 77,
            "num_values_explored": 169,
            "solution": "(recursive (transpose (chain (disjunction zero successor) successor)) equal successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain (disjunction zero successor) successor)) equal successor)\n)",
            "task_solution": "(recursive (transpose (chain (disjunction zero successor) successor)) equal successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.13521506398683414,
            "num_unique_values": 37,
            "num_values_explored": 109,
            "solution": "(recursive (transpose successor) (chain successor successor) (disjunction successor equal))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (chain successor successor) (disjunction successor equal))\n)",
            "task_solution": "(recursive (transpose successor) (chain successor successor) (disjunction successor equal))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.21123951498884708,
            "num_unique_values": 78,
            "num_values_explored": 160,
            "solution": "(recursive successor (transpose successor) (transpose (recursive successor successor (recursive equal successor equal))))",
            "solution_weight": 12,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive successor (transpose successor) (recursive successor (transpose successor) equal))\n)",
            "task_solution": "(recursive successor (transpose successor) (recursive successor (transpose successor) equal))",
            "task_solution_weight": 9
        }
    ],
    "success_rate": 0.9487908961593172
}
{
    "num_tasks": 50,
    "num_tasks_solved": 50,
    "results": [
        {
            "elapsed_time": 0.969653376028873,
            "num_unique_values": 512,
            "num_values_explored": 6628,
            "solution": "(recursive equal (transpose successor) (recursive successor zero (transpose successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(recursive equal (transpose successor) (recursive successor zero (transpose successor)))\n)",
            "task_solution": "(recursive equal (transpose successor) (recursive successor zero (transpose successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.3223975489963777,
            "num_unique_values": 636,
            "num_values_explored": 8988,
            "solution": "(recursive (disjunction successor equal) successor (recursive successor equal successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive (disjunction successor equal) successor (recursive successor equal successor))\n)",
            "task_solution": "(recursive (disjunction successor equal) successor (recursive successor equal successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.2422010820009746,
            "num_unique_values": 615,
            "num_values_explored": 8563,
            "solution": "(recursive (transpose successor) (chain successor (transpose successor)) (transpose successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (chain successor (transpose successor)) (transpose successor))\n)",
            "task_solution": "(recursive (transpose successor) (chain successor (transpose successor)) (transpose successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.730936477018986,
            "num_unique_values": 801,
            "num_values_explored": 11272,
            "solution": "(transpose (disjunction equal (recursive successor successor (chain successor successor))))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n         True]])],\n    solution=(transpose (disjunction equal (recursive successor successor (chain successor successor))))\n)",
            "task_solution": "(transpose (disjunction equal (recursive successor successor (chain successor successor))))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.8637079530162737,
            "num_unique_values": 877,
            "num_values_explored": 12126,
            "solution": "(chain (disjunction zero (chain successor successor)) (chain successor successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction zero (chain successor successor)) (chain successor successor))\n)",
            "task_solution": "(chain (disjunction zero (chain successor successor)) (chain successor successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 2.026891253015492,
            "num_unique_values": 984,
            "num_values_explored": 13299,
            "solution": "(disjunction (chain successor successor) (recursive (transpose successor) successor equal))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(disjunction (chain successor successor) (recursive (transpose successor) successor equal))\n)",
            "task_solution": "(disjunction (chain successor successor) (recursive (transpose successor) successor equal))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.7270407869946212,
            "num_unique_values": 780,
            "num_values_explored": 11225,
            "solution": "(transpose (chain (disjunction successor (transpose successor)) (disjunction successor equal)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True]])],\n    solution=(transpose (chain (disjunction successor (transpose successor)) (disjunction successor equal)))\n)",
            "task_solution": "(transpose (chain (disjunction successor (transpose successor)) (disjunction successor equal)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.133238750975579,
            "num_unique_values": 587,
            "num_values_explored": 7843,
            "solution": "(recursive equal (chain successor (disjunction successor (transpose successor))) successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (chain successor (disjunction successor (transpose successor))) successor)\n)",
            "task_solution": "(recursive equal (chain successor (disjunction successor (transpose successor))) successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.009736385953147,
            "num_unique_values": 524,
            "num_values_explored": 6791,
            "solution": "(recursive successor (chain successor successor) (disjunction successor (transpose successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False,  True,  True, False,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (chain successor successor) (disjunction successor (transpose successor)))\n)",
            "task_solution": "(recursive successor (chain successor successor) (disjunction successor (transpose successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.6537207119981758,
            "num_unique_values": 747,
            "num_values_explored": 10680,
            "solution": "(recursive (chain successor (transpose (chain successor successor))) equal successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor (transpose (chain successor successor))) equal successor)\n)",
            "task_solution": "(recursive (chain successor (transpose (chain successor successor))) equal successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.7535813780268654,
            "num_unique_values": 815,
            "num_values_explored": 11384,
            "solution": "(chain zero (disjunction successor (recursive equal successor (transpose successor))))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain zero (disjunction successor (recursive equal successor (transpose successor))))\n)",
            "task_solution": "(chain zero (disjunction successor (recursive equal successor (transpose successor))))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.7999477930134162,
            "num_unique_values": 846,
            "num_values_explored": 11770,
            "solution": "(chain (transpose successor) (recursive (chain successor successor) zero successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (transpose successor) (recursive (chain successor successor) zero successor))\n)",
            "task_solution": "(chain (transpose successor) (recursive (chain successor successor) zero successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.75040329399053,
            "num_unique_values": 803,
            "num_values_explored": 11274,
            "solution": "(transpose (disjunction equal (recursive (chain successor successor) equal successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True]])],\n    solution=(transpose (disjunction equal (recursive (chain successor successor) equal successor)))\n)",
            "task_solution": "(transpose (disjunction equal (recursive (chain successor successor) equal successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.1117186379851773,
            "num_unique_values": 574,
            "num_values_explored": 7675,
            "solution": "(recursive successor (chain (transpose (chain successor successor)) successor) successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive successor (chain (transpose (chain successor successor)) successor) successor)\n)",
            "task_solution": "(recursive successor (chain (transpose (chain successor successor)) successor) successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.8836508310050704,
            "num_unique_values": 887,
            "num_values_explored": 12372,
            "solution": "(chain (recursive successor (transpose successor) (disjunction successor equal)) successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(chain (recursive successor (transpose successor) (disjunction successor equal)) successor)\n)",
            "task_solution": "(chain (recursive successor (transpose successor) (disjunction successor equal)) successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.617197406012565,
            "num_unique_values": 736,
            "num_values_explored": 10533,
            "solution": "(recursive (transpose (recursive zero zero (transpose successor))) successor equal)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (transpose (recursive zero zero (transpose successor))) successor equal)\n)",
            "task_solution": "(recursive (transpose (recursive zero zero (transpose successor))) successor equal)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.240027911029756,
            "num_unique_values": 600,
            "num_values_explored": 8237,
            "solution": "(recursive (transpose successor) successor (disjunction equal (chain successor successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) successor (disjunction equal (chain successor successor)))\n)",
            "task_solution": "(recursive (transpose successor) successor (disjunction equal (chain successor successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.7288169090170413,
            "num_unique_values": 787,
            "num_values_explored": 11236,
            "solution": "(transpose (chain (recursive successor (chain successor successor) successor) successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False, False, False,  True,  True, False,\n        False]])],\n    solution=(transpose (chain (recursive successor (chain successor successor) successor) successor))\n)",
            "task_solution": "(transpose (chain (recursive successor (chain successor successor) successor) successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.7603648590156808,
            "num_unique_values": 829,
            "num_values_explored": 11471,
            "solution": "(chain successor (chain successor (chain successor (chain successor successor))))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (chain successor (chain successor (chain successor successor))))\n)",
            "task_solution": "(chain successor (chain successor (chain successor (chain successor successor))))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.829823130974546,
            "num_unique_values": 860,
            "num_values_explored": 11935,
            "solution": "(chain (disjunction successor equal) (disjunction equal (chain successor successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False, False,  True,  True,  True,  True, False, False, False,\n        False],\n       [False, False, False,  True,  True,  True,  True, False, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(chain (disjunction successor equal) (disjunction equal (chain successor successor)))\n)",
            "task_solution": "(chain (disjunction successor equal) (disjunction equal (chain successor successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.386071412009187,
            "num_unique_values": 667,
            "num_values_explored": 9226,
            "solution": "(recursive (disjunction zero successor) (transpose (chain successor successor)) equal)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(recursive (disjunction zero successor) (transpose (chain successor successor)) equal)\n)",
            "task_solution": "(recursive (disjunction zero successor) (transpose (chain successor successor)) equal)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.5214182710042223,
            "num_unique_values": 706,
            "num_values_explored": 9951,
            "solution": "(recursive (disjunction zero (chain successor successor)) successor (transpose successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (disjunction zero (chain successor successor)) successor (transpose successor))\n)",
            "task_solution": "(recursive (disjunction zero (chain successor successor)) successor (transpose successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.8866740250377916,
            "num_unique_values": 475,
            "num_values_explored": 5943,
            "solution": "(recursive successor successor (recursive equal (chain successor successor) successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor successor (recursive equal (chain successor successor) successor))\n)",
            "task_solution": "(recursive successor successor (recursive equal (chain successor successor) successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.9774949389975518,
            "num_unique_values": 957,
            "num_values_explored": 12954,
            "solution": "(disjunction equal (recursive (chain successor successor) zero (transpose successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False, False, False,  True, False,  True, False, False, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (recursive (chain successor successor) zero (transpose successor)))\n)",
            "task_solution": "(disjunction equal (recursive (chain successor successor) zero (transpose successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.3824142729863524,
            "num_unique_values": 647,
            "num_values_explored": 9087,
            "solution": "(recursive (chain successor successor) (disjunction zero successor) (transpose successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain successor successor) (disjunction zero successor) (transpose successor))\n)",
            "task_solution": "(recursive (chain successor successor) (disjunction zero successor) (transpose successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.823337979032658,
            "num_unique_values": 858,
            "num_values_explored": 11922,
            "solution": "(chain (disjunction successor equal) (recursive successor (transpose successor) successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False]])],\n    solution=(chain (disjunction successor equal) (recursive successor (transpose successor) successor))\n)",
            "task_solution": "(chain (disjunction successor equal) (recursive successor (transpose successor) successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.7605758670251817,
            "num_unique_values": 793,
            "num_values_explored": 11249,
            "solution": "(transpose (chain (disjunction successor (transpose (chain successor successor))) successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(transpose (chain (disjunction successor (transpose (chain successor successor))) successor))\n)",
            "task_solution": "(transpose (chain (disjunction successor (transpose (chain successor successor))) successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.2875784309580922,
            "num_unique_values": 620,
            "num_values_explored": 8725,
            "solution": "(recursive (transpose successor) (recursive (transpose successor) successor equal) successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (recursive (transpose successor) successor equal) successor)\n)",
            "task_solution": "(recursive (transpose successor) (recursive (transpose successor) successor equal) successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.5098490759846754,
            "num_unique_values": 705,
            "num_values_explored": 9939,
            "solution": "(recursive (chain (disjunction zero successor) successor) successor (transpose successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive (chain (disjunction zero successor) successor) successor (transpose successor))\n)",
            "task_solution": "(recursive (chain (disjunction zero successor) successor) successor (transpose successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.0045264799846336,
            "num_unique_values": 527,
            "num_values_explored": 6819,
            "solution": "(recursive equal (chain zero successor) (transpose (chain successor successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(recursive equal (chain zero successor) (transpose (chain successor successor)))\n)",
            "task_solution": "(recursive equal (chain zero successor) (transpose (chain successor successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.3337010179529898,
            "num_unique_values": 638,
            "num_values_explored": 8999,
            "solution": "(recursive (disjunction successor equal) equal (recursive successor equal successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (disjunction successor equal) equal (recursive successor equal successor))\n)",
            "task_solution": "(recursive (disjunction successor equal) equal (recursive successor equal successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.8664837789838202,
            "num_unique_values": 878,
            "num_values_explored": 12127,
            "solution": "(chain (disjunction zero (chain successor successor)) (disjunction zero successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (disjunction zero (chain successor successor)) (disjunction zero successor))\n)",
            "task_solution": "(chain (disjunction zero (chain successor successor)) (disjunction zero successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.7937150719808415,
            "num_unique_values": 838,
            "num_values_explored": 11491,
            "solution": "(chain successor (disjunction successor (recursive (transpose successor) equal successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False,  True,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain successor (disjunction successor (recursive (transpose successor) equal successor)))\n)",
            "task_solution": "(chain successor (disjunction successor (recursive (transpose successor) equal successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.081862260994967,
            "num_unique_values": 561,
            "num_values_explored": 7520,
            "solution": "(recursive successor (recursive successor successor (chain successor successor)) equal)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (recursive successor successor (chain successor successor)) equal)\n)",
            "task_solution": "(recursive successor (recursive successor successor (chain successor successor)) equal)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.4110285179922357,
            "num_unique_values": 674,
            "num_values_explored": 9396,
            "solution": "(recursive (transpose (disjunction zero successor)) equal (chain zero successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose (disjunction zero successor)) equal (chain zero successor))\n)",
            "task_solution": "(recursive (transpose (disjunction zero successor)) equal (chain zero successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.9322383389808238,
            "num_unique_values": 892,
            "num_values_explored": 12428,
            "solution": "(chain (recursive successor (chain (transpose successor) successor) successor) successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True, False, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(chain (recursive successor (chain (transpose successor) successor) successor) successor)\n)",
            "task_solution": "(chain (recursive successor (chain (transpose successor) successor) successor) successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.541942810988985,
            "num_unique_values": 719,
            "num_values_explored": 10156,
            "solution": "(recursive (chain successor (chain successor successor)) (transpose successor) successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False]])],\n    solution=(recursive (chain successor (chain successor successor)) (transpose successor) successor)\n)",
            "task_solution": "(recursive (chain successor (chain successor successor)) (transpose successor) successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.8405583300045691,
            "num_unique_values": 870,
            "num_values_explored": 12083,
            "solution": "(chain (recursive successor (transpose successor) successor) (disjunction zero successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False, False, False, False, False,\n        False],\n       [False, False,  True, False,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False, False, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True, False,\n         True]])],\n    solution=(chain (recursive successor (transpose successor) successor) (disjunction zero successor))\n)",
            "task_solution": "(chain (recursive successor (transpose successor) successor) (disjunction zero successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 2.0315463389852084,
            "num_unique_values": 961,
            "num_values_explored": 12986,
            "solution": "(disjunction equal (chain successor (recursive successor (transpose successor) successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False, False, False, False, False, False,\n        False],\n       [False,  True, False,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False, False, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])],\n    solution=(disjunction equal (chain successor (recursive successor (transpose successor) successor)))\n)",
            "task_solution": "(disjunction equal (chain successor (recursive successor (transpose successor) successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.294876654050313,
            "num_unique_values": 623,
            "num_values_explored": 8750,
            "solution": "(recursive (transpose successor) (chain (disjunction zero successor) successor) equal)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False,  True,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (chain (disjunction zero successor) successor) equal)\n)",
            "task_solution": "(recursive (transpose successor) (chain (disjunction zero successor) successor) equal)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.359539449971635,
            "num_unique_values": 665,
            "num_values_explored": 9202,
            "solution": "(recursive (chain successor successor) (disjunction successor (transpose successor)) equal)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive (chain successor successor) (disjunction successor (transpose successor)) equal)\n)",
            "task_solution": "(recursive (chain successor successor) (disjunction successor (transpose successor)) equal)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.975442617025692,
            "num_unique_values": 953,
            "num_values_explored": 12931,
            "solution": "(disjunction equal (recursive successor (transpose successor) (disjunction zero successor)))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True, False,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True, False,  True,  True,  True, False, False, False,\n        False],\n       [ True, False,  True, False,  True,  True,  True, False, False,\n        False],\n       [ True,  True, False,  True, False,  True,  True,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True,  True,  True,\n        False],\n       [ True,  True, False,  True, False,  True, False,  True,  True,\n         True],\n       [ True, False,  True, False,  True, False,  True, False,  True,\n         True]])],\n    solution=(disjunction equal (recursive successor (transpose successor) (disjunction zero successor)))\n)",
            "task_solution": "(disjunction equal (recursive successor (transpose successor) (disjunction zero successor)))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.71160013100598,
            "num_unique_values": 760,
            "num_values_explored": 11008,
            "solution": "(recursive (disjunction (transpose successor) (chain successor successor)) zero successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (disjunction (transpose successor) (chain successor successor)) zero successor)\n)",
            "task_solution": "(recursive (disjunction (transpose successor) (chain successor successor)) zero successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.4638251829892397,
            "num_unique_values": 684,
            "num_values_explored": 9653,
            "solution": "(recursive (transpose (chain successor successor)) (chain successor successor) equal)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [ True, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False,  True, False,  True, False,  True, False, False,\n        False],\n       [False, False, False,  True, False,  True, False,  True, False,\n        False],\n       [False, False, False, False,  True, False,  True, False, False,\n        False],\n       [False, False, False, False, False,  True, False,  True, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain successor successor)) (chain successor successor) equal)\n)",
            "task_solution": "(recursive (transpose (chain successor successor)) (chain successor successor) equal)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.0401557040167972,
            "num_unique_values": 544,
            "num_values_explored": 7031,
            "solution": "(recursive equal (disjunction successor (transpose successor)) (chain successor successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False,  True,  True,\n        False],\n       [ True,  True,  True,  True, False,  True,  True, False, False,\n         True]])],\n    solution=(recursive equal (disjunction successor (transpose successor)) (chain successor successor))\n)",
            "task_solution": "(recursive equal (disjunction successor (transpose successor)) (chain successor successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.0288726550061256,
            "num_unique_values": 534,
            "num_values_explored": 6955,
            "solution": "(recursive successor (recursive equal successor equal) (chain successor successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True, False,  True, False,  True, False,  True, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])],\n    solution=(recursive successor (recursive equal successor equal) (chain successor successor))\n)",
            "task_solution": "(recursive successor (recursive equal successor equal) (chain successor successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.7399709059973247,
            "num_unique_values": 796,
            "num_values_explored": 11252,
            "solution": "(transpose (chain (disjunction (transpose successor) (chain successor successor)) successor))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [ True, False, False,  True, False, False, False, False, False,\n        False],\n       [False,  True, False, False,  True, False, False, False, False,\n        False],\n       [False, False,  True, False, False,  True, False, False, False,\n        False],\n       [False, False, False,  True, False, False,  True, False, False,\n        False],\n       [False, False, False, False,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False,  True, False, False,  True,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n         True]])],\n    solution=(transpose (chain (disjunction (transpose successor) (chain successor successor)) successor))\n)",
            "task_solution": "(transpose (chain (disjunction (transpose successor) (chain successor successor)) successor))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.6365630509681068,
            "num_unique_values": 743,
            "num_values_explored": 10616,
            "solution": "(recursive (transpose (chain (disjunction zero successor) successor)) equal successor)",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False]])],\n    solution=(recursive (transpose (chain (disjunction zero successor) successor)) equal successor)\n)",
            "task_solution": "(recursive (transpose (chain (disjunction zero successor) successor)) equal successor)",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 1.2534538410254754,
            "num_unique_values": 608,
            "num_values_explored": 8480,
            "solution": "(recursive (transpose successor) (chain successor successor) (disjunction successor equal))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[ True,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False,  True,  True,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False,  True,  True,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False,  True,  True,  True,  True,  True, False,\n        False],\n       [False, False, False, False,  True,  True,  True,  True,  True,\n        False],\n       [False, False, False, False, False,  True,  True,  True, False,\n        False],\n       [False, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False]])],\n    solution=(recursive (transpose successor) (chain successor successor) (disjunction successor equal))\n)",
            "task_solution": "(recursive (transpose successor) (chain successor successor) (disjunction successor equal))",
            "task_solution_weight": 9
        },
        {
            "elapsed_time": 0.9694060060428455,
            "num_unique_values": 505,
            "num_values_explored": 6573,
            "solution": "(recursive successor (transpose successor) (recursive successor (transpose successor) equal))",
            "solution_weight": 9,
            "success": true,
            "task": "Task(\n    inputs_dict={'zero': [array([ True, False, False, False, False, False, False, False, False,\n       False])], 'successor': [array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True],\n       [False, False, False, False, False, False, False, False, False,\n        False]])], 'equal': [array([[ True, False, False, False, False, False, False, False, False,\n        False],\n       [False,  True, False, False, False, False, False, False, False,\n        False],\n       [False, False,  True, False, False, False, False, False, False,\n        False],\n       [False, False, False,  True, False, False, False, False, False,\n        False],\n       [False, False, False, False,  True, False, False, False, False,\n        False],\n       [False, False, False, False, False,  True, False, False, False,\n        False],\n       [False, False, False, False, False, False,  True, False, False,\n        False],\n       [False, False, False, False, False, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False,  True,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n         True]])], 'bot': [array([False, False, False, False, False, False, False, False, False,\n       False])]},\n    outputs=[array([[False,  True, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True],\n       [ True,  True,  True,  True,  True,  True,  True,  True,  True,\n         True]])],\n    solution=(recursive successor (transpose successor) (recursive successor (transpose successor) equal))\n)",
            "task_solution": "(recursive successor (transpose successor) (recursive successor (transpose successor) equal))",
            "task_solution_weight": 9
        }
    ],
    "success_rate": 1.0
}